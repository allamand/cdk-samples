// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Multi-AZ CassKop 1`] = `
Object {
  "Outputs": Object {
    "AZOutput": Object {
      "Value": "dummy1a,dummy1b,dummy1c",
    },
    "CassKopClusterConfigCommandA090E985": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks update-kubeconfig --name ",
            Object {
              "Ref": "CassKopCluster5683FE9F",
            },
            " --region eu-west-1 --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "AdminRole38563C57",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
    "CassKopClusterGetTokenCommand2CFE4645": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks get-token --cluster-name ",
            Object {
              "Ref": "CassKopCluster5683FE9F",
            },
            " --region eu-west-1 --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "AdminRole38563C57",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608ArtifactHashECA71323": Object {
      "Description": "Artifact hash for asset \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3BucketDCF19BBB": Object {
      "Description": "S3 bucket for asset \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB": Object {
      "Description": "S3 key for asset version \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42ArtifactHashDDB9E62D": Object {
      "Description": "Artifact hash for asset \\"1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42\\"",
      "Type": "String",
    },
    "AssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3Bucket9EBF7C44": Object {
      "Description": "S3 bucket for asset \\"1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42\\"",
      "Type": "String",
    },
    "AssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3VersionKey752BCCC4": Object {
      "Description": "S3 key for asset version \\"1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42\\"",
      "Type": "String",
    },
    "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aArtifactHash84962CBE": Object {
      "Description": "Artifact hash for asset \\"7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690a\\"",
      "Type": "String",
    },
    "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3Bucket24A39C33": Object {
      "Description": "S3 bucket for asset \\"7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690a\\"",
      "Type": "String",
    },
    "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3VersionKey0E38F1A8": Object {
      "Description": "S3 key for asset version \\"7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690a\\"",
      "Type": "String",
    },
    "AssetParameters99a51fc744784f777dee4eaf548bf0981b9d3a6087329b9124ff70f546a048afArtifactHash71C8E2E4": Object {
      "Description": "Artifact hash for asset \\"99a51fc744784f777dee4eaf548bf0981b9d3a6087329b9124ff70f546a048af\\"",
      "Type": "String",
    },
    "AssetParameters99a51fc744784f777dee4eaf548bf0981b9d3a6087329b9124ff70f546a048afS3Bucket151B99CC": Object {
      "Description": "S3 bucket for asset \\"99a51fc744784f777dee4eaf548bf0981b9d3a6087329b9124ff70f546a048af\\"",
      "Type": "String",
    },
    "AssetParameters99a51fc744784f777dee4eaf548bf0981b9d3a6087329b9124ff70f546a048afS3VersionKey786A188E": Object {
      "Description": "S3 key for asset version \\"99a51fc744784f777dee4eaf548bf0981b9d3a6087329b9124ff70f546a048af\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2ArtifactHashE86B38C7": Object {
      "Description": "Artifact hash for asset \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2": Object {
      "Description": "S3 bucket for asset \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A": Object {
      "Description": "S3 key for asset version \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37ArtifactHash75842D94": Object {
      "Description": "Artifact hash for asset \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3BucketD01B79A5": Object {
      "Description": "S3 bucket for asset \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00": Object {
      "Description": "S3 key for asset version \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParameterse4a77bba8cae1cf36e2ce293a7e55cc290855d439063fff3c16c66623693d868ArtifactHash5B510BBF": Object {
      "Description": "Artifact hash for asset \\"e4a77bba8cae1cf36e2ce293a7e55cc290855d439063fff3c16c66623693d868\\"",
      "Type": "String",
    },
    "AssetParameterse4a77bba8cae1cf36e2ce293a7e55cc290855d439063fff3c16c66623693d868S3BucketCC5107F4": Object {
      "Description": "S3 bucket for asset \\"e4a77bba8cae1cf36e2ce293a7e55cc290855d439063fff3c16c66623693d868\\"",
      "Type": "String",
    },
    "AssetParameterse4a77bba8cae1cf36e2ce293a7e55cc290855d439063fff3c16c66623693d868S3VersionKey6466C026": Object {
      "Description": "S3 key for asset version \\"e4a77bba8cae1cf36e2ce293a7e55cc290855d439063fff3c16c66623693d868\\"",
      "Type": "String",
    },
    "SsmParameterValueawsserviceeksoptimizedami117amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/eks/optimized-ami/1.17/amazon-linux-2/recommended/image_id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": Object {
      "DependsOn": Array [
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3BucketDCF19BBB",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AdminRole38563C57": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::382076407153:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopCluster5683FE9F": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlProviderSecurityGroupA7A18E9D",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableD98824C7",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
        "VpcPrivateSubnet3SubnetF258B56E",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTable93458DBB",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
        "VpcPublicSubnet3SubnetBE12F0B6",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "AttributesRevision": 2,
        "Config": Object {
          "name": "CdkEksCluster",
          "resourcesVpcConfig": Object {
            "endpointPrivateAccess": true,
            "endpointPublicAccess": true,
            "securityGroupIds": Array [
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterControlPlaneSecurityGroup99EA84BD",
                  "GroupId",
                ],
              },
            ],
            "subnetIds": Array [
              Object {
                "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
              },
              Object {
                "Ref": "VpcPublicSubnet2Subnet691E08A3",
              },
              Object {
                "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
              },
              Object {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              Object {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
              Object {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E",
              },
            ],
          },
          "roleArn": Object {
            "Fn::GetAtt": Array [
              "CassKopClusterRole88533F86",
              "Arn",
            ],
          },
          "version": "1.17",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.CasskopawscdkawseksClusterResourceProviderframeworkonEventDEC5D217Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterAwsAuthmanifest4018B69E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"aws-auth\\",\\"namespace\\":\\"kube-system\\"},\\"data\\":{\\"mapRoles\\":\\"[{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AdminRole38563C57",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AdminRole38563C57",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterSpotInstanceRole3796F757",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{SessionName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\",\\\\\\"system:node-proxier\\\\\\"]}]\\",\\"mapUsers\\":\\"[]\\",\\"mapAccounts\\":\\"[]\\"}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterControlPlaneSecurityGroup99EA84BD": Object {
      "Properties": Object {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterKubectlProviderSecurityGroup5151E995443CA6B0417": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterKubectlProviderSecurityGroup5151E995:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterControlPlaneSecurityGroup99EA84BD",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterKubectlProviderSecurityGroupA7A18E9D",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C970904433646F5CD": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterSpotInstanceSecurityGroupC3C97090:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterControlPlaneSecurityGroup99EA84BD",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterCreationRoleDDB5156B": Object {
      "DependsOn": Array [
        "CassKopClusterKubectlProviderSecurityGroupA7A18E9D",
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableD98824C7",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
        "VpcPrivateSubnet3SubnetF258B56E",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTable93458DBB",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
        "VpcPublicSubnet3SubnetBE12F0B6",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::382076407153:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterCreationRoleDefaultPolicy0C3AACE5": Object {
      "DependsOn": Array [
        "CassKopClusterKubectlProviderSecurityGroupA7A18E9D",
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableD98824C7",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
        "VpcPrivateSubnet3SubnetF258B56E",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTable93458DBB",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
        "VpcPublicSubnet3SubnetBE12F0B6",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterRole88533F86",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:eu-west-1:382076407153:cluster/CdkEksCluster",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:eu-west-1:382076407153:cluster/CdkEksCluster/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":eks:eu-west-1:382076407153:fargateprofile/CdkEksCluster/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "iam:GetRole",
                "iam:listAttachedRolePolicies",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ec2:DescribeVpcs",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:eu-west-1:382076407153:vpc/",
                    Object {
                      "Ref": "Vpc8378EB38",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterCreationRoleDDB5156B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterKubectlProviderSecurityGroupA7A18E9D": Object {
      "Properties": Object {
        "GroupDescription": "Comminication between KubectlProvider and EKS Control Plane",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "CassKopClusterKubectlReadyBarrier346C8999": Object {
      "DependsOn": Array [
        "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
        "CassKopClusterfargateprofileFargateProfileE22A2CC1",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "CassKopCluster5683FE9F",
      ],
      "Properties": Object {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "CassKopClusterNodegroupnodegroupAZa4BA33BD2": Object {
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": Array [
          "m5.large",
        ],
        "Labels": Object {
          "cdk-nodegroup": "AZa",
        },
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
            "Arn",
          ],
        },
        "NodegroupName": "CdkEksCluster-AZa",
        "RemoteAccess": Object {
          "Ec2SshKey": "sallaman",
        },
        "ScalingConfig": Object {
          "DesiredSize": 1,
          "MaxSize": 10,
          "MinSize": 1,
        },
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
        ],
        "Tags": Object {
          "cdk-nodegroup": "AZa",
        },
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterNodegroupnodegroupAZb6B169D3A": Object {
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": Array [
          "m5.large",
        ],
        "Labels": Object {
          "cdk-nodegroup": "AZb",
        },
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
            "Arn",
          ],
        },
        "NodegroupName": "CdkEksCluster-AZb",
        "RemoteAccess": Object {
          "Ec2SshKey": "sallaman",
        },
        "ScalingConfig": Object {
          "DesiredSize": 1,
          "MaxSize": 10,
          "MinSize": 1,
        },
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
        "Tags": Object {
          "cdk-nodegroup": "AZb",
        },
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterNodegroupnodegroupAZc77B0FA59": Object {
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": Array [
          "m5.large",
        ],
        "Labels": Object {
          "cdk-nodegroup": "AZc",
        },
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
            "Arn",
          ],
        },
        "NodegroupName": "CdkEksCluster-AZc",
        "RemoteAccess": Object {
          "Ec2SshKey": "sallaman",
        },
        "ScalingConfig": Object {
          "DesiredSize": 1,
          "MaxSize": 10,
          "MinSize": 1,
        },
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E",
          },
        ],
        "Tags": Object {
          "cdk-nodegroup": "AZc",
        },
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterOpenIdConnectProvider1554EB4B": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClientIDList": Array [
          "sts.amazonaws.com",
        ],
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
            "Arn",
          ],
        },
        "ThumbprintList": Array [
          "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
        ],
        "Url": Object {
          "Fn::GetAtt": Array [
            "CassKopCluster5683FE9F",
            "OpenIdConnectIssuerUrl",
          ],
        },
      },
      "Type": "Custom::AWSCDKOpenIdConnectProvider",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterRole88533F86": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterSpotASG93EF1913": Object {
      "Properties": Object {
        "LaunchConfigurationName": Object {
          "Ref": "CassKopClusterSpotLaunchConfigFA810380",
        },
        "MaxInstanceLifetime": 604800,
        "MaxSize": "20",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "CassKopCluster5683FE9F",
                  },
                ],
              ],
            },
            "PropagateAtLaunch": true,
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "Casskop/CassKopCluster/Spot",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
          Object {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "CassKopClusterSpotInstanceProfileF7B9468A": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterSpotInstanceRole3796F757",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "CassKopClusterSpotInstanceRole3796F757": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "CassKopCluster5683FE9F",
                  },
                ],
              ],
            },
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/CassKopCluster/Spot",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterSpotInstanceSecurityGroup21F521B6": Object {
      "Properties": Object {
        "GroupDescription": "Casskop/CassKopCluster/Spot/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "CassKopCluster5683FE9F",
                  },
                ],
              ],
            },
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/CassKopCluster/Spot",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4102565535B1544517": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterControlPlaneSecurityGroup27A08AA4:1025-65535",
        "FromPort": 1025,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterControlPlaneSecurityGroup99EA84BD",
            "GroupId",
          ],
        },
        "ToPort": 65535,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4443D85E169E": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterControlPlaneSecurityGroup27A08AA4:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterControlPlaneSecurityGroup99EA84BD",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC29206DE9": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterSpotInstanceSecurityGroupC3C97090:ALL TRAFFIC",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterSpotInstanceSecurityGroupfromCasskopclusterSG0E6F36F6ALLTRAFFIC88C0EC54": Object {
      "Properties": Object {
        "Description": "allow all traffic from cluster security group",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopCluster5683FE9F",
            "ClusterSecurityGroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterSpotLaunchConfigFA810380": Object {
      "DependsOn": Array [
        "CassKopClusterSpotInstanceRole3796F757",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "CassKopClusterSpotInstanceProfileF7B9468A",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceeksoptimizedami117amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.medium",
        "KeyName": "sallaman",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "CassKopClusterSpotInstanceSecurityGroup21F521B6",
              "GroupId",
            ],
          },
        ],
        "SpotPrice": "0.05",
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash
set -o xtrace
/etc/eks/bootstrap.sh ",
                Object {
                  "Ref": "CassKopCluster5683FE9F",
                },
                " --kubelet-extra-args \\"--node-labels lifecycle=Ec2Spot --register-with-taints=spotInstance=true:PreferNoSchedule\\" --use-max-pods true
/opt/aws/bin/cfn-signal --exit-code $? --stack Casskop --resource CassKopClusterSpotASG93EF1913 --region eu-west-1",
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "CassKopClusterchartspotinterrupthandler80D296D7": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "Chart": "aws-node-termination-handler",
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "CreateNamespace": true,
        "Namespace": "kube-system",
        "Release": "asskopcasskopclusterchartspotinterrupthandlerb581dd3b",
        "Repository": "https://aws.github.io/eks-charts",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
        "Values": "{\\"nodeSelector.lifecycle\\":\\"Ec2Spot\\"}",
        "Version": "0.7.3",
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterfargateprofileFargateProfileE22A2CC1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "Config": Object {
          "clusterName": Object {
            "Ref": "CassKopCluster5683FE9F",
          },
          "podExecutionRoleArn": Object {
            "Fn::GetAtt": Array [
              "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
              "Arn",
            ],
          },
          "selectors": Array [
            Object {
              "namespace": "fargate",
            },
            Object {
              "namespace": "fargate2",
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.CasskopawscdkawseksClusterResourceProviderframeworkonEventDEC5D217Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-FargateProfile",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks-fargate-pods.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"kube-system\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustermanifestnamespaceeksutilsadminDDA150EC": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"eksutils\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"fargate\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaalbingressConditionJson0299F979": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:alb-ingress-controller\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaalbingressRole92AC458C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClustersaalbingressConditionJson0299F979",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebAcl",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "wafv2:GetWebACL",
                "wafv2:GetWebACLForResource",
                "wafv2:AssociateWebACL",
                "wafv2:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "shield:DescribeProtection",
                "shield:GetSubscriptionState",
                "shield:DeleteProtection",
                "shield:CreateProtection",
                "shield:DescribeSubscription",
                "shield:ListProtections",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE",
        "Roles": Array [
          Object {
            "Ref": "CassKopClustersaalbingressRole92AC458C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClustersaalbingressmanifestsaalbingressServiceAccountResourceC95A1446": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClustersaalbingressRole92AC458C",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaebscsicontrollersaConditionJson818A84ED": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:ebs-csi-controller-sa\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaebscsicontrollersaRole50FB61C3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClustersaebscsicontrollersaConditionJson818A84ED",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:AttachVolume",
                "ec2:CreateSnapshot",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DeleteSnapshot",
                "ec2:DeleteTags",
                "ec2:DeleteVolume",
                "ec2:DescribeInstances",
                "ec2:DescribeSnapshots",
                "ec2:DescribeTags",
                "ec2:DescribeVolumes",
                "ec2:DetachVolume",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7",
        "Roles": Array [
          Object {
            "Ref": "CassKopClustersaebscsicontrollersaRole50FB61C3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClustersaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResource4BF87613": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"ebs-csi-controller-sa\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClustersaebscsicontrollersaRole50FB61C3",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaexternaldnsConditionJsonF3353872": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:external-dns\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaexternaldnsRole9F1D457B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClustersaexternaldnsConditionJsonF3353872",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "route53:ChangeResourceRecordSets",
              "Effect": "Allow",
              "Resource": "arn:aws:route53:::hostedzone/*",
            },
            Object {
              "Action": Array [
                "route53:ListHostedZones",
                "route53:ListResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104",
        "Roles": Array [
          Object {
            "Ref": "CassKopClustersaexternaldnsRole9F1D457B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClustersaexternaldnsmanifestsaexternaldnsServiceAccountResource1C55A672": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"external-dns\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClustersaexternaldnsRole9F1D457B",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:cluster-autoscaler\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccountclusterautoscalerRole34C21866": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "ec2:DescribeLaunchTemplateVersions",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:eksutils:eksutils-admin\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:fargate:eksutils-admin\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"fargate\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"eksutils-admin\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"eksutils\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"eksutils-admin\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": Object {
      "DependsOn": Array [
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3BucketD01B79A5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "iam:CreateOpenIDConnectProvider",
                    "iam:DeleteOpenIDConnectProvider",
                    "iam:UpdateOpenIDConnectProviderThumbprint",
                    "iam:AddClientIDToOpenIDConnectProvider",
                    "iam:RemoveClientIDFromOpenIDConnectProvider",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.48.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.64.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.80.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.16.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3RouteTable93458DBB": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.32.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "albingresscontrollerK8sResource87829C97": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterAwsAuthmanifest4018B69E",
        "CassKopClusterchartspotinterrupthandler80D296D7",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterKubectlProviderSecurityGroup5151E995443CA6B0417",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C970904433646F5CD",
        "CassKopClusterControlPlaneSecurityGroup99EA84BD",
        "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
        "CassKopClusterfargateprofileFargateProfileE22A2CC1",
        "CassKopClusterKubectlProviderSecurityGroupA7A18E9D",
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
        "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
        "CassKopClusterNodegroupnodegroupAZa4BA33BD2",
        "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
        "CassKopClusterNodegroupnodegroupAZb6B169D3A",
        "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
        "CassKopClusterNodegroupnodegroupAZc77B0FA59",
        "CassKopClusterOpenIdConnectProvider1554EB4B",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "CassKopCluster5683FE9F",
        "CassKopClusterRole88533F86",
        "CassKopClustersaalbingressConditionJson0299F979",
        "CassKopClustersaalbingressmanifestsaalbingressServiceAccountResourceC95A1446",
        "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE",
        "CassKopClustersaalbingressRole92AC458C",
        "CassKopClustersaebscsicontrollersaConditionJson818A84ED",
        "CassKopClustersaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResource4BF87613",
        "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7",
        "CassKopClustersaebscsicontrollersaRole50FB61C3",
        "CassKopClustersaexternaldnsConditionJsonF3353872",
        "CassKopClustersaexternaldnsmanifestsaexternaldnsServiceAccountResource1C55A672",
        "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104",
        "CassKopClustersaexternaldnsRole9F1D457B",
        "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
        "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71",
        "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
        "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
        "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6",
        "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
        "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
        "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA",
        "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
        "CassKopClusterSpotASG93EF1913",
        "CassKopClusterSpotInstanceProfileF7B9468A",
        "CassKopClusterSpotInstanceRole3796F757",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4102565535B1544517",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4443D85E169E",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC29206DE9",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopclusterSG0E6F36F6ALLTRAFFIC88C0EC54",
        "CassKopClusterSpotInstanceSecurityGroup21F521B6",
        "CassKopClusterSpotLaunchConfigFA810380",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\",\\"extensions\\"],\\"resources\\":[\\"configmaps\\",\\"endpoints\\",\\"events\\",\\"ingresses\\",\\"ingresses/status\\",\\"services\\",\\"pods/status\\"],\\"verbs\\":[\\"create\\",\\"get\\",\\"list\\",\\"update\\",\\"watch\\",\\"patch\\"]},{\\"apiGroups\\":[\\"\\",\\"extensions\\"],\\"resources\\":[\\"nodes\\",\\"pods\\",\\"secrets\\",\\"services\\",\\"namespaces\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"alb-ingress-controller\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"alb-ingress-controller\\",\\"args\\":[\\"--ingress-class=alb\\",\\"--cluster-name=",
              Object {
                "Ref": "CassKopCluster5683FE9F",
              },
              "\\",\\"--feature-gates=wafv2=false\\",\\"--aws-vpc-id=",
              Object {
                "Ref": "Vpc8378EB38",
              },
              "\\",\\"--aws-region=eu-west-1\\"],\\"env\\":null,\\"image\\":\\"docker.io/amazon/aws-alb-ingress-controller:v1.1.8\\"}],\\"serviceAccountName\\":\\"alb-ingress-controller\\"}}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": Object {
      "Properties": Object {
        "Parameters": Object {
          "referencetoCasskopAssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3Bucket474C7F07Ref": Object {
            "Ref": "AssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3Bucket9EBF7C44",
          },
          "referencetoCasskopAssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3VersionKeyD78A19DERef": Object {
            "Ref": "AssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3VersionKey752BCCC4",
          },
          "referencetoCasskopAssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3BucketAE188F98Ref": Object {
            "Ref": "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3Bucket24A39C33",
          },
          "referencetoCasskopAssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3VersionKey261108F0Ref": Object {
            "Ref": "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3VersionKey0E38F1A8",
          },
          "referencetoCasskopCassKopClusterCreationRole75E615BCArn": Object {
            "Fn::GetAtt": Array [
              "CassKopClusterCreationRoleDDB5156B",
              "Arn",
            ],
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.eu-west-1.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameterse4a77bba8cae1cf36e2ce293a7e55cc290855d439063fff3c16c66623693d868S3BucketCC5107F4",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameterse4a77bba8cae1cf36e2ce293a7e55cc290855d439063fff3c16c66623693d868S3VersionKey6466C026",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameterse4a77bba8cae1cf36e2ce293a7e55cc290855d439063fff3c16c66623693d868S3VersionKey6466C026",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": Object {
      "Properties": Object {
        "Parameters": Object {
          "referencetoCasskopAssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3BucketAE188F98Ref": Object {
            "Ref": "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3Bucket24A39C33",
          },
          "referencetoCasskopAssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3VersionKey261108F0Ref": Object {
            "Ref": "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3VersionKey0E38F1A8",
          },
          "referencetoCasskopAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3BucketD2D26FC7Ref": Object {
            "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2",
          },
          "referencetoCasskopAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey52DFCC0DRef": Object {
            "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A",
          },
          "referencetoCasskopCassKopCluster29B90A16Arn": Object {
            "Fn::GetAtt": Array [
              "CassKopCluster5683FE9F",
              "Arn",
            ],
          },
          "referencetoCasskopCassKopClusterCreationRole75E615BCArn": Object {
            "Fn::GetAtt": Array [
              "CassKopClusterCreationRoleDDB5156B",
              "Arn",
            ],
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.eu-west-1.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters99a51fc744784f777dee4eaf548bf0981b9d3a6087329b9124ff70f546a048afS3Bucket151B99CC",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters99a51fc744784f777dee4eaf548bf0981b9d3a6087329b9124ff70f546a048afS3VersionKey786A188E",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters99a51fc744784f777dee4eaf548bf0981b9d3a6087329b9124ff70f546a048afS3VersionKey786A188E",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "clusterautoscalerK8sResourceIRSAECFBF5A7": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
        "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71",
        "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"events\\",\\"endpoints\\"],\\"verbs\\":[\\"create\\",\\"patch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods/eviction\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods/status\\"],\\"verbs\\":[\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"endpoints\\"],\\"resourceNames\\":[\\"cluster-autoscaler\\"],\\"verbs\\":[\\"get\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"services\\",\\"replicationcontrollers\\",\\"persistentvolumeclaims\\",\\"persistentvolumes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"extensions\\"],\\"resources\\":[\\"replicasets\\",\\"daemonsets\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"policy\\"],\\"resources\\":[\\"poddisruptionbudgets\\"],\\"verbs\\":[\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"apps\\"],\\"resources\\":[\\"statefulsets\\",\\"replicasets\\",\\"daemonsets\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"storageclasses\\",\\"csinodes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"batch\\",\\"extensions\\"],\\"resources\\":[\\"jobs\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"patch\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resourceNames\\":[\\"cluster-autoscaler\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"get\\",\\"update\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"Role\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"verbs\\":[\\"create\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"resourceNames\\":[\\"cluster-autoscaler-status\\",\\"cluster-autoscaler-priority-expander\\"],\\"verbs\\":[\\"delete\\",\\"get\\",\\"update\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-autoscaler\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"RoleBinding\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"Role\\",\\"name\\":\\"cluster-autoscaler\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"cluster-autoscaler.kubernetes.io/safe-to-evict\\":\\"false\\"}},\\"spec\\":{\\"replicas\\":1,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"cluster-autoscaler\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"prometheus.io/scrape\\":\\"true\\",\\"prometheus.io/port\\":\\"8085\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"cluster-autoscaler\\",\\"containers\\":[{\\"image\\":\\"eu.gcr.io/k8s-artifacts-prod/autoscaling/cluster-autoscaler:v1.18.2\\",\\"name\\":\\"cluster-autoscaler\\",\\"resources\\":{\\"limits\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"300Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"300Mi\\"}},\\"command\\":[\\"./cluster-autoscaler\\",\\"--v=4\\",\\"--stderrthreshold=info\\",\\"--cloud-provider=aws\\",\\"--skip-nodes-with-local-storage=false\\",\\"--expander=least-waste\\",\\"--node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/",
              Object {
                "Ref": "CassKopCluster5683FE9F",
              },
              "\\",\\"--balance-similar-node-groups\\",\\"--skip-nodes-with-system-pods=false\\"],\\"volumeMounts\\":[{\\"name\\":\\"ssl-certs\\",\\"mountPath\\":\\"/etc/ssl/certs/ca-certificates.crt\\",\\"readOnly\\":true}],\\"imagePullPolicy\\":\\"Always\\"}],\\"volumes\\":[{\\"name\\":\\"ssl-certs\\",\\"hostPath\\":{\\"path\\":\\"/etc/ssl/certs/ca-bundle.crt\\"}}]}}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ebscsidriverK8sResource2B9EF818": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterAwsAuthmanifest4018B69E",
        "CassKopClusterchartspotinterrupthandler80D296D7",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterKubectlProviderSecurityGroup5151E995443CA6B0417",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C970904433646F5CD",
        "CassKopClusterControlPlaneSecurityGroup99EA84BD",
        "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
        "CassKopClusterfargateprofileFargateProfileE22A2CC1",
        "CassKopClusterKubectlProviderSecurityGroupA7A18E9D",
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
        "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
        "CassKopClusterNodegroupnodegroupAZa4BA33BD2",
        "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
        "CassKopClusterNodegroupnodegroupAZb6B169D3A",
        "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
        "CassKopClusterNodegroupnodegroupAZc77B0FA59",
        "CassKopClusterOpenIdConnectProvider1554EB4B",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "CassKopCluster5683FE9F",
        "CassKopClusterRole88533F86",
        "CassKopClustersaalbingressConditionJson0299F979",
        "CassKopClustersaalbingressmanifestsaalbingressServiceAccountResourceC95A1446",
        "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE",
        "CassKopClustersaalbingressRole92AC458C",
        "CassKopClustersaebscsicontrollersaConditionJson818A84ED",
        "CassKopClustersaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResource4BF87613",
        "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7",
        "CassKopClustersaebscsicontrollersaRole50FB61C3",
        "CassKopClustersaexternaldnsConditionJsonF3353872",
        "CassKopClustersaexternaldnsmanifestsaexternaldnsServiceAccountResource1C55A672",
        "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104",
        "CassKopClustersaexternaldnsRole9F1D457B",
        "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
        "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71",
        "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
        "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
        "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6",
        "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
        "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
        "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA",
        "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
        "CassKopClusterSpotASG93EF1913",
        "CassKopClusterSpotInstanceProfileF7B9468A",
        "CassKopClusterSpotInstanceRole3796F757",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4102565535B1544517",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4443D85E169E",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC29206DE9",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopclusterSG0E6F36F6ALLTRAFFIC88C0EC54",
        "CassKopClusterSpotInstanceSecurityGroup21F521B6",
        "CassKopClusterSpotLaunchConfigFA810380",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-external-attacher-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"csi.storage.k8s.io\\"],\\"resources\\":[\\"csinodeinfos\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"volumeattachments\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-external-provisioner-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"create\\",\\"delete\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumeclaims\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"storageclasses\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"events\\"],\\"verbs\\":[\\"list\\",\\"watch\\",\\"create\\",\\"update\\",\\"patch\\"]},{\\"apiGroups\\":[\\"snapshot.storage.k8s.io\\"],\\"resources\\":[\\"volumesnapshots\\"],\\"verbs\\":[\\"get\\",\\"list\\"]},{\\"apiGroups\\":[\\"snapshot.storage.k8s.io\\"],\\"resources\\":[\\"volumesnapshotcontents\\"],\\"verbs\\":[\\"get\\",\\"list\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"csinodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\",\\"delete\\",\\"update\\",\\"create\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-attacher-binding\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"ebs-external-attacher-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-provisioner-binding\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"ebs-external-provisioner-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-controller\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"replicas\\":2,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"ebs-csi-controller\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"ebs-csi-controller\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"spec\\":{\\"containers\\":[{\\"args\\":[\\"--endpoint=$(CSI_ENDPOINT)\\",\\"--logtostderr\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"CSI_ENDPOINT\\",\\"value\\":\\"unix:///var/lib/csi/sockets/pluginproxy/csi.sock\\"},{\\"name\\":\\"AWS_ACCESS_KEY_ID\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"key_id\\",\\"name\\":\\"aws-secret\\",\\"optional\\":true}}},{\\"name\\":\\"AWS_SECRET_ACCESS_KEY\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"access_key\\",\\"name\\":\\"aws-secret\\",\\"optional\\":true}}}],\\"image\\":\\"amazon/aws-ebs-csi-driver:v0.5.0\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"livenessProbe\\":{\\"failureThreshold\\":5,\\"httpGet\\":{\\"path\\":\\"/healthz\\",\\"port\\":\\"healthz\\"},\\"initialDelaySeconds\\":10,\\"periodSeconds\\":10,\\"timeoutSeconds\\":3},\\"name\\":\\"ebs-plugin\\",\\"ports\\":[{\\"containerPort\\":9808,\\"name\\":\\"healthz\\",\\"protocol\\":\\"TCP\\"}],\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--v=5\\",\\"--feature-gates=Topology=true\\",\\"--enable-leader-election\\",\\"--leader-election-type=leases\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/var/lib/csi/sockets/pluginproxy/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-provisioner:v1.3.0\\",\\"name\\":\\"csi-provisioner\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--v=5\\",\\"--leader-election=true\\",\\"--leader-election-type=leases\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/var/lib/csi/sockets/pluginproxy/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-attacher:v1.2.0\\",\\"name\\":\\"csi-attacher\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=/csi/csi.sock\\"],\\"image\\":\\"quay.io/k8scsi/livenessprobe:v1.1.0\\",\\"name\\":\\"liveness-probe\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"socket-dir\\"}]}],\\"nodeSelector\\":{\\"kubernetes.io/arch\\":\\"amd64\\",\\"kubernetes.io/os\\":\\"linux\\"},\\"priorityClassName\\":\\"system-cluster-critical\\",\\"serviceAccountName\\":\\"ebs-csi-controller-sa\\",\\"tolerations\\":[{\\"operator\\":\\"Exists\\"}],\\"volumes\\":[{\\"emptyDir\\":{},\\"name\\":\\"socket-dir\\"}]}}}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"DaemonSet\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-node\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"ebs-csi-node\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"ebs-csi-node\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"spec\\":{\\"affinity\\":{\\"nodeAffinity\\":{\\"requiredDuringSchedulingIgnoredDuringExecution\\":{\\"nodeSelectorTerms\\":[{\\"matchExpressions\\":[{\\"key\\":\\"eks.amazonaws.com/compute-type\\",\\"operator\\":\\"NotIn\\",\\"values\\":[\\"fargate\\"]}]}]}}},\\"containers\\":[{\\"args\\":[\\"node\\",\\"--endpoint=$(CSI_ENDPOINT)\\",\\"--logtostderr\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"CSI_ENDPOINT\\",\\"value\\":\\"unix:/csi/csi.sock\\"}],\\"image\\":\\"amazon/aws-ebs-csi-driver:v0.5.0\\",\\"livenessProbe\\":{\\"failureThreshold\\":5,\\"httpGet\\":{\\"path\\":\\"/healthz\\",\\"port\\":\\"healthz\\"},\\"initialDelaySeconds\\":10,\\"periodSeconds\\":10,\\"timeoutSeconds\\":3},\\"name\\":\\"ebs-plugin\\",\\"ports\\":[{\\"containerPort\\":9808,\\"name\\":\\"healthz\\",\\"protocol\\":\\"TCP\\"}],\\"securityContext\\":{\\"privileged\\":true},\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/kubelet\\",\\"mountPropagation\\":\\"Bidirectional\\",\\"name\\":\\"kubelet-dir\\"},{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"},{\\"mountPath\\":\\"/dev\\",\\"name\\":\\"device-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/csi/csi.sock\\"},{\\"name\\":\\"DRIVER_REG_SOCK_PATH\\",\\"value\\":\\"/var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-node-driver-registrar:v1.1.0\\",\\"lifecycle\\":{\\"preStop\\":{\\"exec\\":{\\"command\\":[\\"/bin/sh\\",\\"-c\\",\\"rm -rf /registration/ebs.csi.aws.com-reg.sock /csi/csi.sock\\"]}}},\\"name\\":\\"node-driver-registrar\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"},{\\"mountPath\\":\\"/registration\\",\\"name\\":\\"registration-dir\\"}]},{\\"args\\":[\\"--csi-address=/csi/csi.sock\\"],\\"image\\":\\"quay.io/k8scsi/livenessprobe:v1.1.0\\",\\"name\\":\\"liveness-probe\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"}]}],\\"hostNetwork\\":true,\\"nodeSelector\\":{\\"kubernetes.io/arch\\":\\"amd64\\",\\"kubernetes.io/os\\":\\"linux\\"},\\"priorityClassName\\":\\"system-node-critical\\",\\"tolerations\\":[{\\"operator\\":\\"Exists\\"}],\\"volumes\\":[{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"kubelet-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/plugins/ebs.csi.aws.com/\\",\\"type\\":\\"DirectoryOrCreate\\"},\\"name\\":\\"plugin-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/plugins_registry/\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"registration-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/dev\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"device-dir\\"}]}}}},{\\"apiVersion\\":\\"storage.k8s.io/v1beta1\\",\\"kind\\":\\"CSIDriver\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs.csi.aws.com\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"attachRequired\\":true,\\"podInfoOnMount\\":false}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "eksutilsadminK8sResourceIRSA0A8791C8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
        "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA",
        "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"annotations\\":{\\"deployment.kubernetes.io/revision\\":\\"1\\"},\\"name\\":\\"eksutils-deployment\\",\\"labels\\":{\\"app\\":\\"eksutils\\"},\\"namespace\\":\\"eksutils\\"},\\"spec\\":{\\"replicas\\":1,\\"revisionHistoryLimit\\":10,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"eksutils\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"eksutils\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"eksutils\\",\\"image\\":\\"allamand/eksutils:latest\\",\\"imagePullPolicy\\":\\"Always\\",\\"command\\":[\\"tail\\",\\"-f\\",\\"/dev/null\\"],\\"ports\\":[{\\"containerPort\\":8080,\\"name\\":\\"http\\",\\"protocol\\":\\"TCP\\"}],\\"resources\\":{\\"requests\\":{\\"cpu\\":\\"300m\\",\\"memory\\":\\"512Mi\\"}}}],\\"enableServiceLinks\\":true,\\"restartPolicy\\":\\"Always\\",\\"schedulerName\\":\\"default-scheduler\\",\\"serviceAccountName\\":\\"eksutils-admin\\",\\"terminationGracePeriodSeconds\\":0,\\"securityContext\\":{\\"fsGroup\\":0,\\"runAsUser\\":0}}}}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin-eksutils\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-admin\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"eksutils\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "eksutilsadminfargateK8sResourceIRSA651BECE8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
        "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6",
        "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"annotations\\":{\\"deployment.kubernetes.io/revision\\":\\"1\\"},\\"name\\":\\"eksutils-deployment\\",\\"labels\\":{\\"app\\":\\"eksutils\\"},\\"namespace\\":\\"fargate\\"},\\"spec\\":{\\"replicas\\":1,\\"revisionHistoryLimit\\":10,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"eksutils\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"eksutils\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"eksutils\\",\\"image\\":\\"allamand/eksutils:latest\\",\\"imagePullPolicy\\":\\"Always\\",\\"command\\":[\\"tail\\",\\"-f\\",\\"/dev/null\\"],\\"ports\\":[{\\"containerPort\\":8080,\\"name\\":\\"http\\",\\"protocol\\":\\"TCP\\"}],\\"resources\\":{\\"requests\\":{\\"cpu\\":\\"300m\\",\\"memory\\":\\"512Mi\\"}}}],\\"enableServiceLinks\\":true,\\"restartPolicy\\":\\"Always\\",\\"schedulerName\\":\\"default-scheduler\\",\\"serviceAccountName\\":\\"eksutils-admin\\",\\"terminationGracePeriodSeconds\\":0,\\"securityContext\\":{\\"fsGroup\\":0,\\"runAsUser\\":0}}}}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin-fargate\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-admin\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"fargate\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "extrernaldnsK8sResource0278304D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterAwsAuthmanifest4018B69E",
        "CassKopClusterchartspotinterrupthandler80D296D7",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterKubectlProviderSecurityGroup5151E995443CA6B0417",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C970904433646F5CD",
        "CassKopClusterControlPlaneSecurityGroup99EA84BD",
        "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
        "CassKopClusterfargateprofileFargateProfileE22A2CC1",
        "CassKopClusterKubectlProviderSecurityGroupA7A18E9D",
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
        "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
        "CassKopClusterNodegroupnodegroupAZa4BA33BD2",
        "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
        "CassKopClusterNodegroupnodegroupAZb6B169D3A",
        "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
        "CassKopClusterNodegroupnodegroupAZc77B0FA59",
        "CassKopClusterOpenIdConnectProvider1554EB4B",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "CassKopCluster5683FE9F",
        "CassKopClusterRole88533F86",
        "CassKopClustersaalbingressConditionJson0299F979",
        "CassKopClustersaalbingressmanifestsaalbingressServiceAccountResourceC95A1446",
        "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE",
        "CassKopClustersaalbingressRole92AC458C",
        "CassKopClustersaebscsicontrollersaConditionJson818A84ED",
        "CassKopClustersaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResource4BF87613",
        "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7",
        "CassKopClustersaebscsicontrollersaRole50FB61C3",
        "CassKopClustersaexternaldnsConditionJsonF3353872",
        "CassKopClustersaexternaldnsmanifestsaexternaldnsServiceAccountResource1C55A672",
        "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104",
        "CassKopClustersaexternaldnsRole9F1D457B",
        "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
        "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71",
        "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
        "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
        "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6",
        "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
        "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
        "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA",
        "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
        "CassKopClusterSpotASG93EF1913",
        "CassKopClusterSpotInstanceProfileF7B9468A",
        "CassKopClusterSpotInstanceRole3796F757",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4102565535B1544517",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4443D85E169E",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC29206DE9",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopclusterSG0E6F36F6ALLTRAFFIC88C0EC54",
        "CassKopClusterSpotInstanceSecurityGroup21F521B6",
        "CassKopClusterSpotLaunchConfigFA810380",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"external-dns\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"services\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"extensions\\"],\\"resources\\":[\\"ingresses\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"list\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"external-dns-viewer\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"external-dns\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"external-dns\\"}},\\"strategy\\":{\\"type\\":\\"Recreate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"external-dns\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"external-dns\\",\\"containers\\":[{\\"name\\":\\"external-dns\\",\\"image\\":\\"registry.opensource.zalan.do/teapot/external-dns:v0.7.1\\",\\"args\\":[\\"--source=service\\",\\"--source=ingress\\",\\"--domain-filter=demo3.allamand.com\\",\\"--provider=aws\\",\\"--policy=sync\\",\\"--aws-zone-type=public\\",\\"--registry=txt\\",\\"--txt-owner-id=CdkEksCluster\\",\\"--log-level=debug\\"]}],\\"securityContext\\":{\\"fsGroup\\":65534}}}}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "metricsserverK8sResourceBB4DF557": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterAwsAuthmanifest4018B69E",
        "CassKopClusterchartspotinterrupthandler80D296D7",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterKubectlProviderSecurityGroup5151E995443CA6B0417",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C970904433646F5CD",
        "CassKopClusterControlPlaneSecurityGroup99EA84BD",
        "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
        "CassKopClusterfargateprofileFargateProfileE22A2CC1",
        "CassKopClusterKubectlProviderSecurityGroupA7A18E9D",
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
        "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
        "CassKopClusterNodegroupnodegroupAZa4BA33BD2",
        "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
        "CassKopClusterNodegroupnodegroupAZb6B169D3A",
        "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
        "CassKopClusterNodegroupnodegroupAZc77B0FA59",
        "CassKopClusterOpenIdConnectProvider1554EB4B",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "CassKopCluster5683FE9F",
        "CassKopClusterRole88533F86",
        "CassKopClustersaalbingressConditionJson0299F979",
        "CassKopClustersaalbingressmanifestsaalbingressServiceAccountResourceC95A1446",
        "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE",
        "CassKopClustersaalbingressRole92AC458C",
        "CassKopClustersaebscsicontrollersaConditionJson818A84ED",
        "CassKopClustersaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResource4BF87613",
        "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7",
        "CassKopClustersaebscsicontrollersaRole50FB61C3",
        "CassKopClustersaexternaldnsConditionJsonF3353872",
        "CassKopClustersaexternaldnsmanifestsaexternaldnsServiceAccountResource1C55A672",
        "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104",
        "CassKopClustersaexternaldnsRole9F1D457B",
        "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
        "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71",
        "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
        "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
        "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6",
        "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
        "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
        "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA",
        "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
        "CassKopClusterSpotASG93EF1913",
        "CassKopClusterSpotInstanceProfileF7B9468A",
        "CassKopClusterSpotInstanceRole3796F757",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4102565535B1544517",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4443D85E169E",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC29206DE9",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopclusterSG0E6F36F6ALLTRAFFIC88C0EC54",
        "CassKopClusterSpotInstanceSecurityGroup21F521B6",
        "CassKopClusterSpotLaunchConfigFA810380",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"kind\\":\\"ClusterRole\\",\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"metadata\\":{\\"name\\":\\"system:aggregated-metrics-reader\\",\\"labels\\":{\\"rbac.authorization.k8s.io/aggregate-to-view\\":\\"true\\",\\"rbac.authorization.k8s.io/aggregate-to-edit\\":\\"true\\",\\"rbac.authorization.k8s.io/aggregate-to-admin\\":\\"true\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"metrics.k8s.io\\"],\\"resources\\":[\\"pods\\",\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"metrics-server:system:auth-delegator\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"system:auth-delegator\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"RoleBinding\\",\\"metadata\\":{\\"name\\":\\"metrics-server-auth-reader\\",\\"namespace\\":\\"kube-system\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"Role\\",\\"name\\":\\"extension-apiserver-authentication-reader\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apiregistration.k8s.io/v1beta1\\",\\"kind\\":\\"APIService\\",\\"metadata\\":{\\"name\\":\\"v1beta1.metrics.k8s.io\\"},\\"spec\\":{\\"service\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"},\\"group\\":\\"metrics.k8s.io\\",\\"version\\":\\"v1beta1\\",\\"insecureSkipTLSVerify\\":true,\\"groupPriorityMinimum\\":100,\\"versionPriority\\":100}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"template\\":{\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"labels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"metrics-server\\",\\"volumes\\":[{\\"name\\":\\"tmp-dir\\",\\"emptyDir\\":{}}],\\"containers\\":[{\\"name\\":\\"metrics-server\\",\\"image\\":\\"k8s.gcr.io/metrics-server-amd64:v0.3.6\\",\\"imagePullPolicy\\":\\"Always\\",\\"volumeMounts\\":[{\\"name\\":\\"tmp-dir\\",\\"mountPath\\":\\"/tmp\\"}]}]}}}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Service\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"kubernetes.io/name\\":\\"Metrics-server\\",\\"kubernetes.io/cluster-service\\":\\"true\\"}},\\"spec\\":{\\"selector\\":{\\"k8s-app\\":\\"metrics-server\\"},\\"ports\\":[{\\"port\\":443,\\"protocol\\":\\"TCP\\",\\"targetPort\\":443}]}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"system:metrics-server\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"nodes\\",\\"nodes/stats\\",\\"namespaces\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"system:metrics-server\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"system:metrics-server\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;

exports[`Test eks creation CloudFormation Snapshot 1`] = `
Object {
  "Outputs": Object {
    "AlbIngressControllerStackConfigCommandD62A3969": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks update-kubeconfig --name ",
            Object {
              "Ref": "AlbIngressControllerStackD72562D9",
            },
            " --region ",
            Object {
              "Ref": "AWS::Region",
            },
            " --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "AdminRole38563C57",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
    "AlbIngressControllerStackGetTokenCommand8713CCA3": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks get-token --cluster-name ",
            Object {
              "Ref": "AlbIngressControllerStackD72562D9",
            },
            " --region ",
            Object {
              "Ref": "AWS::Region",
            },
            " --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "AdminRole38563C57",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608ArtifactHashECA71323": Object {
      "Description": "Artifact hash for asset \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3BucketDCF19BBB": Object {
      "Description": "S3 bucket for asset \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB": Object {
      "Description": "S3 key for asset version \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42ArtifactHashDDB9E62D": Object {
      "Description": "Artifact hash for asset \\"1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42\\"",
      "Type": "String",
    },
    "AssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3Bucket9EBF7C44": Object {
      "Description": "S3 bucket for asset \\"1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42\\"",
      "Type": "String",
    },
    "AssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3VersionKey752BCCC4": Object {
      "Description": "S3 key for asset version \\"1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42\\"",
      "Type": "String",
    },
    "AssetParameters26e0cc71f49f62aa7808119feaef7eca4c204b830201487ee4226c4a00745ac0ArtifactHash44B80DA5": Object {
      "Description": "Artifact hash for asset \\"26e0cc71f49f62aa7808119feaef7eca4c204b830201487ee4226c4a00745ac0\\"",
      "Type": "String",
    },
    "AssetParameters26e0cc71f49f62aa7808119feaef7eca4c204b830201487ee4226c4a00745ac0S3BucketA38AE29D": Object {
      "Description": "S3 bucket for asset \\"26e0cc71f49f62aa7808119feaef7eca4c204b830201487ee4226c4a00745ac0\\"",
      "Type": "String",
    },
    "AssetParameters26e0cc71f49f62aa7808119feaef7eca4c204b830201487ee4226c4a00745ac0S3VersionKeyDFE478B4": Object {
      "Description": "S3 key for asset version \\"26e0cc71f49f62aa7808119feaef7eca4c204b830201487ee4226c4a00745ac0\\"",
      "Type": "String",
    },
    "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aArtifactHash84962CBE": Object {
      "Description": "Artifact hash for asset \\"7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690a\\"",
      "Type": "String",
    },
    "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3Bucket24A39C33": Object {
      "Description": "S3 bucket for asset \\"7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690a\\"",
      "Type": "String",
    },
    "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3VersionKey0E38F1A8": Object {
      "Description": "S3 key for asset version \\"7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690a\\"",
      "Type": "String",
    },
    "AssetParametersa981ef1551ca08c63216e80a202c9bacde5fbd5e84eab9fc7d127d16b7247d16ArtifactHashE2832B92": Object {
      "Description": "Artifact hash for asset \\"a981ef1551ca08c63216e80a202c9bacde5fbd5e84eab9fc7d127d16b7247d16\\"",
      "Type": "String",
    },
    "AssetParametersa981ef1551ca08c63216e80a202c9bacde5fbd5e84eab9fc7d127d16b7247d16S3BucketCD4B136F": Object {
      "Description": "S3 bucket for asset \\"a981ef1551ca08c63216e80a202c9bacde5fbd5e84eab9fc7d127d16b7247d16\\"",
      "Type": "String",
    },
    "AssetParametersa981ef1551ca08c63216e80a202c9bacde5fbd5e84eab9fc7d127d16b7247d16S3VersionKeyE91F6E85": Object {
      "Description": "S3 key for asset version \\"a981ef1551ca08c63216e80a202c9bacde5fbd5e84eab9fc7d127d16b7247d16\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2ArtifactHashE86B38C7": Object {
      "Description": "Artifact hash for asset \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2": Object {
      "Description": "S3 bucket for asset \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A": Object {
      "Description": "S3 key for asset version \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37ArtifactHash75842D94": Object {
      "Description": "Artifact hash for asset \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3BucketD01B79A5": Object {
      "Description": "S3 bucket for asset \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00": Object {
      "Description": "S3 key for asset version \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "SsmParameterValueawsserviceeksoptimizedami117amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/eks/optimized-ami/1.17/amazon-linux-2/recommended/image_id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": Object {
      "DependsOn": Array [
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3BucketDCF19BBB",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AdminRole38563C57": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackAwsAuthmanifest49810F87": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"aws-auth\\",\\"namespace\\":\\"kube-system\\"},\\"data\\":{\\"mapRoles\\":\\"[{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AdminRole38563C57",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AdminRole38563C57",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackSpotInstanceRoleE63A024A",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{SessionName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\",\\\\\\"system:node-proxier\\\\\\"]}]\\",\\"mapUsers\\":\\"[]\\",\\"mapAccounts\\":\\"[]\\"}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackControlPlaneSecurityGroupAB680602": Object {
      "Properties": Object {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackKubectlProviderSecurityGroup4627197B4433A66A9C9": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackKubectlProviderSecurityGroup4627197B:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackKubectlProviderSecurityGroupCCAB8763",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443CBC6BD12": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackCreationRoleB9419435": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlProviderSecurityGroupCCAB8763",
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlProviderSecurityGroupCCAB8763",
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackRoleC72527C3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":cluster/CdkEksCluster",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":cluster/CdkEksCluster/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":eks:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":fargateprofile/CdkEksCluster/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "iam:GetRole",
                "iam:listAttachedRolePolicies",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ec2:DescribeVpcs",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":vpc/",
                    Object {
                      "Ref": "Vpc8378EB38",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStackCreationRoleB9419435",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStackD72562D9": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlProviderSecurityGroupCCAB8763",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "AttributesRevision": 2,
        "Config": Object {
          "name": "CdkEksCluster",
          "resourcesVpcConfig": Object {
            "endpointPrivateAccess": true,
            "endpointPublicAccess": true,
            "securityGroupIds": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
                  "GroupId",
                ],
              },
            ],
            "subnetIds": Array [
              Object {
                "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
              },
              Object {
                "Ref": "VpcPublicSubnet2Subnet691E08A3",
              },
              Object {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              Object {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
            ],
          },
          "roleArn": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackRoleC72527C3",
              "Arn",
            ],
          },
          "version": "1.17",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.EKSawscdkawseksClusterResourceProviderframeworkonEventFD6A5807Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackKubectlProviderSecurityGroupCCAB8763": Object {
      "Properties": Object {
        "GroupDescription": "Comminication between KubectlProvider and EKS Control Plane",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AlbIngressControllerStackKubectlReadyBarrier32C3D398": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
        "AlbIngressControllerStackfargateprofileFargateProfile0604A12E",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "AlbIngressControllerStackD72562D9",
      ],
      "Properties": Object {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AlbIngressControllerStackNodegroupDefaultCapacity292A30F4": Object {
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": Array [
          "t3.medium",
        ],
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
            "Arn",
          ],
        },
        "ScalingConfig": Object {
          "DesiredSize": 3,
          "MaxSize": 3,
          "MinSize": 3,
        },
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackNodegroupnodegroup64293F7C": Object {
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": Array [
          "m5.large",
        ],
        "Labels": Object {
          "cdk-nodegroup": "addNodegroup1",
        },
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
            "Arn",
          ],
        },
        "NodegroupName": "CdkEksCluster-addNodeGroup1",
        "RemoteAccess": Object {
          "Ec2SshKey": "sallaman",
        },
        "ScalingConfig": Object {
          "DesiredSize": 1,
          "MaxSize": 50,
          "MinSize": 1,
        },
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
        "Tags": Object {
          "cdk-nodegroup": "addNodegroup1",
        },
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackOpenIdConnectProvider142642B9": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClientIDList": Array [
          "sts.amazonaws.com",
        ],
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
            "Arn",
          ],
        },
        "ThumbprintList": Array [
          "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
        ],
        "Url": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackD72562D9",
            "OpenIdConnectIssuerUrl",
          ],
        },
      },
      "Type": "Custom::AWSCDKOpenIdConnectProvider",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackRoleC72527C3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackSpotASG1C672A84": Object {
      "Properties": Object {
        "LaunchConfigurationName": Object {
          "Ref": "AlbIngressControllerStackSpotLaunchConfig1FB3F831",
        },
        "MaxInstanceLifetime": 604800,
        "MaxSize": "20",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "AlbIngressControllerStackD72562D9",
                  },
                ],
              ],
            },
            "PropagateAtLaunch": true,
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "EKS/AlbIngressControllerStack/Spot",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AlbIngressControllerStackSpotInstanceProfile34178E58": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStackSpotInstanceRoleE63A024A",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AlbIngressControllerStackSpotInstanceRoleE63A024A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "AlbIngressControllerStackD72562D9",
                  },
                ],
              ],
            },
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/AlbIngressControllerStack/Spot",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725": Object {
      "Properties": Object {
        "GroupDescription": "EKS/AlbIngressControllerStack/Spot/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "AlbIngressControllerStackD72562D9",
                  },
                ],
              ],
            },
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/AlbIngressControllerStack/Spot",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F1025655353C6A514E": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F:1025-65535",
        "FromPort": 1025,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
            "GroupId",
          ],
        },
        "ToPort": 65535,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F443FD5E4919": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496ALLTRAFFIC156531A1": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496:ALL TRAFFIC",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSclusterSG5F573986ALLTRAFFICA710ADAB": Object {
      "Properties": Object {
        "Description": "allow all traffic from cluster security group",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackD72562D9",
            "ClusterSecurityGroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackSpotLaunchConfig1FB3F831": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackSpotInstanceRoleE63A024A",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AlbIngressControllerStackSpotInstanceProfile34178E58",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceeksoptimizedami117amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.medium",
        "KeyName": "sallaman",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
              "GroupId",
            ],
          },
        ],
        "SpotPrice": "0.05",
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash
set -o xtrace
/etc/eks/bootstrap.sh ",
                Object {
                  "Ref": "AlbIngressControllerStackD72562D9",
                },
                " --kubelet-extra-args \\"--node-labels lifecycle=Ec2Spot --register-with-taints=spotInstance=true:PreferNoSchedule\\" --use-max-pods true
/opt/aws/bin/cfn-signal --exit-code $? --stack EKS --resource AlbIngressControllerStackSpotASG1C672A84 --region ",
                Object {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "AlbIngressControllerStackchartspotinterrupthandler255CE428": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "Chart": "aws-node-termination-handler",
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "CreateNamespace": true,
        "Namespace": "kube-system",
        "Release": "gresscontrollerstackchartspotinterrupthandlere3f908ce",
        "Repository": "https://aws.github.io/eks-charts",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
        "Values": "{\\"nodeSelector.lifecycle\\":\\"Ec2Spot\\"}",
        "Version": "0.7.3",
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackfargateprofileFargateProfile0604A12E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "Config": Object {
          "clusterName": Object {
            "Ref": "AlbIngressControllerStackD72562D9",
          },
          "podExecutionRoleArn": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
              "Arn",
            ],
          },
          "selectors": Array [
            Object {
              "namespace": "fargate",
            },
            Object {
              "namespace": "fargate2",
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.EKSawscdkawseksClusterResourceProviderframeworkonEventFD6A5807Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-FargateProfile",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks-fargate-pods.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"kube-system\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"eksutils\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"fargate\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaalbingressConditionJson6E876BB7": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:alb-ingress-controller\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaalbingressRoleABD6CA8A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStacksaalbingressConditionJson6E876BB7",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebAcl",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "wafv2:GetWebACL",
                "wafv2:GetWebACLForResource",
                "wafv2:AssociateWebACL",
                "wafv2:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "shield:DescribeProtection",
                "shield:GetSubscriptionState",
                "shield:DeleteProtection",
                "shield:CreateProtection",
                "shield:DescribeSubscription",
                "shield:ListProtections",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStacksaalbingressmanifestsaalbingressServiceAccountResource5B1C51D3": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:ebs-csi-controller-sa\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:AttachVolume",
                "ec2:CreateSnapshot",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DeleteSnapshot",
                "ec2:DeleteTags",
                "ec2:DeleteVolume",
                "ec2:DescribeInstances",
                "ec2:DescribeSnapshots",
                "ec2:DescribeTags",
                "ec2:DescribeVolumes",
                "ec2:DetachVolume",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStacksaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResourceE4CF41C6": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"ebs-csi-controller-sa\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:external-dns\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaexternaldnsRole7B2F1597": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "route53:ChangeResourceRecordSets",
              "Effect": "Allow",
              "Resource": "arn:aws:route53:::hostedzone/*",
            },
            Object {
              "Action": Array [
                "route53:ListHostedZones",
                "route53:ListResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStacksaexternaldnsmanifestsaexternaldnsServiceAccountResource00C1D72C": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"external-dns\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:cluster-autoscaler\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "ec2:DescribeLaunchTemplateVersions",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:eksutils:eksutils-admin\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:fargate:eksutils-admin\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"fargate\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"eksutils-admin\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"eksutils\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"eksutils-admin\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": Object {
      "DependsOn": Array [
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3BucketD01B79A5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "iam:CreateOpenIDConnectProvider",
                    "iam:DeleteOpenIDConnectProvider",
                    "iam:UpdateOpenIDConnectProviderThumbprint",
                    "iam:AddClientIDToOpenIDConnectProvider",
                    "iam:RemoveClientIDFromOpenIDConnectProvider",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.32.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.48.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.16.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "albingresscontrollerK8sResource87829C97": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackAwsAuthmanifest49810F87",
        "AlbIngressControllerStackchartspotinterrupthandler255CE428",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackKubectlProviderSecurityGroup4627197B4433A66A9C9",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443CBC6BD12",
        "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
        "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
        "AlbIngressControllerStackfargateprofileFargateProfile0604A12E",
        "AlbIngressControllerStackKubectlProviderSecurityGroupCCAB8763",
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
        "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
        "AlbIngressControllerStackNodegroupDefaultCapacity292A30F4",
        "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
        "AlbIngressControllerStackNodegroupnodegroup64293F7C",
        "AlbIngressControllerStackOpenIdConnectProvider142642B9",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "AlbIngressControllerStackD72562D9",
        "AlbIngressControllerStackRoleC72527C3",
        "AlbIngressControllerStacksaalbingressConditionJson6E876BB7",
        "AlbIngressControllerStacksaalbingressmanifestsaalbingressServiceAccountResource5B1C51D3",
        "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851",
        "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
        "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8",
        "AlbIngressControllerStacksaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResourceE4CF41C6",
        "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE",
        "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
        "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147",
        "AlbIngressControllerStacksaexternaldnsmanifestsaexternaldnsServiceAccountResource00C1D72C",
        "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E",
        "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
        "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
        "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
        "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
        "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
        "AlbIngressControllerStackSpotASG1C672A84",
        "AlbIngressControllerStackSpotInstanceProfile34178E58",
        "AlbIngressControllerStackSpotInstanceRoleE63A024A",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F1025655353C6A514E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F443FD5E4919",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496ALLTRAFFIC156531A1",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSclusterSG5F573986ALLTRAFFICA710ADAB",
        "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
        "AlbIngressControllerStackSpotLaunchConfig1FB3F831",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\",\\"extensions\\"],\\"resources\\":[\\"configmaps\\",\\"endpoints\\",\\"events\\",\\"ingresses\\",\\"ingresses/status\\",\\"services\\",\\"pods/status\\"],\\"verbs\\":[\\"create\\",\\"get\\",\\"list\\",\\"update\\",\\"watch\\",\\"patch\\"]},{\\"apiGroups\\":[\\"\\",\\"extensions\\"],\\"resources\\":[\\"nodes\\",\\"pods\\",\\"secrets\\",\\"services\\",\\"namespaces\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"alb-ingress-controller\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"alb-ingress-controller\\",\\"args\\":[\\"--ingress-class=alb\\",\\"--cluster-name=",
              Object {
                "Ref": "AlbIngressControllerStackD72562D9",
              },
              "\\",\\"--feature-gates=wafv2=false\\",\\"--aws-vpc-id=",
              Object {
                "Ref": "Vpc8378EB38",
              },
              "\\",\\"--aws-region=",
              Object {
                "Ref": "AWS::Region",
              },
              "\\"],\\"env\\":null,\\"image\\":\\"docker.io/amazon/aws-alb-ingress-controller:v1.1.8\\"}],\\"serviceAccountName\\":\\"alb-ingress-controller\\"}}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": Object {
      "Properties": Object {
        "Parameters": Object {
          "referencetoEKSAlbIngressControllerStackCreationRole417D13BAArn": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackCreationRoleB9419435",
              "Arn",
            ],
          },
          "referencetoEKSAssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3BucketFABAEBD5Ref": Object {
            "Ref": "AssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3Bucket9EBF7C44",
          },
          "referencetoEKSAssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3VersionKey922C6918Ref": Object {
            "Ref": "AssetParameters1d4bc9c94ad495269c8403552eb916f466fcc202a35957cfb7cf6a0fe0739d42S3VersionKey752BCCC4",
          },
          "referencetoEKSAssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3Bucket45D90A62Ref": Object {
            "Ref": "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3Bucket24A39C33",
          },
          "referencetoEKSAssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3VersionKey35722EA6Ref": Object {
            "Ref": "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3VersionKey0E38F1A8",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters26e0cc71f49f62aa7808119feaef7eca4c204b830201487ee4226c4a00745ac0S3BucketA38AE29D",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters26e0cc71f49f62aa7808119feaef7eca4c204b830201487ee4226c4a00745ac0S3VersionKeyDFE478B4",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters26e0cc71f49f62aa7808119feaef7eca4c204b830201487ee4226c4a00745ac0S3VersionKeyDFE478B4",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": Object {
      "Properties": Object {
        "Parameters": Object {
          "referencetoEKSAlbIngressControllerStack7DD60982Arn": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackD72562D9",
              "Arn",
            ],
          },
          "referencetoEKSAlbIngressControllerStackCreationRole417D13BAArn": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackCreationRoleB9419435",
              "Arn",
            ],
          },
          "referencetoEKSAssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3Bucket45D90A62Ref": Object {
            "Ref": "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3Bucket24A39C33",
          },
          "referencetoEKSAssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3VersionKey35722EA6Ref": Object {
            "Ref": "AssetParameters7b8f901e53744758131669f2606b340cd2b32759fbbfc3dd93fb3fa4d08d690aS3VersionKey0E38F1A8",
          },
          "referencetoEKSAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3BucketD5A9963ARef": Object {
            "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2",
          },
          "referencetoEKSAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey2D6141D0Ref": Object {
            "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParametersa981ef1551ca08c63216e80a202c9bacde5fbd5e84eab9fc7d127d16b7247d16S3BucketCD4B136F",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersa981ef1551ca08c63216e80a202c9bacde5fbd5e84eab9fc7d127d16b7247d16S3VersionKeyE91F6E85",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersa981ef1551ca08c63216e80a202c9bacde5fbd5e84eab9fc7d127d16b7247d16S3VersionKeyE91F6E85",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "clusterautoscalerK8sResourceIRSAECFBF5A7": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
        "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"events\\",\\"endpoints\\"],\\"verbs\\":[\\"create\\",\\"patch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods/eviction\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods/status\\"],\\"verbs\\":[\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"endpoints\\"],\\"resourceNames\\":[\\"cluster-autoscaler\\"],\\"verbs\\":[\\"get\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"services\\",\\"replicationcontrollers\\",\\"persistentvolumeclaims\\",\\"persistentvolumes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"extensions\\"],\\"resources\\":[\\"replicasets\\",\\"daemonsets\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"policy\\"],\\"resources\\":[\\"poddisruptionbudgets\\"],\\"verbs\\":[\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"apps\\"],\\"resources\\":[\\"statefulsets\\",\\"replicasets\\",\\"daemonsets\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"storageclasses\\",\\"csinodes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"batch\\",\\"extensions\\"],\\"resources\\":[\\"jobs\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"patch\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resourceNames\\":[\\"cluster-autoscaler\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"get\\",\\"update\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"Role\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"verbs\\":[\\"create\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"resourceNames\\":[\\"cluster-autoscaler-status\\",\\"cluster-autoscaler-priority-expander\\"],\\"verbs\\":[\\"delete\\",\\"get\\",\\"update\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-autoscaler\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"RoleBinding\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"Role\\",\\"name\\":\\"cluster-autoscaler\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"cluster-autoscaler.kubernetes.io/safe-to-evict\\":\\"false\\"}},\\"spec\\":{\\"replicas\\":1,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"cluster-autoscaler\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"prometheus.io/scrape\\":\\"true\\",\\"prometheus.io/port\\":\\"8085\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"cluster-autoscaler\\",\\"containers\\":[{\\"image\\":\\"eu.gcr.io/k8s-artifacts-prod/autoscaling/cluster-autoscaler:v1.18.2\\",\\"name\\":\\"cluster-autoscaler\\",\\"resources\\":{\\"limits\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"300Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"300Mi\\"}},\\"command\\":[\\"./cluster-autoscaler\\",\\"--v=4\\",\\"--stderrthreshold=info\\",\\"--cloud-provider=aws\\",\\"--skip-nodes-with-local-storage=false\\",\\"--expander=least-waste\\",\\"--node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/",
              Object {
                "Ref": "AlbIngressControllerStackD72562D9",
              },
              "\\",\\"--balance-similar-node-groups\\",\\"--skip-nodes-with-system-pods=false\\"],\\"volumeMounts\\":[{\\"name\\":\\"ssl-certs\\",\\"mountPath\\":\\"/etc/ssl/certs/ca-certificates.crt\\",\\"readOnly\\":true}],\\"imagePullPolicy\\":\\"Always\\"}],\\"volumes\\":[{\\"name\\":\\"ssl-certs\\",\\"hostPath\\":{\\"path\\":\\"/etc/ssl/certs/ca-bundle.crt\\"}}]}}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ebscsidriverK8sResource2B9EF818": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackAwsAuthmanifest49810F87",
        "AlbIngressControllerStackchartspotinterrupthandler255CE428",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackKubectlProviderSecurityGroup4627197B4433A66A9C9",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443CBC6BD12",
        "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
        "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
        "AlbIngressControllerStackfargateprofileFargateProfile0604A12E",
        "AlbIngressControllerStackKubectlProviderSecurityGroupCCAB8763",
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
        "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
        "AlbIngressControllerStackNodegroupDefaultCapacity292A30F4",
        "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
        "AlbIngressControllerStackNodegroupnodegroup64293F7C",
        "AlbIngressControllerStackOpenIdConnectProvider142642B9",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "AlbIngressControllerStackD72562D9",
        "AlbIngressControllerStackRoleC72527C3",
        "AlbIngressControllerStacksaalbingressConditionJson6E876BB7",
        "AlbIngressControllerStacksaalbingressmanifestsaalbingressServiceAccountResource5B1C51D3",
        "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851",
        "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
        "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8",
        "AlbIngressControllerStacksaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResourceE4CF41C6",
        "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE",
        "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
        "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147",
        "AlbIngressControllerStacksaexternaldnsmanifestsaexternaldnsServiceAccountResource00C1D72C",
        "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E",
        "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
        "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
        "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
        "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
        "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
        "AlbIngressControllerStackSpotASG1C672A84",
        "AlbIngressControllerStackSpotInstanceProfile34178E58",
        "AlbIngressControllerStackSpotInstanceRoleE63A024A",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F1025655353C6A514E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F443FD5E4919",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496ALLTRAFFIC156531A1",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSclusterSG5F573986ALLTRAFFICA710ADAB",
        "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
        "AlbIngressControllerStackSpotLaunchConfig1FB3F831",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-external-attacher-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"csi.storage.k8s.io\\"],\\"resources\\":[\\"csinodeinfos\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"volumeattachments\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-external-provisioner-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"create\\",\\"delete\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumeclaims\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"storageclasses\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"events\\"],\\"verbs\\":[\\"list\\",\\"watch\\",\\"create\\",\\"update\\",\\"patch\\"]},{\\"apiGroups\\":[\\"snapshot.storage.k8s.io\\"],\\"resources\\":[\\"volumesnapshots\\"],\\"verbs\\":[\\"get\\",\\"list\\"]},{\\"apiGroups\\":[\\"snapshot.storage.k8s.io\\"],\\"resources\\":[\\"volumesnapshotcontents\\"],\\"verbs\\":[\\"get\\",\\"list\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"csinodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\",\\"delete\\",\\"update\\",\\"create\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-attacher-binding\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"ebs-external-attacher-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-provisioner-binding\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"ebs-external-provisioner-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-controller\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"replicas\\":2,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"ebs-csi-controller\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"ebs-csi-controller\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"spec\\":{\\"containers\\":[{\\"args\\":[\\"--endpoint=$(CSI_ENDPOINT)\\",\\"--logtostderr\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"CSI_ENDPOINT\\",\\"value\\":\\"unix:///var/lib/csi/sockets/pluginproxy/csi.sock\\"},{\\"name\\":\\"AWS_ACCESS_KEY_ID\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"key_id\\",\\"name\\":\\"aws-secret\\",\\"optional\\":true}}},{\\"name\\":\\"AWS_SECRET_ACCESS_KEY\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"access_key\\",\\"name\\":\\"aws-secret\\",\\"optional\\":true}}}],\\"image\\":\\"amazon/aws-ebs-csi-driver:v0.5.0\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"livenessProbe\\":{\\"failureThreshold\\":5,\\"httpGet\\":{\\"path\\":\\"/healthz\\",\\"port\\":\\"healthz\\"},\\"initialDelaySeconds\\":10,\\"periodSeconds\\":10,\\"timeoutSeconds\\":3},\\"name\\":\\"ebs-plugin\\",\\"ports\\":[{\\"containerPort\\":9808,\\"name\\":\\"healthz\\",\\"protocol\\":\\"TCP\\"}],\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--v=5\\",\\"--feature-gates=Topology=true\\",\\"--enable-leader-election\\",\\"--leader-election-type=leases\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/var/lib/csi/sockets/pluginproxy/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-provisioner:v1.3.0\\",\\"name\\":\\"csi-provisioner\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--v=5\\",\\"--leader-election=true\\",\\"--leader-election-type=leases\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/var/lib/csi/sockets/pluginproxy/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-attacher:v1.2.0\\",\\"name\\":\\"csi-attacher\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=/csi/csi.sock\\"],\\"image\\":\\"quay.io/k8scsi/livenessprobe:v1.1.0\\",\\"name\\":\\"liveness-probe\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"socket-dir\\"}]}],\\"nodeSelector\\":{\\"kubernetes.io/arch\\":\\"amd64\\",\\"kubernetes.io/os\\":\\"linux\\"},\\"priorityClassName\\":\\"system-cluster-critical\\",\\"serviceAccountName\\":\\"ebs-csi-controller-sa\\",\\"tolerations\\":[{\\"operator\\":\\"Exists\\"}],\\"volumes\\":[{\\"emptyDir\\":{},\\"name\\":\\"socket-dir\\"}]}}}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"DaemonSet\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-node\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"ebs-csi-node\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"ebs-csi-node\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"spec\\":{\\"affinity\\":{\\"nodeAffinity\\":{\\"requiredDuringSchedulingIgnoredDuringExecution\\":{\\"nodeSelectorTerms\\":[{\\"matchExpressions\\":[{\\"key\\":\\"eks.amazonaws.com/compute-type\\",\\"operator\\":\\"NotIn\\",\\"values\\":[\\"fargate\\"]}]}]}}},\\"containers\\":[{\\"args\\":[\\"node\\",\\"--endpoint=$(CSI_ENDPOINT)\\",\\"--logtostderr\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"CSI_ENDPOINT\\",\\"value\\":\\"unix:/csi/csi.sock\\"}],\\"image\\":\\"amazon/aws-ebs-csi-driver:v0.5.0\\",\\"livenessProbe\\":{\\"failureThreshold\\":5,\\"httpGet\\":{\\"path\\":\\"/healthz\\",\\"port\\":\\"healthz\\"},\\"initialDelaySeconds\\":10,\\"periodSeconds\\":10,\\"timeoutSeconds\\":3},\\"name\\":\\"ebs-plugin\\",\\"ports\\":[{\\"containerPort\\":9808,\\"name\\":\\"healthz\\",\\"protocol\\":\\"TCP\\"}],\\"securityContext\\":{\\"privileged\\":true},\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/kubelet\\",\\"mountPropagation\\":\\"Bidirectional\\",\\"name\\":\\"kubelet-dir\\"},{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"},{\\"mountPath\\":\\"/dev\\",\\"name\\":\\"device-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/csi/csi.sock\\"},{\\"name\\":\\"DRIVER_REG_SOCK_PATH\\",\\"value\\":\\"/var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-node-driver-registrar:v1.1.0\\",\\"lifecycle\\":{\\"preStop\\":{\\"exec\\":{\\"command\\":[\\"/bin/sh\\",\\"-c\\",\\"rm -rf /registration/ebs.csi.aws.com-reg.sock /csi/csi.sock\\"]}}},\\"name\\":\\"node-driver-registrar\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"},{\\"mountPath\\":\\"/registration\\",\\"name\\":\\"registration-dir\\"}]},{\\"args\\":[\\"--csi-address=/csi/csi.sock\\"],\\"image\\":\\"quay.io/k8scsi/livenessprobe:v1.1.0\\",\\"name\\":\\"liveness-probe\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"}]}],\\"hostNetwork\\":true,\\"nodeSelector\\":{\\"kubernetes.io/arch\\":\\"amd64\\",\\"kubernetes.io/os\\":\\"linux\\"},\\"priorityClassName\\":\\"system-node-critical\\",\\"tolerations\\":[{\\"operator\\":\\"Exists\\"}],\\"volumes\\":[{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"kubelet-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/plugins/ebs.csi.aws.com/\\",\\"type\\":\\"DirectoryOrCreate\\"},\\"name\\":\\"plugin-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/plugins_registry/\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"registration-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/dev\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"device-dir\\"}]}}}},{\\"apiVersion\\":\\"storage.k8s.io/v1beta1\\",\\"kind\\":\\"CSIDriver\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs.csi.aws.com\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"attachRequired\\":true,\\"podInfoOnMount\\":false}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "eksutilsadminK8sResourceIRSA0A8791C8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
        "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"annotations\\":{\\"deployment.kubernetes.io/revision\\":\\"1\\"},\\"name\\":\\"eksutils-deployment\\",\\"labels\\":{\\"app\\":\\"eksutils\\"},\\"namespace\\":\\"eksutils\\"},\\"spec\\":{\\"replicas\\":1,\\"revisionHistoryLimit\\":10,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"eksutils\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"eksutils\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"eksutils\\",\\"image\\":\\"allamand/eksutils:latest\\",\\"imagePullPolicy\\":\\"Always\\",\\"command\\":[\\"tail\\",\\"-f\\",\\"/dev/null\\"],\\"ports\\":[{\\"containerPort\\":8080,\\"name\\":\\"http\\",\\"protocol\\":\\"TCP\\"}],\\"resources\\":{\\"requests\\":{\\"cpu\\":\\"300m\\",\\"memory\\":\\"512Mi\\"}}}],\\"enableServiceLinks\\":true,\\"restartPolicy\\":\\"Always\\",\\"schedulerName\\":\\"default-scheduler\\",\\"serviceAccountName\\":\\"eksutils-admin\\",\\"terminationGracePeriodSeconds\\":0,\\"securityContext\\":{\\"fsGroup\\":0,\\"runAsUser\\":0}}}}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin-eksutils\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-admin\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"eksutils\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "eksutilsadminfargateK8sResourceIRSA651BECE8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"annotations\\":{\\"deployment.kubernetes.io/revision\\":\\"1\\"},\\"name\\":\\"eksutils-deployment\\",\\"labels\\":{\\"app\\":\\"eksutils\\"},\\"namespace\\":\\"fargate\\"},\\"spec\\":{\\"replicas\\":1,\\"revisionHistoryLimit\\":10,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"eksutils\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"eksutils\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"eksutils\\",\\"image\\":\\"allamand/eksutils:latest\\",\\"imagePullPolicy\\":\\"Always\\",\\"command\\":[\\"tail\\",\\"-f\\",\\"/dev/null\\"],\\"ports\\":[{\\"containerPort\\":8080,\\"name\\":\\"http\\",\\"protocol\\":\\"TCP\\"}],\\"resources\\":{\\"requests\\":{\\"cpu\\":\\"300m\\",\\"memory\\":\\"512Mi\\"}}}],\\"enableServiceLinks\\":true,\\"restartPolicy\\":\\"Always\\",\\"schedulerName\\":\\"default-scheduler\\",\\"serviceAccountName\\":\\"eksutils-admin\\",\\"terminationGracePeriodSeconds\\":0,\\"securityContext\\":{\\"fsGroup\\":0,\\"runAsUser\\":0}}}}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin-fargate\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-admin\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"fargate\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "extrernaldnsK8sResource0278304D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackAwsAuthmanifest49810F87",
        "AlbIngressControllerStackchartspotinterrupthandler255CE428",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackKubectlProviderSecurityGroup4627197B4433A66A9C9",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443CBC6BD12",
        "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
        "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
        "AlbIngressControllerStackfargateprofileFargateProfile0604A12E",
        "AlbIngressControllerStackKubectlProviderSecurityGroupCCAB8763",
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
        "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
        "AlbIngressControllerStackNodegroupDefaultCapacity292A30F4",
        "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
        "AlbIngressControllerStackNodegroupnodegroup64293F7C",
        "AlbIngressControllerStackOpenIdConnectProvider142642B9",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "AlbIngressControllerStackD72562D9",
        "AlbIngressControllerStackRoleC72527C3",
        "AlbIngressControllerStacksaalbingressConditionJson6E876BB7",
        "AlbIngressControllerStacksaalbingressmanifestsaalbingressServiceAccountResource5B1C51D3",
        "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851",
        "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
        "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8",
        "AlbIngressControllerStacksaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResourceE4CF41C6",
        "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE",
        "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
        "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147",
        "AlbIngressControllerStacksaexternaldnsmanifestsaexternaldnsServiceAccountResource00C1D72C",
        "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E",
        "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
        "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
        "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
        "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
        "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
        "AlbIngressControllerStackSpotASG1C672A84",
        "AlbIngressControllerStackSpotInstanceProfile34178E58",
        "AlbIngressControllerStackSpotInstanceRoleE63A024A",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F1025655353C6A514E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F443FD5E4919",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496ALLTRAFFIC156531A1",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSclusterSG5F573986ALLTRAFFICA710ADAB",
        "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
        "AlbIngressControllerStackSpotLaunchConfig1FB3F831",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"external-dns\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"services\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"extensions\\"],\\"resources\\":[\\"ingresses\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"list\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"external-dns-viewer\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"external-dns\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"external-dns\\"}},\\"strategy\\":{\\"type\\":\\"Recreate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"external-dns\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"external-dns\\",\\"containers\\":[{\\"name\\":\\"external-dns\\",\\"image\\":\\"registry.opensource.zalan.do/teapot/external-dns:v0.7.1\\",\\"args\\":[\\"--source=service\\",\\"--source=ingress\\",\\"--domain-filter=demo3.allamand.com\\",\\"--provider=aws\\",\\"--policy=sync\\",\\"--aws-zone-type=public\\",\\"--registry=txt\\",\\"--txt-owner-id=CdkEksCluster\\",\\"--log-level=debug\\"]}],\\"securityContext\\":{\\"fsGroup\\":65534}}}}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "metricsserverK8sResourceBB4DF557": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackAwsAuthmanifest49810F87",
        "AlbIngressControllerStackchartspotinterrupthandler255CE428",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackKubectlProviderSecurityGroup4627197B4433A66A9C9",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443CBC6BD12",
        "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
        "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
        "AlbIngressControllerStackfargateprofileFargateProfile0604A12E",
        "AlbIngressControllerStackKubectlProviderSecurityGroupCCAB8763",
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
        "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
        "AlbIngressControllerStackNodegroupDefaultCapacity292A30F4",
        "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
        "AlbIngressControllerStackNodegroupnodegroup64293F7C",
        "AlbIngressControllerStackOpenIdConnectProvider142642B9",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "AlbIngressControllerStackD72562D9",
        "AlbIngressControllerStackRoleC72527C3",
        "AlbIngressControllerStacksaalbingressConditionJson6E876BB7",
        "AlbIngressControllerStacksaalbingressmanifestsaalbingressServiceAccountResource5B1C51D3",
        "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851",
        "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
        "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8",
        "AlbIngressControllerStacksaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResourceE4CF41C6",
        "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE",
        "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
        "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147",
        "AlbIngressControllerStacksaexternaldnsmanifestsaexternaldnsServiceAccountResource00C1D72C",
        "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E",
        "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
        "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
        "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
        "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
        "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
        "AlbIngressControllerStackSpotASG1C672A84",
        "AlbIngressControllerStackSpotInstanceProfile34178E58",
        "AlbIngressControllerStackSpotInstanceRoleE63A024A",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F1025655353C6A514E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F443FD5E4919",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496ALLTRAFFIC156531A1",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSclusterSG5F573986ALLTRAFFICA710ADAB",
        "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
        "AlbIngressControllerStackSpotLaunchConfig1FB3F831",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"kind\\":\\"ClusterRole\\",\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"metadata\\":{\\"name\\":\\"system:aggregated-metrics-reader\\",\\"labels\\":{\\"rbac.authorization.k8s.io/aggregate-to-view\\":\\"true\\",\\"rbac.authorization.k8s.io/aggregate-to-edit\\":\\"true\\",\\"rbac.authorization.k8s.io/aggregate-to-admin\\":\\"true\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"metrics.k8s.io\\"],\\"resources\\":[\\"pods\\",\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"metrics-server:system:auth-delegator\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"system:auth-delegator\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"RoleBinding\\",\\"metadata\\":{\\"name\\":\\"metrics-server-auth-reader\\",\\"namespace\\":\\"kube-system\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"Role\\",\\"name\\":\\"extension-apiserver-authentication-reader\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apiregistration.k8s.io/v1beta1\\",\\"kind\\":\\"APIService\\",\\"metadata\\":{\\"name\\":\\"v1beta1.metrics.k8s.io\\"},\\"spec\\":{\\"service\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"},\\"group\\":\\"metrics.k8s.io\\",\\"version\\":\\"v1beta1\\",\\"insecureSkipTLSVerify\\":true,\\"groupPriorityMinimum\\":100,\\"versionPriority\\":100}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"template\\":{\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"labels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"metrics-server\\",\\"volumes\\":[{\\"name\\":\\"tmp-dir\\",\\"emptyDir\\":{}}],\\"containers\\":[{\\"name\\":\\"metrics-server\\",\\"image\\":\\"k8s.gcr.io/metrics-server-amd64:v0.3.6\\",\\"imagePullPolicy\\":\\"Always\\",\\"volumeMounts\\":[{\\"name\\":\\"tmp-dir\\",\\"mountPath\\":\\"/tmp\\"}]}]}}}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Service\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"kubernetes.io/name\\":\\"Metrics-server\\",\\"kubernetes.io/cluster-service\\":\\"true\\"}},\\"spec\\":{\\"selector\\":{\\"k8s-app\\":\\"metrics-server\\"},\\"ports\\":[{\\"port\\":443,\\"protocol\\":\\"TCP\\",\\"targetPort\\":443}]}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"system:metrics-server\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"nodes\\",\\"nodes/stats\\",\\"namespaces\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"system:metrics-server\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"system:metrics-server\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
