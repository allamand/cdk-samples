// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Multi-AZ Stateful 1`] = `
Object {
  "Outputs": Object {
    "AZOutput": Object {
      "Value": "dummy1a,dummy1b,dummy1c",
    },
    "CassKopClusterConfigCommandA090E985": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks update-kubeconfig --name ",
            Object {
              "Ref": "CassKopCluster5683FE9F",
            },
            " --region eu-west-1 --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "AdminRole38563C57",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
    "CassKopClusterGetTokenCommand2CFE4645": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks get-token --cluster-name ",
            Object {
              "Ref": "CassKopCluster5683FE9F",
            },
            " --region eu-west-1 --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "AdminRole38563C57",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608ArtifactHashECA71323": Object {
      "Description": "Artifact hash for asset \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3BucketDCF19BBB": Object {
      "Description": "S3 bucket for asset \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB": Object {
      "Description": "S3 key for asset version \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1ArtifactHash32F5D823": Object {
      "Description": "Artifact hash for asset \\"50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1\\"",
      "Type": "String",
    },
    "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket36C546E0": Object {
      "Description": "S3 bucket for asset \\"50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1\\"",
      "Type": "String",
    },
    "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey85C003F9": Object {
      "Description": "S3 key for asset version \\"50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1\\"",
      "Type": "String",
    },
    "AssetParameters9534f7dc11f259aac439c51ef802eaadf520fb191413ae8c8a2c9f505714dac0ArtifactHash51C622DE": Object {
      "Description": "Artifact hash for asset \\"9534f7dc11f259aac439c51ef802eaadf520fb191413ae8c8a2c9f505714dac0\\"",
      "Type": "String",
    },
    "AssetParameters9534f7dc11f259aac439c51ef802eaadf520fb191413ae8c8a2c9f505714dac0S3BucketCEF45554": Object {
      "Description": "S3 bucket for asset \\"9534f7dc11f259aac439c51ef802eaadf520fb191413ae8c8a2c9f505714dac0\\"",
      "Type": "String",
    },
    "AssetParameters9534f7dc11f259aac439c51ef802eaadf520fb191413ae8c8a2c9f505714dac0S3VersionKeyACF72A58": Object {
      "Description": "S3 key for asset version \\"9534f7dc11f259aac439c51ef802eaadf520fb191413ae8c8a2c9f505714dac0\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2ArtifactHashE86B38C7": Object {
      "Description": "Artifact hash for asset \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2": Object {
      "Description": "S3 bucket for asset \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A": Object {
      "Description": "S3 key for asset version \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37ArtifactHash75842D94": Object {
      "Description": "Artifact hash for asset \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3BucketD01B79A5": Object {
      "Description": "S3 bucket for asset \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00": Object {
      "Description": "S3 key for asset version \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cArtifactHash627DAAA7": Object {
      "Description": "Artifact hash for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43": Object {
      "Description": "S3 bucket for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7": Object {
      "Description": "S3 key for asset version \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParameterse262985f31e182173c7541af67224169233f1516cafe96a00d1a244400ce8de4ArtifactHash481E8039": Object {
      "Description": "Artifact hash for asset \\"e262985f31e182173c7541af67224169233f1516cafe96a00d1a244400ce8de4\\"",
      "Type": "String",
    },
    "AssetParameterse262985f31e182173c7541af67224169233f1516cafe96a00d1a244400ce8de4S3BucketD3C5EE3C": Object {
      "Description": "S3 bucket for asset \\"e262985f31e182173c7541af67224169233f1516cafe96a00d1a244400ce8de4\\"",
      "Type": "String",
    },
    "AssetParameterse262985f31e182173c7541af67224169233f1516cafe96a00d1a244400ce8de4S3VersionKey77F35CCE": Object {
      "Description": "S3 key for asset version \\"e262985f31e182173c7541af67224169233f1516cafe96a00d1a244400ce8de4\\"",
      "Type": "String",
    },
    "SsmParameterValueawsserviceeksoptimizedami117amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/eks/optimized-ami/1.17/amazon-linux-2/recommended/image_id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": Object {
      "DependsOn": Array [
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3BucketDCF19BBB",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AdminRole38563C57": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::xxxxxxxxxxxx:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopCluster5683FE9F": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableD98824C7",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
        "VpcPrivateSubnet3SubnetF258B56E",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTable93458DBB",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
        "VpcPublicSubnet3SubnetBE12F0B6",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "AttributesRevision": 2,
        "Config": Object {
          "name": "CassKopTest",
          "resourcesVpcConfig": Object {
            "endpointPrivateAccess": true,
            "endpointPublicAccess": true,
            "securityGroupIds": Array [
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterControlPlaneSecurityGroup99EA84BD",
                  "GroupId",
                ],
              },
            ],
            "subnetIds": Array [
              Object {
                "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
              },
              Object {
                "Ref": "VpcPublicSubnet2Subnet691E08A3",
              },
              Object {
                "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
              },
              Object {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              Object {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
              Object {
                "Ref": "VpcPrivateSubnet3SubnetF258B56E",
              },
            ],
          },
          "roleArn": Object {
            "Fn::GetAtt": Array [
              "CassKopClusterRole88533F86",
              "Arn",
            ],
          },
          "version": "1.17",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.CasskopawscdkawseksClusterResourceProviderframeworkonEventDEC5D217Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterAwsAuthmanifest4018B69E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"aws-auth\\",\\"namespace\\":\\"kube-system\\"},\\"data\\":{\\"mapRoles\\":\\"[{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AdminRole38563C57",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AdminRole38563C57",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{SessionName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\",\\\\\\"system:node-proxier\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterSpotInstanceRole3796F757",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]}]\\",\\"mapUsers\\":\\"[]\\",\\"mapAccounts\\":\\"[]\\"}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterClusterSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090443994408CD": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterSpotInstanceSecurityGroupC3C97090:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopCluster5683FE9F",
            "ClusterSecurityGroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterControlPlaneSecurityGroup99EA84BD": Object {
      "Properties": Object {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C970904433646F5CD": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterSpotInstanceSecurityGroupC3C97090:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterControlPlaneSecurityGroup99EA84BD",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterCreationRoleDDB5156B": Object {
      "DependsOn": Array [
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableD98824C7",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
        "VpcPrivateSubnet3SubnetF258B56E",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTable93458DBB",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
        "VpcPublicSubnet3SubnetBE12F0B6",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::xxxxxxxxxxxx:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterCreationRoleDefaultPolicy0C3AACE5": Object {
      "DependsOn": Array [
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPrivateSubnet3DefaultRoute94B74F0D",
        "VpcPrivateSubnet3RouteTableD98824C7",
        "VpcPrivateSubnet3RouteTableAssociation16BDDC43",
        "VpcPrivateSubnet3SubnetF258B56E",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "VpcPublicSubnet3DefaultRoute4697774F",
        "VpcPublicSubnet3RouteTable93458DBB",
        "VpcPublicSubnet3RouteTableAssociation1F1EDF02",
        "VpcPublicSubnet3SubnetBE12F0B6",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterRole88533F86",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:eu-west-1:xxxxxxxxxxxx:cluster/CassKopTest",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:eu-west-1:xxxxxxxxxxxx:cluster/CassKopTest/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":eks:eu-west-1:xxxxxxxxxxxx:fargateprofile/CassKopTest/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "iam:GetRole",
                "iam:listAttachedRolePolicies",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ec2:DescribeVpcs",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:eu-west-1:xxxxxxxxxxxx:vpc/",
                    Object {
                      "Ref": "Vpc8378EB38",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterCreationRoleDDB5156B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterKubectlReadyBarrier346C8999": Object {
      "DependsOn": Array [
        "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
        "CassKopClusterfargateprofileFargateProfileE22A2CC1",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "CassKopCluster5683FE9F",
      ],
      "Properties": Object {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "CassKopClusterNodegroupnodegroupAZa4BA33BD2": Object {
      "Properties": Object {
        "AmiType": "AL2_x86_64",
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "ForceUpdateEnabled": false,
        "InstanceTypes": Array [
          "c5d.2xlarge",
        ],
        "Labels": Object {
          "cdk-nodegroup": "AZa",
        },
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
            "Arn",
          ],
        },
        "RemoteAccess": Object {
          "Ec2SshKey": "sallaman",
        },
        "ScalingConfig": Object {
          "DesiredSize": 1,
          "MaxSize": 10,
          "MinSize": 1,
        },
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
        ],
        "Tags": Object {
          "cdk-nodegroup": "AZa",
        },
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterNodegroupnodegroupAZb6B169D3A": Object {
      "Properties": Object {
        "AmiType": "AL2_x86_64",
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "ForceUpdateEnabled": false,
        "InstanceTypes": Array [
          "c5d.2xlarge",
        ],
        "Labels": Object {
          "cdk-nodegroup": "AZb",
        },
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
            "Arn",
          ],
        },
        "RemoteAccess": Object {
          "Ec2SshKey": "sallaman",
        },
        "ScalingConfig": Object {
          "DesiredSize": 1,
          "MaxSize": 10,
          "MinSize": 1,
        },
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
        "Tags": Object {
          "cdk-nodegroup": "AZb",
        },
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterNodegroupnodegroupAZc77B0FA59": Object {
      "Properties": Object {
        "AmiType": "AL2_x86_64",
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "ForceUpdateEnabled": false,
        "InstanceTypes": Array [
          "c5d.2xlarge",
        ],
        "Labels": Object {
          "cdk-nodegroup": "AZc",
        },
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
            "Arn",
          ],
        },
        "RemoteAccess": Object {
          "Ec2SshKey": "sallaman",
        },
        "ScalingConfig": Object {
          "DesiredSize": 1,
          "MaxSize": 10,
          "MinSize": 1,
        },
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E",
          },
        ],
        "Tags": Object {
          "cdk-nodegroup": "AZc",
        },
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterOpenIdConnectProvider1554EB4B": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClientIDList": Array [
          "sts.amazonaws.com",
        ],
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
            "Arn",
          ],
        },
        "ThumbprintList": Array [
          "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
        ],
        "Url": Object {
          "Fn::GetAtt": Array [
            "CassKopCluster5683FE9F",
            "OpenIdConnectIssuerUrl",
          ],
        },
      },
      "Type": "Custom::AWSCDKOpenIdConnectProvider",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterRole88533F86": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterSpotASG93EF1913": Object {
      "Properties": Object {
        "LaunchConfigurationName": Object {
          "Ref": "CassKopClusterSpotLaunchConfigFA810380",
        },
        "MaxInstanceLifetime": 604800,
        "MaxSize": "5",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "CassKopCluster5683FE9F",
                  },
                ],
              ],
            },
            "PropagateAtLaunch": true,
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "Casskop/CassKopCluster/Spot",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
          Object {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingRollingUpdate": Object {
          "MaxBatchSize": 1,
          "PauseTime": "PT0S",
          "SuspendProcesses": Array [
            "HealthCheck",
            "ReplaceUnhealthy",
            "AZRebalance",
            "AlarmNotification",
            "ScheduledActions",
          ],
          "WaitOnResourceSignals": false,
        },
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "CassKopClusterSpotInstanceProfileF7B9468A": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterSpotInstanceRole3796F757",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "CassKopClusterSpotInstanceRole3796F757": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "CassKopCluster5683FE9F",
                  },
                ],
              ],
            },
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/CassKopCluster/Spot",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterSpotInstanceSecurityGroup21F521B6": Object {
      "Properties": Object {
        "GroupDescription": "Casskop/CassKopCluster/Spot/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "CassKopCluster5683FE9F",
                  },
                ],
              ],
            },
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/CassKopCluster/Spot",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterClusterSecurityGroup9D6263A8102565535BCBB0FD7": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterClusterSecurityGroup9D6263A8:1025-65535",
        "FromPort": 1025,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopCluster5683FE9F",
            "ClusterSecurityGroupId",
          ],
        },
        "ToPort": 65535,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterClusterSecurityGroup9D6263A8443456E56E7": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterClusterSecurityGroup9D6263A8:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopCluster5683FE9F",
            "ClusterSecurityGroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4102565535B1544517": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterControlPlaneSecurityGroup27A08AA4:1025-65535",
        "FromPort": 1025,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterControlPlaneSecurityGroup99EA84BD",
            "GroupId",
          ],
        },
        "ToPort": 65535,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4443D85E169E": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterControlPlaneSecurityGroup27A08AA4:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterControlPlaneSecurityGroup99EA84BD",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC29206DE9": Object {
      "Properties": Object {
        "Description": "from CasskopCassKopClusterSpotInstanceSecurityGroupC3C97090:ALL TRAFFIC",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterSpotInstanceSecurityGroupfromCasskopclusterSG0E6F36F6ALLTRAFFIC88C0EC54": Object {
      "Properties": Object {
        "Description": "allow all traffic from cluster security group",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopCluster5683FE9F",
            "ClusterSecurityGroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "CassKopClusterSpotLaunchConfigFA810380": Object {
      "DependsOn": Array [
        "CassKopClusterSpotInstanceRole3796F757",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "CassKopClusterSpotInstanceProfileF7B9468A",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceeksoptimizedami117amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "c5.9xlarge",
        "KeyName": "sallaman",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "CassKopClusterSpotInstanceSecurityGroup21F521B6",
              "GroupId",
            ],
          },
        ],
        "SpotPrice": "1.728",
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash
set -o xtrace
/etc/eks/bootstrap.sh ",
                Object {
                  "Ref": "CassKopCluster5683FE9F",
                },
                " --kubelet-extra-args \\"--node-labels lifecycle=Ec2Spot --register-with-taints=spotInstance=true:PreferNoSchedule\\" --use-max-pods true
/opt/aws/bin/cfn-signal --exit-code $? --stack Casskop --resource CassKopClusterSpotASG93EF1913 --region eu-west-1",
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "CassKopClusterchartspotinterrupthandler80D296D7": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "Chart": "aws-node-termination-handler",
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "CreateNamespace": true,
        "Namespace": "kube-system",
        "Release": "asskopcasskopclusterchartspotinterrupthandlerb581dd3b",
        "Repository": "https://aws.github.io/eks-charts",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
        "Values": "{\\"nodeSelector.lifecycle\\":\\"Ec2Spot\\"}",
        "Version": "0.9.5",
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterfargateprofileFargateProfileE22A2CC1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "Config": Object {
          "clusterName": Object {
            "Ref": "CassKopCluster5683FE9F",
          },
          "podExecutionRoleArn": Object {
            "Fn::GetAtt": Array [
              "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
              "Arn",
            ],
          },
          "selectors": Array [
            Object {
              "namespace": "fargate",
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.CasskopawscdkawseksClusterResourceProviderframeworkonEventDEC5D217Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-FargateProfile",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks-fargate-pods.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClustermanifestcasskopcrdF60A29FA": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apiextensions.k8s.io/v1\\",\\"kind\\":\\"CustomResourceDefinition\\",\\"metadata\\":{\\"name\\":\\"cassandraclusters.db.orange.com\\"},\\"spec\\":{\\"group\\":\\"db.orange.com\\",\\"names\\":{\\"kind\\":\\"CassandraCluster\\",\\"listKind\\":\\"CassandraClusterList\\",\\"plural\\":\\"cassandraclusters\\",\\"singular\\":\\"cassandracluster\\"},\\"scope\\":\\"Namespaced\\",\\"versions\\":[{\\"name\\":\\"v1alpha1\\",\\"schema\\":{\\"openAPIV3Schema\\":{\\"description\\":\\"CassandraCluster is the Schema for the cassandraclusters API\\",\\"properties\\":{\\"apiVersion\\":{\\"description\\":\\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\\",\\"type\\":\\"string\\"},\\"kind\\":{\\"description\\":\\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\\",\\"type\\":\\"string\\"},\\"metadata\\":{\\"type\\":\\"object\\"},\\"spec\\":{\\"properties\\":{\\"autoPilot\\":{\\"description\\":\\"AutoPilot defines if the Operator can fly alone or if we need human action to trigger Actions on specific Cassandra nodes If autoPilot=true, the operator will set labels pod-operation-status=To-Do on Pods which allows him to automatically triggers Action If autoPilot=false, the operator will set labels pod-operation-status=Manual on Pods which won't automatically triggers Action\\",\\"type\\":\\"boolean\\"},\\"autoUpdateSeedList\\":{\\"description\\":\\"AutoUpdateSeedList defines if the Operator automatically update the SeedList according to new cluster CRD topology by default a boolean is false\\",\\"type\\":\\"boolean\\"},\\"backRestSidecar\\":{\\"description\\":\\"BackRestSidecar defines details about cassandra-sidecar to load along with each C* pod\\",\\"properties\\":{\\"image\\":{\\"default\\":\\"gcr.io/cassandra-operator/instaclustr-icarus:1.0.0\\",\\"description\\":\\"Image of backup/restore sidecar\\",\\"type\\":\\"string\\"},\\"imagePullPolicy\\":{\\"description\\":\\"ImagePullPolicy define the pull policy for backrest sidecar docker image\\",\\"type\\":\\"string\\"},\\"resources\\":{\\"description\\":\\"Kubernetes object : https://godoc.org/k8s.io/api/core/v1#ResourceRequirements\\",\\"properties\\":{\\"limits\\":{\\"additionalProperties\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"pattern\\":\\"^(\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))))?$\\",\\"x-kubernetes-int-or-string\\":true},\\"description\\":\\"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\\",\\"type\\":\\"object\\"},\\"requests\\":{\\"additionalProperties\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"pattern\\":\\"^(\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))))?$\\",\\"x-kubernetes-int-or-string\\":true},\\"description\\":\\"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\\",\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"bootstrapImage\\":{\\"description\\":\\"Image used for bootstrapping cluster (use the form base:version)\\",\\"type\\":\\"string\\"},\\"cassandraImage\\":{\\"description\\":\\"Image + version to use for Cassandra\\",\\"type\\":\\"string\\"},\\"configMapName\\":{\\"description\\":\\"Name of the ConfigMap for Cassandra configuration (cassandra.yaml) If this is empty, operator will uses default cassandra.yaml from the baseImage If this is not empty, operator will uses the cassandra.yaml from the Configmap instead\\",\\"type\\":\\"string\\"},\\"dataCapacity\\":{\\"description\\":\\"Define the Capacity for Persistent Volume Claims in the local storage\\",\\"pattern\\":\\"^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\\",\\"type\\":\\"string\\"},\\"dataStorageClass\\":{\\"description\\":\\"Define StorageClass for Persistent Volume Claims in the local storage.\\",\\"type\\":\\"string\\"},\\"debug\\":{\\"description\\":\\"Debug is used to surcharge Cassandra pod command to not directly start cassandra but starts an infinite wait to allow user to connect a bash into the pod to make some diagnoses.\\",\\"type\\":\\"boolean\\"},\\"deletePVC\\":{\\"description\\":\\"DeletePVC defines if the PVC must be deleted when the cluster is deleted it is false by default\\",\\"type\\":\\"boolean\\"},\\"gcStdout\\":{\\"description\\":\\"GCStdout set the parameter CASSANDRA_GC_STDOUT which configure the JVM -Xloggc: true by default\\",\\"type\\":\\"boolean\\"},\\"hardAntiAffinity\\":{\\"description\\":\\"HardAntiAffinity defines if the PodAntiAffinity of the statefulset has to be hard (it's soft by default)\\",\\"type\\":\\"boolean\\"},\\"imageJolokiaSecret\\":{\\"description\\":\\"JMX Secret if Set is used to set JMX_USER and JMX_PASSWORD\\",\\"properties\\":{\\"name\\":{\\"description\\":\\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\\",\\"type\\":\\"string\\"}},\\"type\\":\\"object\\"},\\"imagePullSecret\\":{\\"description\\":\\"Name of the secret to uses to authenticate on Docker registries If this is empty, operator do nothing If this is not empty, propagate the imagePullSecrets to the statefulsets\\",\\"properties\\":{\\"name\\":{\\"description\\":\\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\\",\\"type\\":\\"string\\"}},\\"type\\":\\"object\\"},\\"imagepullpolicy\\":{\\"description\\":\\"ImagePullPolicy define the pull policy for C* docker image\\",\\"type\\":\\"string\\"},\\"initContainerCmd\\":{\\"description\\":\\"Command to execute in the initContainer in the targeted image\\",\\"type\\":\\"string\\"},\\"initContainerImage\\":{\\"description\\":\\"Image used in the initContainer (use the form base:version)\\",\\"type\\":\\"string\\"},\\"livenessFailureThreshold\\":{\\"description\\":\\"LivenessFailureThreshold defines failure threshold for the liveness probe of the main cassandra container : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"livenessHealthCheckPeriod\\":{\\"description\\":\\"LivenessHealthCheckPeriod defines health check period for the liveness probe of the main cassandra container : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"livenessHealthCheckTimeout\\":{\\"description\\":\\"LivenessHealthCheckTimeout defines health check timeout for the liveness probe of the main cassandra container : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"livenessInitialDelaySeconds\\":{\\"description\\":\\"LivenessInitialDelaySeconds defines initial delay for the liveness probe of the main cassandra container : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"livenessSuccessThreshold\\":{\\"description\\":\\"LivenessSuccessThreshold defines success threshold for the liveness probe of the main cassandra container : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"maxPodUnavailable\\":{\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"noCheckStsAreEqual\\":{\\"type\\":\\"boolean\\"},\\"nodesPerRacks\\":{\\"description\\":\\"Number of nodes to deploy for a Cassandra deployment in each Racks. Default: 1. If NodesPerRacks = 2 and there is 3 racks, the cluster will have 6 Cassandra Nodes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"pod\\":{\\"description\\":\\"PodPolicy defines the policy for pods owned by CassKop operator.\\",\\"properties\\":{\\"annotations\\":{\\"additionalProperties\\":{\\"type\\":\\"string\\"},\\"description\\":\\"Annotations specifies the annotations to attach to headless service the CassKop operator creates\\",\\"type\\":\\"object\\"},\\"tolerations\\":{\\"description\\":\\"Tolerations specifies the tolerations to attach to the pods the CassKop operator creates\\",\\"items\\":{\\"description\\":\\"The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.\\",\\"properties\\":{\\"effect\\":{\\"description\\":\\"Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\\",\\"type\\":\\"string\\"},\\"key\\":{\\"description\\":\\"Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.\\",\\"type\\":\\"string\\"},\\"operator\\":{\\"description\\":\\"Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\\",\\"type\\":\\"string\\"},\\"tolerationSeconds\\":{\\"description\\":\\"TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.\\",\\"format\\":\\"int64\\",\\"type\\":\\"integer\\"},\\"value\\":{\\"description\\":\\"Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.\\",\\"type\\":\\"string\\"}},\\"type\\":\\"object\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"},\\"readOnlyRootFilesystem\\":{\\"description\\":\\"Make the pod as Readonly\\",\\"type\\":\\"boolean\\"},\\"readinessFailureThreshold\\":{\\"description\\":\\"ReadinessFailureThreshold defines failure threshold for the readiness probe of the main cassandra container : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"readinessHealthCheckPeriod\\":{\\"description\\":\\"ReadinessHealthCheckPeriod defines health check period for the readiness probe of the main cassandra container : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"readinessHealthCheckTimeout\\":{\\"description\\":\\"ReadinessHealthCheckTimeout defines health check timeout for the readiness probe of the main cassandra container : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"readinessInitialDelaySeconds\\":{\\"description\\":\\"ReadinessInitialDelaySeconds defines initial delay for the readiness probe of the main cassandra container : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"readinessSuccessThreshold\\":{\\"description\\":\\"ReadinessSuccessThreshold defines success threshold for the readiness probe of the main cassandra container : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"resources\\":{\\"description\\":\\"Pod defines the policy for pods owned by cassandra operator. This field cannot be updated once the CR is created. Pod       *PodPolicy         \`json:\\\\\\"pod,omitempty\\\\\\"\`\\",\\"properties\\":{\\"limits\\":{\\"description\\":\\"CPUAndMem defines how many cpu and ram the container will request/limit\\",\\"properties\\":{\\"cpu\\":{\\"pattern\\":\\"^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\\",\\"type\\":\\"string\\"},\\"memory\\":{\\"pattern\\":\\"^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"cpu\\",\\"memory\\"],\\"type\\":\\"object\\"},\\"requests\\":{\\"description\\":\\"CPUAndMem defines how many cpu and ram the container will request/limit\\",\\"properties\\":{\\"cpu\\":{\\"pattern\\":\\"^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\\",\\"type\\":\\"string\\"},\\"memory\\":{\\"pattern\\":\\"^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"cpu\\",\\"memory\\"],\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"restartCountBeforePodDeletion\\":{\\"description\\":\\"RestartCountBeforePodDeletion defines the number of restart allowed for a cassandra container allowed before deleting the pod  to force its restart from scratch. if set to 0 or omit, no action will be performed based on restart count.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"runAsUser\\":{\\"description\\":\\"RunAsUser define the id of the user to run in the Cassandra image\\",\\"format\\":\\"int64\\",\\"minimum\\":1,\\"type\\":\\"integer\\"},\\"service\\":{\\"description\\":\\"ServicePolicy defines the policy for headless service owned by CassKop operator.\\",\\"properties\\":{\\"annotations\\":{\\"additionalProperties\\":{\\"type\\":\\"string\\"},\\"description\\":\\"Annotations specifies the annotations to attach to headless service the CassKop operator creates\\",\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"serviceAccountName\\":{\\"type\\":\\"string\\"},\\"shareProcessNamespace\\":{\\"description\\":\\"When process namespace sharing is enabled, processes in a container are visible to all other containers in that pod. https://kubernetes.io/docs/tasks/configure-pod-container/share-process-namespace/ Optional: Default to false.\\",\\"type\\":\\"boolean\\"},\\"sidecarConfigs\\":{\\"description\\":\\"SidecarsConfig defines additional sidecar configurations\\",\\"items\\":{\\"description\\":\\"A single application container that you want to run within a pod.\\",\\"properties\\":{\\"args\\":{\\"description\\":\\"Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"},\\"command\\":{\\"description\\":\\"Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"},\\"env\\":{\\"description\\":\\"List of environment variables to set in the container. Cannot be updated.\\",\\"items\\":{\\"description\\":\\"EnvVar represents an environment variable present in a Container.\\",\\"properties\\":{\\"name\\":{\\"description\\":\\"Name of the environment variable. Must be a C_IDENTIFIER.\\",\\"type\\":\\"string\\"},\\"value\\":{\\"description\\":\\"Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \\\\\\"\\\\\\".\\",\\"type\\":\\"string\\"},\\"valueFrom\\":{\\"description\\":\\"Source for the environment variable's value. Cannot be used if value is not empty.\\",\\"properties\\":{\\"configMapKeyRef\\":{\\"description\\":\\"Selects a key of a ConfigMap.\\",\\"properties\\":{\\"key\\":{\\"description\\":\\"The key to select.\\",\\"type\\":\\"string\\"},\\"name\\":{\\"description\\":\\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\\",\\"type\\":\\"string\\"},\\"optional\\":{\\"description\\":\\"Specify whether the ConfigMap or its key must be defined\\",\\"type\\":\\"boolean\\"}},\\"required\\":[\\"key\\"],\\"type\\":\\"object\\"},\\"fieldRef\\":{\\"description\\":\\"Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.\\",\\"properties\\":{\\"apiVersion\\":{\\"description\\":\\"Version of the schema the FieldPath is written in terms of, defaults to \\\\\\"v1\\\\\\".\\",\\"type\\":\\"string\\"},\\"fieldPath\\":{\\"description\\":\\"Path of the field to select in the specified API version.\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"fieldPath\\"],\\"type\\":\\"object\\"},\\"resourceFieldRef\\":{\\"description\\":\\"Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.\\",\\"properties\\":{\\"containerName\\":{\\"description\\":\\"Container name: required for volumes, optional for env vars\\",\\"type\\":\\"string\\"},\\"divisor\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Specifies the output format of the exposed resources, defaults to \\\\\\"1\\\\\\"\\",\\"pattern\\":\\"^(\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))))?$\\",\\"x-kubernetes-int-or-string\\":true},\\"resource\\":{\\"description\\":\\"Required: resource to select\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"resource\\"],\\"type\\":\\"object\\"},\\"secretKeyRef\\":{\\"description\\":\\"Selects a key of a secret in the pod's namespace\\",\\"properties\\":{\\"key\\":{\\"description\\":\\"The key of the secret to select from.  Must be a valid secret key.\\",\\"type\\":\\"string\\"},\\"name\\":{\\"description\\":\\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\\",\\"type\\":\\"string\\"},\\"optional\\":{\\"description\\":\\"Specify whether the Secret or its key must be defined\\",\\"type\\":\\"boolean\\"}},\\"required\\":[\\"key\\"],\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"}},\\"required\\":[\\"name\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"envFrom\\":{\\"description\\":\\"List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.\\",\\"items\\":{\\"description\\":\\"EnvFromSource represents the source of a set of ConfigMaps\\",\\"properties\\":{\\"configMapRef\\":{\\"description\\":\\"The ConfigMap to select from\\",\\"properties\\":{\\"name\\":{\\"description\\":\\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\\",\\"type\\":\\"string\\"},\\"optional\\":{\\"description\\":\\"Specify whether the ConfigMap must be defined\\",\\"type\\":\\"boolean\\"}},\\"type\\":\\"object\\"},\\"prefix\\":{\\"description\\":\\"An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\\",\\"type\\":\\"string\\"},\\"secretRef\\":{\\"description\\":\\"The Secret to select from\\",\\"properties\\":{\\"name\\":{\\"description\\":\\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\\",\\"type\\":\\"string\\"},\\"optional\\":{\\"description\\":\\"Specify whether the Secret must be defined\\",\\"type\\":\\"boolean\\"}},\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"image\\":{\\"description\\":\\"Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.\\",\\"type\\":\\"string\\"},\\"imagePullPolicy\\":{\\"description\\":\\"Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\\",\\"type\\":\\"string\\"},\\"lifecycle\\":{\\"description\\":\\"Actions that the management system should take in response to container lifecycle events. Cannot be updated.\\",\\"properties\\":{\\"postStart\\":{\\"description\\":\\"PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\\",\\"properties\\":{\\"exec\\":{\\"description\\":\\"One and only one of the following should be specified. Exec specifies the action to take.\\",\\"properties\\":{\\"command\\":{\\"description\\":\\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"},\\"httpGet\\":{\\"description\\":\\"HTTPGet specifies the http request to perform.\\",\\"properties\\":{\\"host\\":{\\"description\\":\\"Host name to connect to, defaults to the pod IP. You probably want to set \\\\\\"Host\\\\\\" in httpHeaders instead.\\",\\"type\\":\\"string\\"},\\"httpHeaders\\":{\\"description\\":\\"Custom headers to set in the request. HTTP allows repeated headers.\\",\\"items\\":{\\"description\\":\\"HTTPHeader describes a custom header to be used in HTTP probes\\",\\"properties\\":{\\"name\\":{\\"description\\":\\"The header field name\\",\\"type\\":\\"string\\"},\\"value\\":{\\"description\\":\\"The header field value\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"name\\",\\"value\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"path\\":{\\"description\\":\\"Path to access on the HTTP server.\\",\\"type\\":\\"string\\"},\\"port\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\\",\\"x-kubernetes-int-or-string\\":true},\\"scheme\\":{\\"description\\":\\"Scheme to use for connecting to the host. Defaults to HTTP.\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"port\\"],\\"type\\":\\"object\\"},\\"tcpSocket\\":{\\"description\\":\\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\\",\\"properties\\":{\\"host\\":{\\"description\\":\\"Optional: Host name to connect to, defaults to the pod IP.\\",\\"type\\":\\"string\\"},\\"port\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\\",\\"x-kubernetes-int-or-string\\":true}},\\"required\\":[\\"port\\"],\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"preStop\\":{\\"description\\":\\"PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks\\",\\"properties\\":{\\"exec\\":{\\"description\\":\\"One and only one of the following should be specified. Exec specifies the action to take.\\",\\"properties\\":{\\"command\\":{\\"description\\":\\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"},\\"httpGet\\":{\\"description\\":\\"HTTPGet specifies the http request to perform.\\",\\"properties\\":{\\"host\\":{\\"description\\":\\"Host name to connect to, defaults to the pod IP. You probably want to set \\\\\\"Host\\\\\\" in httpHeaders instead.\\",\\"type\\":\\"string\\"},\\"httpHeaders\\":{\\"description\\":\\"Custom headers to set in the request. HTTP allows repeated headers.\\",\\"items\\":{\\"description\\":\\"HTTPHeader describes a custom header to be used in HTTP probes\\",\\"properties\\":{\\"name\\":{\\"description\\":\\"The header field name\\",\\"type\\":\\"string\\"},\\"value\\":{\\"description\\":\\"The header field value\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"name\\",\\"value\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"path\\":{\\"description\\":\\"Path to access on the HTTP server.\\",\\"type\\":\\"string\\"},\\"port\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\\",\\"x-kubernetes-int-or-string\\":true},\\"scheme\\":{\\"description\\":\\"Scheme to use for connecting to the host. Defaults to HTTP.\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"port\\"],\\"type\\":\\"object\\"},\\"tcpSocket\\":{\\"description\\":\\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\\",\\"properties\\":{\\"host\\":{\\"description\\":\\"Optional: Host name to connect to, defaults to the pod IP.\\",\\"type\\":\\"string\\"},\\"port\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\\",\\"x-kubernetes-int-or-string\\":true}},\\"required\\":[\\"port\\"],\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"livenessProbe\\":{\\"description\\":\\"Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\\",\\"properties\\":{\\"exec\\":{\\"description\\":\\"One and only one of the following should be specified. Exec specifies the action to take.\\",\\"properties\\":{\\"command\\":{\\"description\\":\\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"},\\"failureThreshold\\":{\\"description\\":\\"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"httpGet\\":{\\"description\\":\\"HTTPGet specifies the http request to perform.\\",\\"properties\\":{\\"host\\":{\\"description\\":\\"Host name to connect to, defaults to the pod IP. You probably want to set \\\\\\"Host\\\\\\" in httpHeaders instead.\\",\\"type\\":\\"string\\"},\\"httpHeaders\\":{\\"description\\":\\"Custom headers to set in the request. HTTP allows repeated headers.\\",\\"items\\":{\\"description\\":\\"HTTPHeader describes a custom header to be used in HTTP probes\\",\\"properties\\":{\\"name\\":{\\"description\\":\\"The header field name\\",\\"type\\":\\"string\\"},\\"value\\":{\\"description\\":\\"The header field value\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"name\\",\\"value\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"path\\":{\\"description\\":\\"Path to access on the HTTP server.\\",\\"type\\":\\"string\\"},\\"port\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\\",\\"x-kubernetes-int-or-string\\":true},\\"scheme\\":{\\"description\\":\\"Scheme to use for connecting to the host. Defaults to HTTP.\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"port\\"],\\"type\\":\\"object\\"},\\"initialDelaySeconds\\":{\\"description\\":\\"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"periodSeconds\\":{\\"description\\":\\"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"successThreshold\\":{\\"description\\":\\"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"tcpSocket\\":{\\"description\\":\\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\\",\\"properties\\":{\\"host\\":{\\"description\\":\\"Optional: Host name to connect to, defaults to the pod IP.\\",\\"type\\":\\"string\\"},\\"port\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\\",\\"x-kubernetes-int-or-string\\":true}},\\"required\\":[\\"port\\"],\\"type\\":\\"object\\"},\\"timeoutSeconds\\":{\\"description\\":\\"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"}},\\"type\\":\\"object\\"},\\"name\\":{\\"description\\":\\"Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.\\",\\"type\\":\\"string\\"},\\"ports\\":{\\"description\\":\\"List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \\\\\\"0.0.0.0\\\\\\" address inside a container will be accessible from the network. Cannot be updated.\\",\\"items\\":{\\"description\\":\\"ContainerPort represents a network port in a single container.\\",\\"properties\\":{\\"containerPort\\":{\\"description\\":\\"Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"hostIP\\":{\\"description\\":\\"What host IP to bind the external port to.\\",\\"type\\":\\"string\\"},\\"hostPort\\":{\\"description\\":\\"Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"name\\":{\\"description\\":\\"If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.\\",\\"type\\":\\"string\\"},\\"protocol\\":{\\"description\\":\\"Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \\\\\\"TCP\\\\\\".\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"containerPort\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\",\\"x-kubernetes-list-map-keys\\":[\\"containerPort\\"],\\"x-kubernetes-list-type\\":\\"map\\"},\\"readinessProbe\\":{\\"description\\":\\"Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\\",\\"properties\\":{\\"exec\\":{\\"description\\":\\"One and only one of the following should be specified. Exec specifies the action to take.\\",\\"properties\\":{\\"command\\":{\\"description\\":\\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"},\\"failureThreshold\\":{\\"description\\":\\"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"httpGet\\":{\\"description\\":\\"HTTPGet specifies the http request to perform.\\",\\"properties\\":{\\"host\\":{\\"description\\":\\"Host name to connect to, defaults to the pod IP. You probably want to set \\\\\\"Host\\\\\\" in httpHeaders instead.\\",\\"type\\":\\"string\\"},\\"httpHeaders\\":{\\"description\\":\\"Custom headers to set in the request. HTTP allows repeated headers.\\",\\"items\\":{\\"description\\":\\"HTTPHeader describes a custom header to be used in HTTP probes\\",\\"properties\\":{\\"name\\":{\\"description\\":\\"The header field name\\",\\"type\\":\\"string\\"},\\"value\\":{\\"description\\":\\"The header field value\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"name\\",\\"value\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"path\\":{\\"description\\":\\"Path to access on the HTTP server.\\",\\"type\\":\\"string\\"},\\"port\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\\",\\"x-kubernetes-int-or-string\\":true},\\"scheme\\":{\\"description\\":\\"Scheme to use for connecting to the host. Defaults to HTTP.\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"port\\"],\\"type\\":\\"object\\"},\\"initialDelaySeconds\\":{\\"description\\":\\"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"periodSeconds\\":{\\"description\\":\\"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"successThreshold\\":{\\"description\\":\\"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"tcpSocket\\":{\\"description\\":\\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\\",\\"properties\\":{\\"host\\":{\\"description\\":\\"Optional: Host name to connect to, defaults to the pod IP.\\",\\"type\\":\\"string\\"},\\"port\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\\",\\"x-kubernetes-int-or-string\\":true}},\\"required\\":[\\"port\\"],\\"type\\":\\"object\\"},\\"timeoutSeconds\\":{\\"description\\":\\"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"}},\\"type\\":\\"object\\"},\\"resources\\":{\\"description\\":\\"Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\\",\\"properties\\":{\\"limits\\":{\\"additionalProperties\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"pattern\\":\\"^(\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))))?$\\",\\"x-kubernetes-int-or-string\\":true},\\"description\\":\\"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\\",\\"type\\":\\"object\\"},\\"requests\\":{\\"additionalProperties\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"pattern\\":\\"^(\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))))?$\\",\\"x-kubernetes-int-or-string\\":true},\\"description\\":\\"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\\",\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"securityContext\\":{\\"description\\":\\"Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\\",\\"properties\\":{\\"allowPrivilegeEscalation\\":{\\"description\\":\\"AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN\\",\\"type\\":\\"boolean\\"},\\"capabilities\\":{\\"description\\":\\"The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.\\",\\"properties\\":{\\"add\\":{\\"description\\":\\"Added capabilities\\",\\"items\\":{\\"description\\":\\"Capability represent POSIX capabilities type\\",\\"type\\":\\"string\\"},\\"type\\":\\"array\\"},\\"drop\\":{\\"description\\":\\"Removed capabilities\\",\\"items\\":{\\"description\\":\\"Capability represent POSIX capabilities type\\",\\"type\\":\\"string\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"},\\"privileged\\":{\\"description\\":\\"Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.\\",\\"type\\":\\"boolean\\"},\\"procMount\\":{\\"description\\":\\"procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.\\",\\"type\\":\\"string\\"},\\"readOnlyRootFilesystem\\":{\\"description\\":\\"Whether this container has a read-only root filesystem. Default is false.\\",\\"type\\":\\"boolean\\"},\\"runAsGroup\\":{\\"description\\":\\"The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\\",\\"format\\":\\"int64\\",\\"type\\":\\"integer\\"},\\"runAsNonRoot\\":{\\"description\\":\\"Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\\",\\"type\\":\\"boolean\\"},\\"runAsUser\\":{\\"description\\":\\"The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\\",\\"format\\":\\"int64\\",\\"type\\":\\"integer\\"},\\"seLinuxOptions\\":{\\"description\\":\\"The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\\",\\"properties\\":{\\"level\\":{\\"description\\":\\"Level is SELinux level label that applies to the container.\\",\\"type\\":\\"string\\"},\\"role\\":{\\"description\\":\\"Role is a SELinux role label that applies to the container.\\",\\"type\\":\\"string\\"},\\"type\\":{\\"description\\":\\"Type is a SELinux type label that applies to the container.\\",\\"type\\":\\"string\\"},\\"user\\":{\\"description\\":\\"User is a SELinux user label that applies to the container.\\",\\"type\\":\\"string\\"}},\\"type\\":\\"object\\"},\\"windowsOptions\\":{\\"description\\":\\"The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\\",\\"properties\\":{\\"gmsaCredentialSpec\\":{\\"description\\":\\"GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.\\",\\"type\\":\\"string\\"},\\"gmsaCredentialSpecName\\":{\\"description\\":\\"GMSACredentialSpecName is the name of the GMSA credential spec to use.\\",\\"type\\":\\"string\\"},\\"runAsUserName\\":{\\"description\\":\\"The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\\",\\"type\\":\\"string\\"}},\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"startupProbe\\":{\\"description\\":\\"StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\\",\\"properties\\":{\\"exec\\":{\\"description\\":\\"One and only one of the following should be specified. Exec specifies the action to take.\\",\\"properties\\":{\\"command\\":{\\"description\\":\\"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"},\\"failureThreshold\\":{\\"description\\":\\"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"httpGet\\":{\\"description\\":\\"HTTPGet specifies the http request to perform.\\",\\"properties\\":{\\"host\\":{\\"description\\":\\"Host name to connect to, defaults to the pod IP. You probably want to set \\\\\\"Host\\\\\\" in httpHeaders instead.\\",\\"type\\":\\"string\\"},\\"httpHeaders\\":{\\"description\\":\\"Custom headers to set in the request. HTTP allows repeated headers.\\",\\"items\\":{\\"description\\":\\"HTTPHeader describes a custom header to be used in HTTP probes\\",\\"properties\\":{\\"name\\":{\\"description\\":\\"The header field name\\",\\"type\\":\\"string\\"},\\"value\\":{\\"description\\":\\"The header field value\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"name\\",\\"value\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"path\\":{\\"description\\":\\"Path to access on the HTTP server.\\",\\"type\\":\\"string\\"},\\"port\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\\",\\"x-kubernetes-int-or-string\\":true},\\"scheme\\":{\\"description\\":\\"Scheme to use for connecting to the host. Defaults to HTTP.\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"port\\"],\\"type\\":\\"object\\"},\\"initialDelaySeconds\\":{\\"description\\":\\"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"periodSeconds\\":{\\"description\\":\\"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"successThreshold\\":{\\"description\\":\\"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"tcpSocket\\":{\\"description\\":\\"TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook\\",\\"properties\\":{\\"host\\":{\\"description\\":\\"Optional: Host name to connect to, defaults to the pod IP.\\",\\"type\\":\\"string\\"},\\"port\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"description\\":\\"Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.\\",\\"x-kubernetes-int-or-string\\":true}},\\"required\\":[\\"port\\"],\\"type\\":\\"object\\"},\\"timeoutSeconds\\":{\\"description\\":\\"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"}},\\"type\\":\\"object\\"},\\"stdin\\":{\\"description\\":\\"Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.\\",\\"type\\":\\"boolean\\"},\\"stdinOnce\\":{\\"description\\":\\"Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false\\",\\"type\\":\\"boolean\\"},\\"terminationMessagePath\\":{\\"description\\":\\"Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.\\",\\"type\\":\\"string\\"},\\"terminationMessagePolicy\\":{\\"description\\":\\"Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.\\",\\"type\\":\\"string\\"},\\"tty\\":{\\"description\\":\\"Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.\\",\\"type\\":\\"boolean\\"},\\"volumeDevices\\":{\\"description\\":\\"volumeDevices is the list of block devices to be used by the container.\\",\\"items\\":{\\"description\\":\\"volumeDevice describes a mapping of a raw block device within a container.\\",\\"properties\\":{\\"devicePath\\":{\\"description\\":\\"devicePath is the path inside of the container that the device will be mapped to.\\",\\"type\\":\\"string\\"},\\"name\\":{\\"description\\":\\"name must match the name of a persistentVolumeClaim in the pod\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"devicePath\\",\\"name\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"volumeMounts\\":{\\"description\\":\\"Pod volumes to mount into the container's filesystem. Cannot be updated.\\",\\"items\\":{\\"description\\":\\"VolumeMount describes a mounting of a Volume within a container.\\",\\"properties\\":{\\"mountPath\\":{\\"description\\":\\"Path within the container at which the volume should be mounted.  Must not contain ':'.\\",\\"type\\":\\"string\\"},\\"mountPropagation\\":{\\"description\\":\\"mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.\\",\\"type\\":\\"string\\"},\\"name\\":{\\"description\\":\\"This must match the Name of a Volume.\\",\\"type\\":\\"string\\"},\\"readOnly\\":{\\"description\\":\\"Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.\\",\\"type\\":\\"boolean\\"},\\"subPath\\":{\\"description\\":\\"Path within the volume from which the container's volume should be mounted. Defaults to \\\\\\"\\\\\\" (volume's root).\\",\\"type\\":\\"string\\"},\\"subPathExpr\\":{\\"description\\":\\"Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \\\\\\"\\\\\\" (volume's root). SubPathExpr and SubPath are mutually exclusive.\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"mountPath\\",\\"name\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"workingDir\\":{\\"description\\":\\"Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"name\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"storageConfigs\\":{\\"description\\":\\"StorageConfig defines additional storage configurations\\",\\"items\\":{\\"description\\":\\"StorageConfig defines additional storage configurations\\",\\"properties\\":{\\"mountPath\\":{\\"description\\":\\"Mount path into cassandra container\\",\\"type\\":\\"string\\"},\\"name\\":{\\"description\\":\\"Name of the pvc\\",\\"pattern\\":\\"[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\\\\\\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\",\\"type\\":\\"string\\"},\\"pvcSpec\\":{\\"description\\":\\"Persistent volume claim spec\\",\\"properties\\":{\\"accessModes\\":{\\"description\\":\\"AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"},\\"dataSource\\":{\\"description\\":\\"This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.\\",\\"properties\\":{\\"apiGroup\\":{\\"description\\":\\"APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.\\",\\"type\\":\\"string\\"},\\"kind\\":{\\"description\\":\\"Kind is the type of resource being referenced\\",\\"type\\":\\"string\\"},\\"name\\":{\\"description\\":\\"Name is the name of resource being referenced\\",\\"type\\":\\"string\\"}},\\"required\\":[\\"kind\\",\\"name\\"],\\"type\\":\\"object\\"},\\"resources\\":{\\"description\\":\\"Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources\\",\\"properties\\":{\\"limits\\":{\\"additionalProperties\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"pattern\\":\\"^(\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))))?$\\",\\"x-kubernetes-int-or-string\\":true},\\"description\\":\\"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\\",\\"type\\":\\"object\\"},\\"requests\\":{\\"additionalProperties\\":{\\"anyOf\\":[{\\"type\\":\\"integer\\"},{\\"type\\":\\"string\\"}],\\"pattern\\":\\"^(\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\\\\\\\+|-)?(([0-9]+(\\\\\\\\.[0-9]*)?)|(\\\\\\\\.[0-9]+))))?$\\",\\"x-kubernetes-int-or-string\\":true},\\"description\\":\\"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/\\",\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"selector\\":{\\"description\\":\\"A label query over volumes to consider for binding.\\",\\"properties\\":{\\"matchExpressions\\":{\\"description\\":\\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\\",\\"items\\":{\\"description\\":\\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\\",\\"properties\\":{\\"key\\":{\\"description\\":\\"key is the label key that the selector applies to.\\",\\"type\\":\\"string\\"},\\"operator\\":{\\"description\\":\\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\\",\\"type\\":\\"string\\"},\\"values\\":{\\"description\\":\\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"}},\\"required\\":[\\"key\\",\\"operator\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"matchLabels\\":{\\"additionalProperties\\":{\\"type\\":\\"string\\"},\\"description\\":\\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\\\\"key\\\\\\", the operator is \\\\\\"In\\\\\\", and the values array contains only \\\\\\"value\\\\\\". The requirements are ANDed.\\",\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"storageClassName\\":{\\"description\\":\\"Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\\",\\"type\\":\\"string\\"},\\"volumeMode\\":{\\"description\\":\\"volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.\\",\\"type\\":\\"string\\"},\\"volumeName\\":{\\"description\\":\\"VolumeName is the binding reference to the PersistentVolume backing this claim.\\",\\"type\\":\\"string\\"}},\\"type\\":\\"object\\"}},\\"required\\":[\\"mountPath\\",\\"name\\",\\"pvcSpec\\"],\\"type\\":\\"object\\"},\\"type\\":\\"array\\"},\\"topology\\":{\\"description\\":\\"Topology to create Cassandra DC and Racks and to target appropriate Kubernetes Nodes\\",\\"properties\\":{\\"dc\\":{\\"description\\":\\"List of DC defined in the CassandraCluster\\",\\"items\\":{\\"description\\":\\"DC allow to configure Cassandra RC according to kubernetes nodeselector labels\\",\\"properties\\":{\\"dataCapacity\\":{\\"description\\":\\"Define the Capacity for Persistent Volume Claims in the local storage\\",\\"pattern\\":\\"^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$\\",\\"type\\":\\"string\\"},\\"dataStorageClass\\":{\\"description\\":\\"Define StorageClass for Persistent Volume Claims in the local storage.\\",\\"type\\":\\"string\\"},\\"labels\\":{\\"additionalProperties\\":{\\"type\\":\\"string\\"},\\"description\\":\\"Labels used to target Kubernetes nodes\\",\\"type\\":\\"object\\"},\\"name\\":{\\"description\\":\\"Name of the DC\\",\\"pattern\\":\\"^[^-]+$\\",\\"type\\":\\"string\\"},\\"nodesPerRacks\\":{\\"description\\":\\"Number of nodes to deploy for a Cassandra deployment in each Racks. Default: 1. Optional, if not filled, used value define in CassandraClusterSpec\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"numTokens\\":{\\"description\\":\\"NumTokens : configure the CASSANDRA_NUM_TOKENS parameter which can be different for each DD\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"rack\\":{\\"description\\":\\"List of Racks defined in the Cassandra DC\\",\\"items\\":{\\"description\\":\\"Rack allow to configure Cassandra Rack according to kubernetes nodeselector labels\\",\\"properties\\":{\\"labels\\":{\\"additionalProperties\\":{\\"type\\":\\"string\\"},\\"description\\":\\"Labels used to target Kubernetes nodes\\",\\"type\\":\\"object\\"},\\"name\\":{\\"description\\":\\"Name of the Rack\\",\\"pattern\\":\\"^[^-]+$\\",\\"type\\":\\"string\\"},\\"rollingPartition\\":{\\"description\\":\\"The Partition to control the Statefulset Upgrade\\",\\"format\\":\\"int32\\",\\"type\\":\\"integer\\"},\\"rollingRestart\\":{\\"description\\":\\"Flag to tell the operator to trigger a rolling restart of the Rack\\",\\"type\\":\\"boolean\\"}},\\"type\\":\\"object\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"},\\"unlockNextOperation\\":{\\"description\\":\\"Very special Flag to hack CassKop reconcile loop - use with really good Care\\",\\"type\\":\\"boolean\\"}},\\"type\\":\\"object\\"},\\"status\\":{\\"description\\":\\"CassandraClusterStatus defines Global state of CassandraCluster\\",\\"properties\\":{\\"cassandraNodeStatus\\":{\\"additionalProperties\\":{\\"properties\\":{\\"hostId\\":{\\"type\\":\\"string\\"},\\"nodeIp\\":{\\"type\\":\\"string\\"}},\\"type\\":\\"object\\"},\\"type\\":\\"object\\"},\\"cassandraRackStatus\\":{\\"additionalProperties\\":{\\"description\\":\\"CassandraRackStatus defines states of Cassandra for 1 rack (1 statefulset)\\",\\"properties\\":{\\"cassandraLastAction\\":{\\"description\\":\\"CassandraLastAction is the set of Cassandra State & Actions: Active, Standby..\\",\\"properties\\":{\\"endTime\\":{\\"format\\":\\"date-time\\",\\"type\\":\\"string\\"},\\"name\\":{\\"description\\":\\"Type of action to perform : UpdateVersion, UpdateBaseImage, UpdateConfigMap..\\",\\"type\\":\\"string\\"},\\"startTime\\":{\\"format\\":\\"date-time\\",\\"type\\":\\"string\\"},\\"status\\":{\\"description\\":\\"Action is the specific actions that can be done on a Cassandra Cluster such as cleanup, upgradesstables..\\",\\"type\\":\\"string\\"},\\"updatedNodes\\":{\\"description\\":\\"PodNames of updated Cassandra nodes. Updated means the Cassandra container image version matches the spec's version.\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"},\\"phase\\":{\\"description\\":\\"Phase indicates the state this Cassandra cluster jumps in. Phase goes as one way as below:   Initial -> Running <-> updating\\",\\"type\\":\\"string\\"},\\"podLastOperation\\":{\\"description\\":\\"PodLastOperation manage status for Pod Operation (nodetool cleanup, upgradesstables..)\\",\\"properties\\":{\\"endTime\\":{\\"format\\":\\"date-time\\",\\"type\\":\\"string\\"},\\"name\\":{\\"type\\":\\"string\\"},\\"operatorName\\":{\\"description\\":\\"Name of operator\\",\\"type\\":\\"string\\"},\\"pods\\":{\\"description\\":\\"List of pods running an operation\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"},\\"podsKO\\":{\\"description\\":\\"List of pods that fail to run an operation\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"},\\"podsOK\\":{\\"description\\":\\"List of pods that run an operation successfully\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"},\\"startTime\\":{\\"format\\":\\"date-time\\",\\"type\\":\\"string\\"},\\"status\\":{\\"type\\":\\"string\\"}},\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"},\\"description\\":\\"CassandraRackStatusList list status for each Rack\\",\\"type\\":\\"object\\"},\\"lastClusterAction\\":{\\"description\\":\\"Store last action at cluster level\\",\\"type\\":\\"string\\"},\\"lastClusterActionStatus\\":{\\"type\\":\\"string\\"},\\"phase\\":{\\"description\\":\\"Phase indicates the state this Cassandra cluster jumps in. Phase goes as one way as below:   Initial -> Running <-> updating\\",\\"type\\":\\"string\\"},\\"seedlist\\":{\\"description\\":\\"seedList to be used in Cassandra's Pods (computed by the Operator)\\",\\"items\\":{\\"type\\":\\"string\\"},\\"type\\":\\"array\\"}},\\"type\\":\\"object\\"}},\\"type\\":\\"object\\"}},\\"served\\":true,\\"storage\\":true}]}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustermanifestnamespaceargo8CC7E968": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"argo\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustermanifestnamespacecloudWatchagent17CF4D0F": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"amazon-cloudwatch\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"kube-system\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustermanifestnamespaceeksutilsadminDDA150EC": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"eksutils\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"cassandra\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaalbingressConditionJson0299F979": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:alb-ingress-controller\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaalbingressRole92AC458C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClustersaalbingressConditionJson0299F979",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebAcl",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "wafv2:GetWebACL",
                "wafv2:GetWebACLForResource",
                "wafv2:AssociateWebACL",
                "wafv2:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "shield:DescribeProtection",
                "shield:GetSubscriptionState",
                "shield:DeleteProtection",
                "shield:CreateProtection",
                "shield:DescribeSubscription",
                "shield:ListProtections",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE",
        "Roles": Array [
          Object {
            "Ref": "CassKopClustersaalbingressRole92AC458C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClustersaalbingressmanifestsaalbingressServiceAccountResourceC95A1446": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClustersaalbingressRole92AC458C",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaebscsicontrollersaConditionJson818A84ED": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:ebs-csi-controller-sa\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaebscsicontrollersaRole50FB61C3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClustersaebscsicontrollersaConditionJson818A84ED",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:AttachVolume",
                "ec2:CreateSnapshot",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DeleteSnapshot",
                "ec2:DeleteTags",
                "ec2:DeleteVolume",
                "ec2:DescribeInstances",
                "ec2:DescribeSnapshots",
                "ec2:DescribeTags",
                "ec2:DescribeVolumes",
                "ec2:DetachVolume",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7",
        "Roles": Array [
          Object {
            "Ref": "CassKopClustersaebscsicontrollersaRole50FB61C3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClustersaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResource4BF87613": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"ebs-csi-controller-sa\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClustersaebscsicontrollersaRole50FB61C3",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaexternaldnsConditionJsonF3353872": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:external-dns\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClustersaexternaldnsRole9F1D457B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClustersaexternaldnsConditionJsonF3353872",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "route53:ChangeResourceRecordSets",
              "Effect": "Allow",
              "Resource": "arn:aws:route53:::hostedzone/*",
            },
            Object {
              "Action": Array [
                "route53:ListHostedZones",
                "route53:ListResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104",
        "Roles": Array [
          Object {
            "Ref": "CassKopClustersaexternaldnsRole9F1D457B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClustersaexternaldnsmanifestsaexternaldnsServiceAccountResource1C55A672": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"external-dns\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClustersaexternaldnsRole9F1D457B",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccountargoConditionJson6D4CC48C": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceargo8CC7E968",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:argo:argo\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccountargoRole4A723E2C": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceargo8CC7E968",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClusterserviceaccountargoConditionJson6D4CC48C",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterserviceaccountargoRoleDefaultPolicy091BE055": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceargo8CC7E968",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": Array [
                "arn:aws:s3:::batch-artifact-repository-xxxxxxxxxxxx",
                "arn:aws:s3:::batch-artifact-repository-xxxxxxxxxxxx/*",
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterserviceaccountargoRoleDefaultPolicy091BE055",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterserviceaccountargoRole4A723E2C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterserviceaccountargomanifestserviceaccountargoServiceAccountResource24FE9A43": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceargo8CC7E968",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"argo\\",\\"namespace\\":\\"argo\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"argo\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterserviceaccountargoRole4A723E2C",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAConditionJson51FFAB73": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:aws-for-fluent-bit\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARole88FFADB0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAConditionJson51FFAB73",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARoleDefaultPolicyABABBC43": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "firehose:PutRecordBatch",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*:*:*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*",
            },
            Object {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "es:ESHttp*",
              "Effect": "Allow",
              "Resource": "arn:aws:es:::domain/es_domain/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARoleDefaultPolicyABABBC43",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARole88FFADB0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAmanifestserviceaccountawsforfluentbitHelmChartIRSAServiceAccountResource11DF5A05": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"aws-for-fluent-bit\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-for-fluent-bit\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARole88FFADB0",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccountcloudWatchagentConditionJsonEB8B273E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClustermanifestnamespacecloudWatchagent17CF4D0F",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:amazon-cloudwatch:cloudwatch-agent\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccountcloudWatchagentRoleAA9A8C02": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespacecloudWatchagent17CF4D0F",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClusterserviceaccountcloudWatchagentConditionJsonEB8B273E",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterserviceaccountcloudWatchagentRoleDefaultPolicy3D7349EE": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespacecloudWatchagent17CF4D0F",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "cloudwatch:PutMetricData",
                "ec2:DescribeVolumes",
                "ec2:DescribeTags",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
                "logs:DescribeLogGroups",
                "logs:CreateLogStream",
                "logs:CreateLogGroup",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": "arn:aws:ssm:*:*:parameter/AmazonCloudWatch-*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterserviceaccountcloudWatchagentRoleDefaultPolicy3D7349EE",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterserviceaccountcloudWatchagentRoleAA9A8C02",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterserviceaccountcloudWatchagentmanifestserviceaccountcloudWatchagentServiceAccountResourceA6A9C0FD": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespacecloudWatchagent17CF4D0F",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"cloudwatch-agent\\",\\"namespace\\":\\"amazon-cloudwatch\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"cloudwatch-agent\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterserviceaccountcloudWatchagentRoleAA9A8C02",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:cluster-autoscaler\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccountclusterautoscalerRole34C21866": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "ec2:DescribeLaunchTemplateVersions",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:eksutils:eksutils-admin\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "firehose:PutRecordBatch",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*:*:*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*",
            },
            Object {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "es:ESHttp*",
              "Effect": "Allow",
              "Resource": "arn:aws:es:::domain/eks-casskop/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopCluster5683FE9F",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:cassandra:eksutils-admin\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "CassKopClusterOpenIdConnectProvider1554EB4B",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B": Object {
      "DependsOn": Array [
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "firehose:PutRecordBatch",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*:*:*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*",
            },
            Object {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "es:ESHttp*",
              "Effect": "Allow",
              "Resource": "arn:aws:es:::domain/eks-casskop/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "Roles": Array [
          Object {
            "Ref": "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"cassandra\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"eksutils-admin\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"eksutils\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"eksutils-admin\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": Object {
      "DependsOn": Array [
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3BucketD01B79A5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "iam:CreateOpenIDConnectProvider",
                    "iam:DeleteOpenIDConnectProvider",
                    "iam:UpdateOpenIDConnectProviderThumbprint",
                    "iam:AddClientIDToOpenIDConnectProvider",
                    "iam:RemoveClientIDFromOpenIDConnectProvider",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.48.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.64.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet3DefaultRoute94B74F0D": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet3RouteTableAssociation16BDDC43": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet3RouteTableD98824C7",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet3SubnetF258B56E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet3RouteTableD98824C7": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet3SubnetF258B56E": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.80.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PrivateSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.16.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet3DefaultRoute4697774F": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet3RouteTable93458DBB": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet3RouteTableAssociation1F1EDF02": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet3RouteTable93458DBB",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet3SubnetBE12F0B6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet3SubnetBE12F0B6": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.32.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "Casskop/Vpc/PublicSubnet3",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "albingresscontrollerK8sResource87829C97": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterAwsAuthmanifest4018B69E",
        "CassKopClusterchartspotinterrupthandler80D296D7",
        "CassKopClusterClusterSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090443994408CD",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C970904433646F5CD",
        "CassKopClusterControlPlaneSecurityGroup99EA84BD",
        "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
        "CassKopClusterfargateprofileFargateProfileE22A2CC1",
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestcasskopcrdF60A29FA",
        "CassKopClustermanifestnamespaceargo8CC7E968",
        "CassKopClustermanifestnamespacecloudWatchagent17CF4D0F",
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
        "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
        "CassKopClusterNodegroupnodegroupAZa4BA33BD2",
        "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
        "CassKopClusterNodegroupnodegroupAZb6B169D3A",
        "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
        "CassKopClusterNodegroupnodegroupAZc77B0FA59",
        "CassKopClusterOpenIdConnectProvider1554EB4B",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "CassKopCluster5683FE9F",
        "CassKopClusterRole88533F86",
        "CassKopClustersaalbingressConditionJson0299F979",
        "CassKopClustersaalbingressmanifestsaalbingressServiceAccountResourceC95A1446",
        "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE",
        "CassKopClustersaalbingressRole92AC458C",
        "CassKopClustersaebscsicontrollersaConditionJson818A84ED",
        "CassKopClustersaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResource4BF87613",
        "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7",
        "CassKopClustersaebscsicontrollersaRole50FB61C3",
        "CassKopClustersaexternaldnsConditionJsonF3353872",
        "CassKopClustersaexternaldnsmanifestsaexternaldnsServiceAccountResource1C55A672",
        "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104",
        "CassKopClustersaexternaldnsRole9F1D457B",
        "CassKopClusterserviceaccountargoConditionJson6D4CC48C",
        "CassKopClusterserviceaccountargomanifestserviceaccountargoServiceAccountResource24FE9A43",
        "CassKopClusterserviceaccountargoRoleDefaultPolicy091BE055",
        "CassKopClusterserviceaccountargoRole4A723E2C",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAConditionJson51FFAB73",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAmanifestserviceaccountawsforfluentbitHelmChartIRSAServiceAccountResource11DF5A05",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARoleDefaultPolicyABABBC43",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARole88FFADB0",
        "CassKopClusterserviceaccountcloudWatchagentConditionJsonEB8B273E",
        "CassKopClusterserviceaccountcloudWatchagentmanifestserviceaccountcloudWatchagentServiceAccountResourceA6A9C0FD",
        "CassKopClusterserviceaccountcloudWatchagentRoleDefaultPolicy3D7349EE",
        "CassKopClusterserviceaccountcloudWatchagentRoleAA9A8C02",
        "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
        "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71",
        "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
        "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
        "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6",
        "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
        "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
        "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA",
        "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
        "CassKopClusterSpotASG93EF1913",
        "CassKopClusterSpotInstanceProfileF7B9468A",
        "CassKopClusterSpotInstanceRole3796F757",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterClusterSecurityGroup9D6263A8102565535BCBB0FD7",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterClusterSecurityGroup9D6263A8443456E56E7",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4102565535B1544517",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4443D85E169E",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC29206DE9",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopclusterSG0E6F36F6ALLTRAFFIC88C0EC54",
        "CassKopClusterSpotInstanceSecurityGroup21F521B6",
        "CassKopClusterSpotLaunchConfigFA810380",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\",\\"extensions\\"],\\"resources\\":[\\"configmaps\\",\\"endpoints\\",\\"events\\",\\"ingresses\\",\\"ingresses/status\\",\\"services\\",\\"pods/status\\"],\\"verbs\\":[\\"create\\",\\"get\\",\\"list\\",\\"update\\",\\"watch\\",\\"patch\\"]},{\\"apiGroups\\":[\\"\\",\\"extensions\\"],\\"resources\\":[\\"nodes\\",\\"pods\\",\\"secrets\\",\\"services\\",\\"namespaces\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"alb-ingress-controller\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"alb-ingress-controller\\",\\"args\\":[\\"--ingress-class=alb\\",\\"--cluster-name=",
              Object {
                "Ref": "CassKopCluster5683FE9F",
              },
              "\\",\\"--feature-gates=wafv2=false\\",\\"--aws-vpc-id=",
              Object {
                "Ref": "Vpc8378EB38",
              },
              "\\",\\"--aws-region=eu-west-1\\"],\\"env\\":null,\\"image\\":\\"docker.io/amazon/aws-alb-ingress-controller:v1.1.8\\"}],\\"serviceAccountName\\":\\"alb-ingress-controller\\"}}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": Object {
      "Properties": Object {
        "Parameters": Object {
          "referencetoCasskopAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3BucketF31D7F75Ref": Object {
            "Ref": "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket36C546E0",
          },
          "referencetoCasskopAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey1443A76FRef": Object {
            "Ref": "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey85C003F9",
          },
          "referencetoCasskopAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3Bucket4782F525Ref": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "referencetoCasskopAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyD705D0BERef": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
          },
          "referencetoCasskopCassKopClusterCreationRole75E615BCArn": Object {
            "Fn::GetAtt": Array [
              "CassKopClusterCreationRoleDDB5156B",
              "Arn",
            ],
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.eu-west-1.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters9534f7dc11f259aac439c51ef802eaadf520fb191413ae8c8a2c9f505714dac0S3BucketCEF45554",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters9534f7dc11f259aac439c51ef802eaadf520fb191413ae8c8a2c9f505714dac0S3VersionKeyACF72A58",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters9534f7dc11f259aac439c51ef802eaadf520fb191413ae8c8a2c9f505714dac0S3VersionKeyACF72A58",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": Object {
      "Properties": Object {
        "Parameters": Object {
          "referencetoCasskopAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3BucketD2D26FC7Ref": Object {
            "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2",
          },
          "referencetoCasskopAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey52DFCC0DRef": Object {
            "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A",
          },
          "referencetoCasskopAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3Bucket4782F525Ref": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "referencetoCasskopAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyD705D0BERef": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
          },
          "referencetoCasskopCassKopCluster29B90A16Arn": Object {
            "Fn::GetAtt": Array [
              "CassKopCluster5683FE9F",
              "Arn",
            ],
          },
          "referencetoCasskopCassKopCluster29B90A16ClusterSecurityGroupId": Object {
            "Fn::GetAtt": Array [
              "CassKopCluster5683FE9F",
              "ClusterSecurityGroupId",
            ],
          },
          "referencetoCasskopCassKopClusterCreationRole75E615BCArn": Object {
            "Fn::GetAtt": Array [
              "CassKopClusterCreationRoleDDB5156B",
              "Arn",
            ],
          },
          "referencetoCasskopVpcPrivateSubnet1SubnetED61AC39Ref": Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          "referencetoCasskopVpcPrivateSubnet2Subnet95DF6909Ref": Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
          "referencetoCasskopVpcPrivateSubnet3SubnetFF035E04Ref": Object {
            "Ref": "VpcPrivateSubnet3SubnetF258B56E",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.eu-west-1.",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameterse262985f31e182173c7541af67224169233f1516cafe96a00d1a244400ce8de4S3BucketD3C5EE3C",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameterse262985f31e182173c7541af67224169233f1516cafe96a00d1a244400ce8de4S3VersionKey77F35CCE",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameterse262985f31e182173c7541af67224169233f1516cafe96a00d1a244400ce8de4S3VersionKey77F35CCE",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "awsforfluentbitHelmChartIRSAawsforfluentbitHelmChartIRSAHelmChart0020AB4E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAConditionJson51FFAB73",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAmanifestserviceaccountawsforfluentbitHelmChartIRSAServiceAccountResource11DF5A05",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARoleDefaultPolicyABABBC43",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARole88FFADB0",
      ],
      "Properties": Object {
        "Chart": "aws-for-fluent-bit",
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "CreateNamespace": true,
        "Namespace": "kube-system",
        "Release": "aws-for-fluent-bit",
        "Repository": "https://aws.github.io/eks-charts",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
        "Values": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"serviceAccount\\":{\\"create\\":false,\\"name\\":\\"aws-for-fluent-bit\\"},\\"cloudWatch\\":{\\"enabled\\":true,\\"region\\":\\"eu-west-1\\",\\"logStreamName\\":\\"CassKop\\",\\"logGroupName\\":\\"/aws/eks/",
              Object {
                "Ref": "CassKopCluster5683FE9F",
              },
              "/logs\\"},\\"elasticsearch\\":{\\"enabled\\":true,\\"awsRegion\\":\\"eu-west-1\\"},\\"firehose\\":{\\"enabled\\":false},\\"kinesis\\":{\\"enabled\\":false}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "casskopcasskopHelmChart30F66F54": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "Chart": "cassandra-operator",
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "CreateNamespace": true,
        "Namespace": "cassandra",
        "Release": "casskop",
        "Repository": "https://orange-kubernetes-charts-incubator.storage.googleapis.com/",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
        "Wait": true,
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "cloudWatchagentK8sResourceIRSA7859E0C1": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClusterserviceaccountcloudWatchagentConditionJsonEB8B273E",
        "CassKopClusterserviceaccountcloudWatchagentmanifestserviceaccountcloudWatchagentServiceAccountResourceA6A9C0FD",
        "CassKopClusterserviceaccountcloudWatchagentRoleDefaultPolicy3D7349EE",
        "CassKopClusterserviceaccountcloudWatchagentRoleAA9A8C02",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"data\\":{\\"cwagentconfig.json\\":\\"{\\\\n  \\\\\\"logs\\\\\\": {\\\\n    \\\\\\"metrics_collected\\\\\\": {\\\\n      \\\\\\"kubernetes\\\\\\": {\\\\n        \\\\\\"cluster_name\\\\\\": \\\\\\"",
              Object {
                "Ref": "CassKopCluster5683FE9F",
              },
              "\\\\\\",\\\\n        \\\\\\"metrics_collection_interval\\\\\\": 60\\\\n      }\\\\n    },\\\\n    \\\\\\"force_flush_interval\\\\\\": 5\\\\n  }\\\\n}\\\\n\\"},\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"cwagentconfig\\",\\"namespace\\":\\"amazon-cloudwatch\\"}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"DaemonSet\\",\\"metadata\\":{\\"name\\":\\"cloudwatch-agent\\",\\"namespace\\":\\"amazon-cloudwatch\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"name\\":\\"cloudwatch-agent\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"name\\":\\"cloudwatch-agent\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"cloudwatch-agent\\",\\"image\\":\\"amazon/cloudwatch-agent:1.247345.36b249270\\",\\"resources\\":{\\"limits\\":{\\"cpu\\":\\"200m\\",\\"memory\\":\\"200Mi\\"},\\"requests\\":{\\"cpu\\":\\"200m\\",\\"memory\\":\\"200Mi\\"}},\\"env\\":[{\\"name\\":\\"HOST_IP\\",\\"valueFrom\\":{\\"fieldRef\\":{\\"fieldPath\\":\\"status.hostIP\\"}}},{\\"name\\":\\"HOST_NAME\\",\\"valueFrom\\":{\\"fieldRef\\":{\\"fieldPath\\":\\"spec.nodeName\\"}}},{\\"name\\":\\"K8S_NAMESPACE\\",\\"valueFrom\\":{\\"fieldRef\\":{\\"fieldPath\\":\\"metadata.namespace\\"}}},{\\"name\\":\\"CI_VERSION\\",\\"value\\":\\"k8s/1.2.2\\"}],\\"volumeMounts\\":[{\\"name\\":\\"cwagentconfig\\",\\"mountPath\\":\\"/etc/cwagentconfig\\"},{\\"name\\":\\"rootfs\\",\\"mountPath\\":\\"/rootfs\\",\\"readOnly\\":true},{\\"name\\":\\"dockersock\\",\\"mountPath\\":\\"/var/run/docker.sock\\",\\"readOnly\\":true},{\\"name\\":\\"varlibdocker\\",\\"mountPath\\":\\"/var/lib/docker\\",\\"readOnly\\":true},{\\"name\\":\\"sys\\",\\"mountPath\\":\\"/sys\\",\\"readOnly\\":true},{\\"name\\":\\"devdisk\\",\\"mountPath\\":\\"/dev/disk\\",\\"readOnly\\":true}]}],\\"volumes\\":[{\\"name\\":\\"cwagentconfig\\",\\"configMap\\":{\\"name\\":\\"cwagentconfig\\"}},{\\"name\\":\\"rootfs\\",\\"hostPath\\":{\\"path\\":\\"/\\"}},{\\"name\\":\\"dockersock\\",\\"hostPath\\":{\\"path\\":\\"/var/run/docker.sock\\"}},{\\"name\\":\\"varlibdocker\\",\\"hostPath\\":{\\"path\\":\\"/var/lib/docker\\"}},{\\"name\\":\\"sys\\",\\"hostPath\\":{\\"path\\":\\"/sys\\"}},{\\"name\\":\\"devdisk\\",\\"hostPath\\":{\\"path\\":\\"/dev/disk/\\"}}],\\"terminationGracePeriodSeconds\\":60,\\"serviceAccountName\\":\\"cloudwatch-agent\\"}}}},{\\"kind\\":\\"ClusterRole\\",\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"metadata\\":{\\"name\\":\\"cloudwatch-agent-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"nodes\\",\\"endpoints\\"],\\"verbs\\":[\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"apps\\"],\\"resources\\":[\\"replicasets\\"],\\"verbs\\":[\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"batch\\"],\\"resources\\":[\\"jobs\\"],\\"verbs\\":[\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes/proxy\\"],\\"verbs\\":[\\"get\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes/stats\\",\\"configmaps\\",\\"events\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"resourceNames\\":[\\"cwagent-clusterleader\\"],\\"verbs\\":[\\"get\\",\\"update\\"]}]},{\\"kind\\":\\"ClusterRoleBinding\\",\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"metadata\\":{\\"name\\":\\"cloudwatch-agent-role-binding\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cloudwatch-agent\\",\\"namespace\\":\\"amazon-cloudwatch\\"}],\\"roleRef\\":{\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cloudwatch-agent-role\\",\\"apiGroup\\":\\"rbac.authorization.k8s.io\\"}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "clusterautoscalerK8sResourceIRSAECFBF5A7": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
        "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71",
        "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"events\\",\\"endpoints\\"],\\"verbs\\":[\\"create\\",\\"patch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods/eviction\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods/status\\"],\\"verbs\\":[\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"endpoints\\"],\\"resourceNames\\":[\\"cluster-autoscaler\\"],\\"verbs\\":[\\"get\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"services\\",\\"replicationcontrollers\\",\\"persistentvolumeclaims\\",\\"persistentvolumes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"extensions\\"],\\"resources\\":[\\"replicasets\\",\\"daemonsets\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"policy\\"],\\"resources\\":[\\"poddisruptionbudgets\\"],\\"verbs\\":[\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"apps\\"],\\"resources\\":[\\"statefulsets\\",\\"replicasets\\",\\"daemonsets\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"storageclasses\\",\\"csinodes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"batch\\",\\"extensions\\"],\\"resources\\":[\\"jobs\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"patch\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resourceNames\\":[\\"cluster-autoscaler\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"get\\",\\"update\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"Role\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"verbs\\":[\\"create\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"resourceNames\\":[\\"cluster-autoscaler-status\\",\\"cluster-autoscaler-priority-expander\\"],\\"verbs\\":[\\"delete\\",\\"get\\",\\"update\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-autoscaler\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"RoleBinding\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"Role\\",\\"name\\":\\"cluster-autoscaler\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"cluster-autoscaler.kubernetes.io/safe-to-evict\\":\\"false\\"}},\\"spec\\":{\\"replicas\\":1,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"cluster-autoscaler\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"prometheus.io/scrape\\":\\"true\\",\\"prometheus.io/port\\":\\"8085\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"cluster-autoscaler\\",\\"containers\\":[{\\"image\\":\\"eu.gcr.io/k8s-artifacts-prod/autoscaling/cluster-autoscaler:v1.18.2\\",\\"name\\":\\"cluster-autoscaler\\",\\"resources\\":{\\"limits\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"300Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"300Mi\\"}},\\"command\\":[\\"./cluster-autoscaler\\",\\"--v=4\\",\\"--stderrthreshold=info\\",\\"--cloud-provider=aws\\",\\"--skip-nodes-with-local-storage=false\\",\\"--expander=least-waste\\",\\"--node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/",
              Object {
                "Ref": "CassKopCluster5683FE9F",
              },
              "\\",\\"--balance-similar-node-groups\\",\\"--skip-nodes-with-system-pods=false\\"],\\"volumeMounts\\":[{\\"name\\":\\"ssl-certs\\",\\"mountPath\\":\\"/etc/ssl/certs/ca-certificates.crt\\",\\"readOnly\\":true}],\\"imagePullPolicy\\":\\"Always\\"}],\\"volumes\\":[{\\"name\\":\\"ssl-certs\\",\\"hostPath\\":{\\"path\\":\\"/etc/ssl/certs/ca-bundle.crt\\"}}]}}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ebscsidriverK8sResource2B9EF818": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterAwsAuthmanifest4018B69E",
        "CassKopClusterchartspotinterrupthandler80D296D7",
        "CassKopClusterClusterSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090443994408CD",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C970904433646F5CD",
        "CassKopClusterControlPlaneSecurityGroup99EA84BD",
        "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
        "CassKopClusterfargateprofileFargateProfileE22A2CC1",
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestcasskopcrdF60A29FA",
        "CassKopClustermanifestnamespaceargo8CC7E968",
        "CassKopClustermanifestnamespacecloudWatchagent17CF4D0F",
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
        "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
        "CassKopClusterNodegroupnodegroupAZa4BA33BD2",
        "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
        "CassKopClusterNodegroupnodegroupAZb6B169D3A",
        "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
        "CassKopClusterNodegroupnodegroupAZc77B0FA59",
        "CassKopClusterOpenIdConnectProvider1554EB4B",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "CassKopCluster5683FE9F",
        "CassKopClusterRole88533F86",
        "CassKopClustersaalbingressConditionJson0299F979",
        "CassKopClustersaalbingressmanifestsaalbingressServiceAccountResourceC95A1446",
        "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE",
        "CassKopClustersaalbingressRole92AC458C",
        "CassKopClustersaebscsicontrollersaConditionJson818A84ED",
        "CassKopClustersaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResource4BF87613",
        "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7",
        "CassKopClustersaebscsicontrollersaRole50FB61C3",
        "CassKopClustersaexternaldnsConditionJsonF3353872",
        "CassKopClustersaexternaldnsmanifestsaexternaldnsServiceAccountResource1C55A672",
        "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104",
        "CassKopClustersaexternaldnsRole9F1D457B",
        "CassKopClusterserviceaccountargoConditionJson6D4CC48C",
        "CassKopClusterserviceaccountargomanifestserviceaccountargoServiceAccountResource24FE9A43",
        "CassKopClusterserviceaccountargoRoleDefaultPolicy091BE055",
        "CassKopClusterserviceaccountargoRole4A723E2C",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAConditionJson51FFAB73",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAmanifestserviceaccountawsforfluentbitHelmChartIRSAServiceAccountResource11DF5A05",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARoleDefaultPolicyABABBC43",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARole88FFADB0",
        "CassKopClusterserviceaccountcloudWatchagentConditionJsonEB8B273E",
        "CassKopClusterserviceaccountcloudWatchagentmanifestserviceaccountcloudWatchagentServiceAccountResourceA6A9C0FD",
        "CassKopClusterserviceaccountcloudWatchagentRoleDefaultPolicy3D7349EE",
        "CassKopClusterserviceaccountcloudWatchagentRoleAA9A8C02",
        "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
        "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71",
        "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
        "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
        "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6",
        "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
        "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
        "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA",
        "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
        "CassKopClusterSpotASG93EF1913",
        "CassKopClusterSpotInstanceProfileF7B9468A",
        "CassKopClusterSpotInstanceRole3796F757",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterClusterSecurityGroup9D6263A8102565535BCBB0FD7",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterClusterSecurityGroup9D6263A8443456E56E7",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4102565535B1544517",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4443D85E169E",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC29206DE9",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopclusterSG0E6F36F6ALLTRAFFIC88C0EC54",
        "CassKopClusterSpotInstanceSecurityGroup21F521B6",
        "CassKopClusterSpotLaunchConfigFA810380",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-external-attacher-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"csi.storage.k8s.io\\"],\\"resources\\":[\\"csinodeinfos\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"volumeattachments\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-external-provisioner-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"create\\",\\"delete\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumeclaims\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"storageclasses\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"events\\"],\\"verbs\\":[\\"list\\",\\"watch\\",\\"create\\",\\"update\\",\\"patch\\"]},{\\"apiGroups\\":[\\"snapshot.storage.k8s.io\\"],\\"resources\\":[\\"volumesnapshots\\"],\\"verbs\\":[\\"get\\",\\"list\\"]},{\\"apiGroups\\":[\\"snapshot.storage.k8s.io\\"],\\"resources\\":[\\"volumesnapshotcontents\\"],\\"verbs\\":[\\"get\\",\\"list\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"csinodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\",\\"delete\\",\\"update\\",\\"create\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-attacher-binding\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"ebs-external-attacher-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-provisioner-binding\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"ebs-external-provisioner-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-controller\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"replicas\\":2,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"ebs-csi-controller\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"ebs-csi-controller\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"spec\\":{\\"containers\\":[{\\"args\\":[\\"--endpoint=$(CSI_ENDPOINT)\\",\\"--logtostderr\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"CSI_ENDPOINT\\",\\"value\\":\\"unix:///var/lib/csi/sockets/pluginproxy/csi.sock\\"},{\\"name\\":\\"AWS_ACCESS_KEY_ID\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"key_id\\",\\"name\\":\\"aws-secret\\",\\"optional\\":true}}},{\\"name\\":\\"AWS_SECRET_ACCESS_KEY\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"access_key\\",\\"name\\":\\"aws-secret\\",\\"optional\\":true}}}],\\"image\\":\\"amazon/aws-ebs-csi-driver:v0.5.0\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"livenessProbe\\":{\\"failureThreshold\\":5,\\"httpGet\\":{\\"path\\":\\"/healthz\\",\\"port\\":\\"healthz\\"},\\"initialDelaySeconds\\":10,\\"periodSeconds\\":10,\\"timeoutSeconds\\":3},\\"name\\":\\"ebs-plugin\\",\\"ports\\":[{\\"containerPort\\":9808,\\"name\\":\\"healthz\\",\\"protocol\\":\\"TCP\\"}],\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--v=5\\",\\"--feature-gates=Topology=true\\",\\"--enable-leader-election\\",\\"--leader-election-type=leases\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/var/lib/csi/sockets/pluginproxy/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-provisioner:v1.3.0\\",\\"name\\":\\"csi-provisioner\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--v=5\\",\\"--leader-election=true\\",\\"--leader-election-type=leases\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/var/lib/csi/sockets/pluginproxy/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-attacher:v1.2.0\\",\\"name\\":\\"csi-attacher\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=/csi/csi.sock\\"],\\"image\\":\\"quay.io/k8scsi/livenessprobe:v1.1.0\\",\\"name\\":\\"liveness-probe\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"socket-dir\\"}]}],\\"nodeSelector\\":{\\"kubernetes.io/arch\\":\\"amd64\\",\\"kubernetes.io/os\\":\\"linux\\"},\\"priorityClassName\\":\\"system-cluster-critical\\",\\"serviceAccountName\\":\\"ebs-csi-controller-sa\\",\\"tolerations\\":[{\\"operator\\":\\"Exists\\"}],\\"volumes\\":[{\\"emptyDir\\":{},\\"name\\":\\"socket-dir\\"}]}}}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"DaemonSet\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-node\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"ebs-csi-node\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"ebs-csi-node\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"spec\\":{\\"affinity\\":{\\"nodeAffinity\\":{\\"requiredDuringSchedulingIgnoredDuringExecution\\":{\\"nodeSelectorTerms\\":[{\\"matchExpressions\\":[{\\"key\\":\\"eks.amazonaws.com/compute-type\\",\\"operator\\":\\"NotIn\\",\\"values\\":[\\"fargate\\"]}]}]}}},\\"containers\\":[{\\"args\\":[\\"node\\",\\"--endpoint=$(CSI_ENDPOINT)\\",\\"--logtostderr\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"CSI_ENDPOINT\\",\\"value\\":\\"unix:/csi/csi.sock\\"}],\\"image\\":\\"amazon/aws-ebs-csi-driver:v0.5.0\\",\\"livenessProbe\\":{\\"failureThreshold\\":5,\\"httpGet\\":{\\"path\\":\\"/healthz\\",\\"port\\":\\"healthz\\"},\\"initialDelaySeconds\\":10,\\"periodSeconds\\":10,\\"timeoutSeconds\\":3},\\"name\\":\\"ebs-plugin\\",\\"ports\\":[{\\"containerPort\\":9808,\\"name\\":\\"healthz\\",\\"protocol\\":\\"TCP\\"}],\\"securityContext\\":{\\"privileged\\":true},\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/kubelet\\",\\"mountPropagation\\":\\"Bidirectional\\",\\"name\\":\\"kubelet-dir\\"},{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"},{\\"mountPath\\":\\"/dev\\",\\"name\\":\\"device-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/csi/csi.sock\\"},{\\"name\\":\\"DRIVER_REG_SOCK_PATH\\",\\"value\\":\\"/var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-node-driver-registrar:v1.1.0\\",\\"lifecycle\\":{\\"preStop\\":{\\"exec\\":{\\"command\\":[\\"/bin/sh\\",\\"-c\\",\\"rm -rf /registration/ebs.csi.aws.com-reg.sock /csi/csi.sock\\"]}}},\\"name\\":\\"node-driver-registrar\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"},{\\"mountPath\\":\\"/registration\\",\\"name\\":\\"registration-dir\\"}]},{\\"args\\":[\\"--csi-address=/csi/csi.sock\\"],\\"image\\":\\"quay.io/k8scsi/livenessprobe:v1.1.0\\",\\"name\\":\\"liveness-probe\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"}]}],\\"hostNetwork\\":true,\\"nodeSelector\\":{\\"kubernetes.io/arch\\":\\"amd64\\",\\"kubernetes.io/os\\":\\"linux\\"},\\"priorityClassName\\":\\"system-node-critical\\",\\"tolerations\\":[{\\"operator\\":\\"Exists\\"}],\\"volumes\\":[{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"kubelet-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/plugins/ebs.csi.aws.com/\\",\\"type\\":\\"DirectoryOrCreate\\"},\\"name\\":\\"plugin-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/plugins_registry/\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"registration-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/dev\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"device-dir\\"}]}}}},{\\"apiVersion\\":\\"storage.k8s.io/v1beta1\\",\\"kind\\":\\"CSIDriver\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs.csi.aws.com\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"attachRequired\\":true,\\"podInfoOnMount\\":false}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "eksutilsadminK8sResourceIRSA0A8791C8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
        "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA",
        "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"annotations\\":{\\"deployment.kubernetes.io/revision\\":\\"1\\"},\\"name\\":\\"eksutils-deployment\\",\\"labels\\":{\\"app\\":\\"eksutils\\"},\\"namespace\\":\\"eksutils\\"},\\"spec\\":{\\"replicas\\":1,\\"revisionHistoryLimit\\":10,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"eksutils\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"eksutils\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"eksutils\\",\\"image\\":\\"allamand/eksutils:latest\\",\\"imagePullPolicy\\":\\"Always\\",\\"command\\":[\\"tail\\",\\"-f\\",\\"/dev/null\\"],\\"ports\\":[{\\"containerPort\\":8080,\\"name\\":\\"http\\",\\"protocol\\":\\"TCP\\"}],\\"resources\\":{\\"requests\\":{\\"cpu\\":\\"300m\\",\\"memory\\":\\"512Mi\\"}}}],\\"enableServiceLinks\\":true,\\"restartPolicy\\":\\"Always\\",\\"schedulerName\\":\\"default-scheduler\\",\\"serviceAccountName\\":\\"eksutils-admin\\",\\"terminationGracePeriodSeconds\\":0,\\"securityContext\\":{\\"fsGroup\\":0,\\"runAsUser\\":0}}}}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin-eksutils\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-admin\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"eksutils\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "eksutilsadminfargateK8sResourceIRSA651BECE8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
        "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6",
        "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"annotations\\":{\\"deployment.kubernetes.io/revision\\":\\"1\\"},\\"name\\":\\"eksutils-deployment\\",\\"labels\\":{\\"app\\":\\"eksutils\\"},\\"namespace\\":\\"cassandra\\"},\\"spec\\":{\\"replicas\\":1,\\"revisionHistoryLimit\\":10,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"eksutils\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"eksutils\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"eksutils\\",\\"image\\":\\"allamand/eksutils:latest\\",\\"imagePullPolicy\\":\\"Always\\",\\"command\\":[\\"tail\\",\\"-f\\",\\"/dev/null\\"],\\"ports\\":[{\\"containerPort\\":8080,\\"name\\":\\"http\\",\\"protocol\\":\\"TCP\\"}],\\"resources\\":{\\"requests\\":{\\"cpu\\":\\"300m\\",\\"memory\\":\\"512Mi\\"}},\\"volumeMounts\\":[{\\"name\\":\\"varlog\\",\\"mountPath\\":\\"/var/log\\"}]},{\\"name\\":\\"aws-for-fluentbit\\",\\"image\\":\\"amazon/aws-for-fluent-bit:latest\\",\\"imagePullPolicy\\":\\"Always\\",\\"volumeMounts\\":[{\\"name\\":\\"varlog\\",\\"mountPath\\":\\"/var/log\\"},{\\"name\\":\\"aws-for-fluentbit\\",\\"mountPath\\":\\"/fluent-bit/etc/\\"}]}],\\"enableServiceLinks\\":true,\\"restartPolicy\\":\\"Always\\",\\"schedulerName\\":\\"default-scheduler\\",\\"serviceAccountName\\":\\"eksutils-admin\\",\\"terminationGracePeriodSeconds\\":0,\\"securityContext\\":{\\"fsGroup\\":0,\\"runAsUser\\":0}}},\\"terminationGracePeriodSeconds\\":10,\\"volumes\\":[{\\"name\\":\\"varlog\\",\\"emptyDir\\":{}},{\\"name\\":\\"aws-for-fluentbit\\",\\"configMap\\":{\\"name\\":\\"aws-for-fluentbit\\"}}]}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin-cassandra\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-admin\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"cassandra\\"}]},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"aws-for-fluent-bit\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-app\\":\\"fluent-bit\\"}},\\"data\\":{\\"fluent-bit.conf\\":\\"[SERVICE]\\\\n    Parsers_File /fluent-bit/parsers/parsers.conf\\\\n\\\\n[INPUT]\\\\n    Name              tail\\\\n    Tag               *.logs\\\\n    Path              /var/log/*.log\\\\n    DB                /var/log/logs.db\\\\n    Mem_Buf_Limit     5MB\\\\n    Skip_Long_Lines   On\\\\n    Refresh_Interval  10\\\\n[FILTER]\\\\n    Name                kubernetes\\\\n    Match               kube.*\\\\n    Kube_URL            https://kubernetes.default.svc.cluster.local:443\\\\n    Merge_Log           On\\\\n    Merge_Log_Key       data\\\\n    K8S-Logging.Parser  On\\\\n    K8S-Logging.Exclude On\\\\n[OUTPUT]\\\\n    Name                  cloudwatch\\\\n    Match                 *\\\\n    region                eu-west-1\\\\n    log_group_name        /aws/eks/CassKop/logs\\\\n    log_stream_name       CassKop\\\\n    log_stream_prefix      fargate-\\\\n    auto_create_group     true\\\\n[OUTPUT]\\\\n    Name            es\\\\n    Match           *\\\\n    AWS_Region      eu-west-1\\\\n    AWS_Auth        On\\\\n    Host            search-eks-casskop-xxxxxxxxxxxxxxxxxx.eu-west-1.es.amazonaws.com\\\\n    Port            443\\\\n    TLS             On\\\\n    Retry_Limit     6\\\\n\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "extrernaldnsK8sResource0278304D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterAwsAuthmanifest4018B69E",
        "CassKopClusterchartspotinterrupthandler80D296D7",
        "CassKopClusterClusterSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090443994408CD",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C970904433646F5CD",
        "CassKopClusterControlPlaneSecurityGroup99EA84BD",
        "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
        "CassKopClusterfargateprofileFargateProfileE22A2CC1",
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestcasskopcrdF60A29FA",
        "CassKopClustermanifestnamespaceargo8CC7E968",
        "CassKopClustermanifestnamespacecloudWatchagent17CF4D0F",
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
        "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
        "CassKopClusterNodegroupnodegroupAZa4BA33BD2",
        "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
        "CassKopClusterNodegroupnodegroupAZb6B169D3A",
        "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
        "CassKopClusterNodegroupnodegroupAZc77B0FA59",
        "CassKopClusterOpenIdConnectProvider1554EB4B",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "CassKopCluster5683FE9F",
        "CassKopClusterRole88533F86",
        "CassKopClustersaalbingressConditionJson0299F979",
        "CassKopClustersaalbingressmanifestsaalbingressServiceAccountResourceC95A1446",
        "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE",
        "CassKopClustersaalbingressRole92AC458C",
        "CassKopClustersaebscsicontrollersaConditionJson818A84ED",
        "CassKopClustersaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResource4BF87613",
        "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7",
        "CassKopClustersaebscsicontrollersaRole50FB61C3",
        "CassKopClustersaexternaldnsConditionJsonF3353872",
        "CassKopClustersaexternaldnsmanifestsaexternaldnsServiceAccountResource1C55A672",
        "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104",
        "CassKopClustersaexternaldnsRole9F1D457B",
        "CassKopClusterserviceaccountargoConditionJson6D4CC48C",
        "CassKopClusterserviceaccountargomanifestserviceaccountargoServiceAccountResource24FE9A43",
        "CassKopClusterserviceaccountargoRoleDefaultPolicy091BE055",
        "CassKopClusterserviceaccountargoRole4A723E2C",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAConditionJson51FFAB73",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAmanifestserviceaccountawsforfluentbitHelmChartIRSAServiceAccountResource11DF5A05",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARoleDefaultPolicyABABBC43",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARole88FFADB0",
        "CassKopClusterserviceaccountcloudWatchagentConditionJsonEB8B273E",
        "CassKopClusterserviceaccountcloudWatchagentmanifestserviceaccountcloudWatchagentServiceAccountResourceA6A9C0FD",
        "CassKopClusterserviceaccountcloudWatchagentRoleDefaultPolicy3D7349EE",
        "CassKopClusterserviceaccountcloudWatchagentRoleAA9A8C02",
        "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
        "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71",
        "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
        "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
        "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6",
        "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
        "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
        "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA",
        "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
        "CassKopClusterSpotASG93EF1913",
        "CassKopClusterSpotInstanceProfileF7B9468A",
        "CassKopClusterSpotInstanceRole3796F757",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterClusterSecurityGroup9D6263A8102565535BCBB0FD7",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterClusterSecurityGroup9D6263A8443456E56E7",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4102565535B1544517",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4443D85E169E",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC29206DE9",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopclusterSG0E6F36F6ALLTRAFFIC88C0EC54",
        "CassKopClusterSpotInstanceSecurityGroup21F521B6",
        "CassKopClusterSpotLaunchConfigFA810380",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"external-dns\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"services\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"extensions\\"],\\"resources\\":[\\"ingresses\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"list\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"external-dns-viewer\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"external-dns\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"external-dns\\"}},\\"strategy\\":{\\"type\\":\\"Recreate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"external-dns\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"external-dns\\",\\"containers\\":[{\\"name\\":\\"external-dns\\",\\"image\\":\\"registry.opensource.zalan.do/teapot/external-dns:v0.7.1\\",\\"args\\":[\\"--source=service\\",\\"--source=ingress\\",\\"--domain-filter=demo.domain.com\\",\\"--provider=aws\\",\\"--policy=sync\\",\\"--aws-zone-type=public\\",\\"--registry=txt\\",\\"--txt-owner-id=CassKopTest\\",\\"--log-level=debug\\"]}],\\"securityContext\\":{\\"fsGroup\\":65534}}}}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "kubeopsviewkubeopsviewHelmChart58E7AD12": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterKubectlReadyBarrier346C8999",
      ],
      "Properties": Object {
        "Chart": "kube-ops-view",
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "CreateNamespace": true,
        "Namespace": "metrics",
        "Release": "kube-ops-view",
        "Repository": "https://kubernetes-charts.storage.googleapis.com",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
        "Values": "{\\"service\\":{\\"type\\":\\"ClusterIP\\"},\\"redis\\":{\\"enabled\\":false},\\"rbac\\":{\\"create\\":true},\\"ingress\\":{\\"enabled\\":true,\\"path\\":\\"/*\\",\\"hostname\\":\\"kube-ops-view.eu-west-1.demo.domain.com\\",\\"annotations\\":{\\"kubernetes.io/ingress.class\\":\\"alb\\",\\"alb.ingress.kubernetes.io/scheme\\":\\"internet-facing\\",\\"alb.ingress.kubernetes.io/target-type\\":\\"ip\\",\\"alb.ingress.kubernetes.io/actions.ssl-redirect\\":\\"{\\\\\\"Type\\\\\\": \\\\\\"redirect\\\\\\", \\\\\\"RedirectConfig\\\\\\": { \\\\\\"Protocol\\\\\\": \\\\\\"HTTPS\\\\\\", \\\\\\"Port\\\\\\": \\\\\\"443\\\\\\", \\\\\\"StatusCode\\\\\\": \\\\\\"HTTP_301\\\\\\"}}\\",\\"alb.ingress.kubernetes.io/listen-ports\\":\\"[{\\\\\\"HTTP\\\\\\": 80}, {\\\\\\"HTTPS\\\\\\":443}]\\",\\"alb.ingress.kubernetes.io/certificate-arn\\":\\"arn:aws:acm:eu-west-1:xxxxxxxxxxx:certificate/aaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee\\",\\"force\\":\\"update\\"}}}",
        "Wait": true,
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "metricsserverK8sResourceBB4DF557": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CassKopClusterAwsAuthmanifest4018B69E",
        "CassKopClusterchartspotinterrupthandler80D296D7",
        "CassKopClusterClusterSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090443994408CD",
        "CassKopClusterControlPlaneSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C970904433646F5CD",
        "CassKopClusterControlPlaneSecurityGroup99EA84BD",
        "CassKopClusterfargateprofileFargateProfilePodExecutionRoleCD3A960C",
        "CassKopClusterfargateprofileFargateProfileE22A2CC1",
        "CassKopClusterKubectlReadyBarrier346C8999",
        "CassKopClustermanifestcasskopcrdF60A29FA",
        "CassKopClustermanifestnamespaceargo8CC7E968",
        "CassKopClustermanifestnamespacecloudWatchagent17CF4D0F",
        "CassKopClustermanifestnamespaceclusterautoscaler3FD9E415",
        "CassKopClustermanifestnamespaceeksutilsadminfargate5B429A3A",
        "CassKopClustermanifestnamespaceeksutilsadminDDA150EC",
        "CassKopClusterNodegroupnodegroupAZaNodeGroupRole03D9A5A3",
        "CassKopClusterNodegroupnodegroupAZa4BA33BD2",
        "CassKopClusterNodegroupnodegroupAZbNodeGroupRoleA4480EB9",
        "CassKopClusterNodegroupnodegroupAZb6B169D3A",
        "CassKopClusterNodegroupnodegroupAZcNodeGroupRoleD8232C63",
        "CassKopClusterNodegroupnodegroupAZc77B0FA59",
        "CassKopClusterOpenIdConnectProvider1554EB4B",
        "CassKopClusterCreationRoleDefaultPolicy0C3AACE5",
        "CassKopClusterCreationRoleDDB5156B",
        "CassKopCluster5683FE9F",
        "CassKopClusterRole88533F86",
        "CassKopClustersaalbingressConditionJson0299F979",
        "CassKopClustersaalbingressmanifestsaalbingressServiceAccountResourceC95A1446",
        "CassKopClustersaalbingressRoleDefaultPolicyFC5473BE",
        "CassKopClustersaalbingressRole92AC458C",
        "CassKopClustersaebscsicontrollersaConditionJson818A84ED",
        "CassKopClustersaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResource4BF87613",
        "CassKopClustersaebscsicontrollersaRoleDefaultPolicyE73F45E7",
        "CassKopClustersaebscsicontrollersaRole50FB61C3",
        "CassKopClustersaexternaldnsConditionJsonF3353872",
        "CassKopClustersaexternaldnsmanifestsaexternaldnsServiceAccountResource1C55A672",
        "CassKopClustersaexternaldnsRoleDefaultPolicy479E4104",
        "CassKopClustersaexternaldnsRole9F1D457B",
        "CassKopClusterserviceaccountargoConditionJson6D4CC48C",
        "CassKopClusterserviceaccountargomanifestserviceaccountargoServiceAccountResource24FE9A43",
        "CassKopClusterserviceaccountargoRoleDefaultPolicy091BE055",
        "CassKopClusterserviceaccountargoRole4A723E2C",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAConditionJson51FFAB73",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSAmanifestserviceaccountawsforfluentbitHelmChartIRSAServiceAccountResource11DF5A05",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARoleDefaultPolicyABABBC43",
        "CassKopClusterserviceaccountawsforfluentbitHelmChartIRSARole88FFADB0",
        "CassKopClusterserviceaccountcloudWatchagentConditionJsonEB8B273E",
        "CassKopClusterserviceaccountcloudWatchagentmanifestserviceaccountcloudWatchagentServiceAccountResourceA6A9C0FD",
        "CassKopClusterserviceaccountcloudWatchagentRoleDefaultPolicy3D7349EE",
        "CassKopClusterserviceaccountcloudWatchagentRoleAA9A8C02",
        "CassKopClusterserviceaccountclusterautoscalerConditionJsonFC6A5BF0",
        "CassKopClusterserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource8C064A71",
        "CassKopClusterserviceaccountclusterautoscalerRoleDefaultPolicyDBB088C5",
        "CassKopClusterserviceaccountclusterautoscalerRole34C21866",
        "CassKopClusterserviceaccounteksutilsadminfargateConditionJson686E471D",
        "CassKopClusterserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource0D2087B6",
        "CassKopClusterserviceaccounteksutilsadminfargateRoleDefaultPolicy36573F5B",
        "CassKopClusterserviceaccounteksutilsadminfargateRole6D70F720",
        "CassKopClusterserviceaccounteksutilsadminConditionJsonEFCA82A5",
        "CassKopClusterserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource42E0B3DA",
        "CassKopClusterserviceaccounteksutilsadminRoleDefaultPolicyBB4445D6",
        "CassKopClusterserviceaccounteksutilsadminRoleA9ABA218",
        "CassKopClusterSpotASG93EF1913",
        "CassKopClusterSpotInstanceProfileF7B9468A",
        "CassKopClusterSpotInstanceRole3796F757",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterClusterSecurityGroup9D6263A8102565535BCBB0FD7",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterClusterSecurityGroup9D6263A8443456E56E7",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4102565535B1544517",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterControlPlaneSecurityGroup27A08AA4443D85E169E",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC29206DE9",
        "CassKopClusterSpotInstanceSecurityGroupfromCasskopclusterSG0E6F36F6ALLTRAFFIC88C0EC54",
        "CassKopClusterSpotInstanceSecurityGroup21F521B6",
        "CassKopClusterSpotLaunchConfigFA810380",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "CassKopCluster5683FE9F",
        },
        "Manifest": "[{\\"kind\\":\\"ClusterRole\\",\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"metadata\\":{\\"name\\":\\"system:aggregated-metrics-reader\\",\\"labels\\":{\\"rbac.authorization.k8s.io/aggregate-to-view\\":\\"true\\",\\"rbac.authorization.k8s.io/aggregate-to-edit\\":\\"true\\",\\"rbac.authorization.k8s.io/aggregate-to-admin\\":\\"true\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"metrics.k8s.io\\"],\\"resources\\":[\\"pods\\",\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"metrics-server:system:auth-delegator\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"system:auth-delegator\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"RoleBinding\\",\\"metadata\\":{\\"name\\":\\"metrics-server-auth-reader\\",\\"namespace\\":\\"kube-system\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"Role\\",\\"name\\":\\"extension-apiserver-authentication-reader\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apiregistration.k8s.io/v1beta1\\",\\"kind\\":\\"APIService\\",\\"metadata\\":{\\"name\\":\\"v1beta1.metrics.k8s.io\\"},\\"spec\\":{\\"service\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"},\\"group\\":\\"metrics.k8s.io\\",\\"version\\":\\"v1beta1\\",\\"insecureSkipTLSVerify\\":true,\\"groupPriorityMinimum\\":100,\\"versionPriority\\":100}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"template\\":{\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"labels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"metrics-server\\",\\"volumes\\":[{\\"name\\":\\"tmp-dir\\",\\"emptyDir\\":{}}],\\"containers\\":[{\\"name\\":\\"metrics-server\\",\\"image\\":\\"k8s.gcr.io/metrics-server-amd64:v0.3.6\\",\\"imagePullPolicy\\":\\"Always\\",\\"volumeMounts\\":[{\\"name\\":\\"tmp-dir\\",\\"mountPath\\":\\"/tmp\\"}]}]}}}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Service\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"kubernetes.io/name\\":\\"Metrics-server\\",\\"kubernetes.io/cluster-service\\":\\"true\\"}},\\"spec\\":{\\"selector\\":{\\"k8s-app\\":\\"metrics-server\\"},\\"ports\\":[{\\"port\\":443,\\"protocol\\":\\"TCP\\",\\"targetPort\\":443}]}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"system:metrics-server\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"nodes\\",\\"nodes/stats\\",\\"namespaces\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"system:metrics-server\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"system:metrics-server\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterCreationRoleDDB5156B",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.CasskopawscdkawseksKubectlProviderframeworkonEventC1BEF049Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "spotAsgEgressfromCasskopCassKopClusterSpotInstanceSecurityGroupC3C97090ALLTRAFFIC3A9BDC1B": Object {
      "Properties": Object {
        "Description": "allow all traffic to the cluster Security group",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopCluster5683FE9F",
            "ClusterSecurityGroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "CassKopClusterSpotInstanceSecurityGroup21F521B6",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
  },
}
`;

exports[`Test eks creation CloudFormation Snapshot 1`] = `
Object {
  "Outputs": Object {
    "AlbIngressControllerStackConfigCommandD62A3969": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks update-kubeconfig --name ",
            Object {
              "Ref": "AlbIngressControllerStackD72562D9",
            },
            " --region ",
            Object {
              "Ref": "AWS::Region",
            },
            " --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "AdminRole38563C57",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
    "AlbIngressControllerStackGetTokenCommand8713CCA3": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks get-token --cluster-name ",
            Object {
              "Ref": "AlbIngressControllerStackD72562D9",
            },
            " --region ",
            Object {
              "Ref": "AWS::Region",
            },
            " --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "AdminRole38563C57",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608ArtifactHashECA71323": Object {
      "Description": "Artifact hash for asset \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3BucketDCF19BBB": Object {
      "Description": "S3 bucket for asset \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB": Object {
      "Description": "S3 key for asset version \\"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\\"",
      "Type": "String",
    },
    "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1ArtifactHash32F5D823": Object {
      "Description": "Artifact hash for asset \\"50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1\\"",
      "Type": "String",
    },
    "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket36C546E0": Object {
      "Description": "S3 bucket for asset \\"50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1\\"",
      "Type": "String",
    },
    "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey85C003F9": Object {
      "Description": "S3 key for asset version \\"50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2ArtifactHashE86B38C7": Object {
      "Description": "Artifact hash for asset \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2": Object {
      "Description": "S3 bucket for asset \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A": Object {
      "Description": "S3 key for asset version \\"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37ArtifactHash75842D94": Object {
      "Description": "Artifact hash for asset \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3BucketD01B79A5": Object {
      "Description": "S3 bucket for asset \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00": Object {
      "Description": "S3 key for asset version \\"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\\"",
      "Type": "String",
    },
    "AssetParametersbe61b2b7162130a529fbc1a5535e04f329ea6efe2964964b34c48871063f7422ArtifactHash2F759EE2": Object {
      "Description": "Artifact hash for asset \\"be61b2b7162130a529fbc1a5535e04f329ea6efe2964964b34c48871063f7422\\"",
      "Type": "String",
    },
    "AssetParametersbe61b2b7162130a529fbc1a5535e04f329ea6efe2964964b34c48871063f7422S3Bucket97D4C77B": Object {
      "Description": "S3 bucket for asset \\"be61b2b7162130a529fbc1a5535e04f329ea6efe2964964b34c48871063f7422\\"",
      "Type": "String",
    },
    "AssetParametersbe61b2b7162130a529fbc1a5535e04f329ea6efe2964964b34c48871063f7422S3VersionKeyA55AB329": Object {
      "Description": "S3 key for asset version \\"be61b2b7162130a529fbc1a5535e04f329ea6efe2964964b34c48871063f7422\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cArtifactHash627DAAA7": Object {
      "Description": "Artifact hash for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43": Object {
      "Description": "S3 bucket for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7": Object {
      "Description": "S3 key for asset version \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersdc0a5643042eba06158dcc25e6ec987458f1f396ecef92d587b8e256b571db25ArtifactHash39472811": Object {
      "Description": "Artifact hash for asset \\"dc0a5643042eba06158dcc25e6ec987458f1f396ecef92d587b8e256b571db25\\"",
      "Type": "String",
    },
    "AssetParametersdc0a5643042eba06158dcc25e6ec987458f1f396ecef92d587b8e256b571db25S3Bucket1BABB2FA": Object {
      "Description": "S3 bucket for asset \\"dc0a5643042eba06158dcc25e6ec987458f1f396ecef92d587b8e256b571db25\\"",
      "Type": "String",
    },
    "AssetParametersdc0a5643042eba06158dcc25e6ec987458f1f396ecef92d587b8e256b571db25S3VersionKeyB30F83AE": Object {
      "Description": "S3 key for asset version \\"dc0a5643042eba06158dcc25e6ec987458f1f396ecef92d587b8e256b571db25\\"",
      "Type": "String",
    },
    "SsmParameterValueawsserviceeksoptimizedami117amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter": Object {
      "Default": "/aws/service/eks/optimized-ami/1.17/amazon-linux-2/recommended/image_id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": Object {
      "DependsOn": Array [
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3BucketDCF19BBB",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AdminRole38563C57": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackAwsAuthmanifest49810F87": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"aws-auth\\",\\"namespace\\":\\"kube-system\\"},\\"data\\":{\\"mapRoles\\":\\"[{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AdminRole38563C57",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AdminRole38563C57",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackSpotInstanceRoleE63A024A",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{SessionName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\",\\\\\\"system:node-proxier\\\\\\"]}]\\",\\"mapUsers\\":\\"[]\\",\\"mapAccounts\\":\\"[]\\"}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackClusterSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443698121CA": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackD72562D9",
            "ClusterSecurityGroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackControlPlaneSecurityGroupAB680602": Object {
      "Properties": Object {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443CBC6BD12": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackCreationRoleB9419435": Object {
      "DependsOn": Array [
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D": Object {
      "DependsOn": Array [
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackRoleC72527C3",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":cluster/CassKopTest",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":eks:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":cluster/CassKopTest/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":eks:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":fargateprofile/CassKopTest/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "iam:GetRole",
                "iam:listAttachedRolePolicies",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ec2:DescribeVpcs",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ec2:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":vpc/",
                    Object {
                      "Ref": "Vpc8378EB38",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStackCreationRoleB9419435",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStackD72562D9": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "VpcIGWD7BA715C",
        "VpcPrivateSubnet1DefaultRouteBE02A9ED",
        "VpcPrivateSubnet1RouteTableB2C5B500",
        "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
        "VpcPrivateSubnet1Subnet536B997A",
        "VpcPrivateSubnet2DefaultRoute060D2087",
        "VpcPrivateSubnet2RouteTableA678073B",
        "VpcPrivateSubnet2RouteTableAssociationA89CAD56",
        "VpcPrivateSubnet2Subnet3788AAA1",
        "VpcPublicSubnet1DefaultRoute3DA9E72A",
        "VpcPublicSubnet1EIPD7E02669",
        "VpcPublicSubnet1NATGateway4D7517AA",
        "VpcPublicSubnet1RouteTable6C95E38E",
        "VpcPublicSubnet1RouteTableAssociation97140677",
        "VpcPublicSubnet1Subnet5C2D37C4",
        "VpcPublicSubnet2DefaultRoute97F91067",
        "VpcPublicSubnet2RouteTable94F7E489",
        "VpcPublicSubnet2RouteTableAssociationDD5762D8",
        "VpcPublicSubnet2Subnet691E08A3",
        "Vpc8378EB38",
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "AttributesRevision": 2,
        "Config": Object {
          "name": "CassKopTest",
          "resourcesVpcConfig": Object {
            "endpointPrivateAccess": true,
            "endpointPublicAccess": true,
            "securityGroupIds": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
                  "GroupId",
                ],
              },
            ],
            "subnetIds": Array [
              Object {
                "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
              },
              Object {
                "Ref": "VpcPublicSubnet2Subnet691E08A3",
              },
              Object {
                "Ref": "VpcPrivateSubnet1Subnet536B997A",
              },
              Object {
                "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
              },
            ],
          },
          "roleArn": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackRoleC72527C3",
              "Arn",
            ],
          },
          "version": "1.17",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.EKSawscdkawseksClusterResourceProviderframeworkonEventFD6A5807Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackKubectlReadyBarrier32C3D398": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
        "AlbIngressControllerStackfargateprofileFargateProfile0604A12E",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "AlbIngressControllerStackD72562D9",
      ],
      "Properties": Object {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AlbIngressControllerStackNodegroupDefaultCapacity292A30F4": Object {
      "Properties": Object {
        "AmiType": "AL2_x86_64",
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": Array [
          "t3.medium",
        ],
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
            "Arn",
          ],
        },
        "ScalingConfig": Object {
          "DesiredSize": 3,
          "MaxSize": 3,
          "MinSize": 3,
        },
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackNodegroupnodegroup64293F7C": Object {
      "Properties": Object {
        "AmiType": "AL2_x86_64",
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": Array [
          "m5.large",
        ],
        "Labels": Object {
          "cdk-nodegroup": "addNodegroupCapacity1",
        },
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
            "Arn",
          ],
        },
        "NodegroupName": "CassKopTest-addNodegroupCapacity1",
        "RemoteAccess": Object {
          "Ec2SshKey": "sallaman",
        },
        "ScalingConfig": Object {
          "DesiredSize": 1,
          "MaxSize": 50,
          "MinSize": 1,
        },
        "Subnets": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
        "Tags": Object {
          "cdk-nodegroup": "addNodegroupCapacity1",
        },
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackOpenIdConnectProvider142642B9": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ClientIDList": Array [
          "sts.amazonaws.com",
        ],
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
            "Arn",
          ],
        },
        "ThumbprintList": Array [
          "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
        ],
        "Url": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackD72562D9",
            "OpenIdConnectIssuerUrl",
          ],
        },
      },
      "Type": "Custom::AWSCDKOpenIdConnectProvider",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackRoleC72527C3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackSpotASG1C672A84": Object {
      "Properties": Object {
        "LaunchConfigurationName": Object {
          "Ref": "AlbIngressControllerStackSpotLaunchConfig1FB3F831",
        },
        "MaxInstanceLifetime": 604800,
        "MaxSize": "20",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "AlbIngressControllerStackD72562D9",
                  },
                ],
              ],
            },
            "PropagateAtLaunch": true,
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "EKS/AlbIngressControllerStack/Spot",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "AlbIngressControllerStackSpotInstanceProfile34178E58": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStackSpotInstanceRoleE63A024A",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AlbIngressControllerStackSpotInstanceRoleE63A024A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "AlbIngressControllerStackD72562D9",
                  },
                ],
              ],
            },
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/AlbIngressControllerStack/Spot",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725": Object {
      "Properties": Object {
        "GroupDescription": "EKS/AlbIngressControllerStack/Spot/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "AlbIngressControllerStackD72562D9",
                  },
                ],
              ],
            },
            "Value": "owned",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/AlbIngressControllerStack/Spot",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F51025655358B74180E": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F5:1025-65535",
        "FromPort": 1025,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackD72562D9",
            "ClusterSecurityGroupId",
          ],
        },
        "ToPort": 65535,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F54439A7B47C9": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F5:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackD72562D9",
            "ClusterSecurityGroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F1025655353C6A514E": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F:1025-65535",
        "FromPort": 1025,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
            "GroupId",
          ],
        },
        "ToPort": 65535,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F443FD5E4919": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496ALLTRAFFIC156531A1": Object {
      "Properties": Object {
        "Description": "from EKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496:ALL TRAFFIC",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSclusterSG5F573986ALLTRAFFICA710ADAB": Object {
      "Properties": Object {
        "Description": "allow all traffic from cluster security group",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackD72562D9",
            "ClusterSecurityGroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AlbIngressControllerStackSpotLaunchConfig1FB3F831": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackSpotInstanceRoleE63A024A",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AlbIngressControllerStackSpotInstanceProfile34178E58",
        },
        "ImageId": Object {
          "Ref": "SsmParameterValueawsserviceeksoptimizedami117amazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t3.medium",
        "KeyName": "sallaman",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
              "GroupId",
            ],
          },
        ],
        "SpotPrice": "0.05",
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash
set -o xtrace
/etc/eks/bootstrap.sh ",
                Object {
                  "Ref": "AlbIngressControllerStackD72562D9",
                },
                " --kubelet-extra-args \\"--node-labels lifecycle=Ec2Spot --register-with-taints=spotInstance=true:PreferNoSchedule\\" --use-max-pods true
/opt/aws/bin/cfn-signal --exit-code $? --stack EKS --resource AlbIngressControllerStackSpotASG1C672A84 --region ",
                Object {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "AlbIngressControllerStackchartspotinterrupthandler255CE428": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "Chart": "aws-node-termination-handler",
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "CreateNamespace": true,
        "Namespace": "kube-system",
        "Release": "gresscontrollerstackchartspotinterrupthandlere3f908ce",
        "Repository": "https://aws.github.io/eks-charts",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
        "Values": "{\\"nodeSelector.lifecycle\\":\\"Ec2Spot\\"}",
        "Version": "0.9.5",
      },
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackfargateprofileFargateProfile0604A12E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "Config": Object {
          "clusterName": Object {
            "Ref": "AlbIngressControllerStackD72562D9",
          },
          "podExecutionRoleArn": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
              "Arn",
            ],
          },
          "selectors": Array [
            Object {
              "namespace": "fargate",
            },
            Object {
              "namespace": "fargate2",
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.EKSawscdkawseksClusterResourceProviderframeworkonEventFD6A5807Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-FargateProfile",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks-fargate-pods.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"kube-system\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"eksutils\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Namespace\\",\\"metadata\\":{\\"name\\":\\"fargate\\"}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaalbingressConditionJson6E876BB7": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:alb-ingress-controller\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaalbingressRoleABD6CA8A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStacksaalbingressConditionJson6E876BB7",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebAcl",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "wafv2:GetWebACL",
                "wafv2:GetWebACLForResource",
                "wafv2:AssociateWebACL",
                "wafv2:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "shield:DescribeProtection",
                "shield:GetSubscriptionState",
                "shield:DeleteProtection",
                "shield:CreateProtection",
                "shield:DescribeSubscription",
                "shield:ListProtections",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStacksaalbingressmanifestsaalbingressServiceAccountResource5B1C51D3": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:ebs-csi-controller-sa\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:AttachVolume",
                "ec2:CreateSnapshot",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DeleteSnapshot",
                "ec2:DeleteTags",
                "ec2:DeleteVolume",
                "ec2:DescribeInstances",
                "ec2:DescribeSnapshots",
                "ec2:DescribeTags",
                "ec2:DescribeVolumes",
                "ec2:DetachVolume",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStacksaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResourceE4CF41C6": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"ebs-csi-controller-sa\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:external-dns\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStacksaexternaldnsRole7B2F1597": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "route53:ChangeResourceRecordSets",
              "Effect": "Allow",
              "Resource": "arn:aws:route53:::hostedzone/*",
            },
            Object {
              "Action": Array [
                "route53:ListHostedZones",
                "route53:ListResourceRecordSets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStacksaexternaldnsmanifestsaexternaldnsServiceAccountResource00C1D72C": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"external-dns\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:kube-system:cluster-autoscaler\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "ec2:DescribeLaunchTemplateVersions",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:eksutils:eksutils-admin\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "firehose:PutRecordBatch",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*:*:*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*",
            },
            Object {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "es:ESHttp*",
              "Effect": "Allow",
              "Resource": "arn:aws:es:::domain/eks-casskop/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn",
          ],
        },
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":aud\\":\\"sts.amazonaws.com\\",\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackD72562D9",
                  "OpenIdConnectIssuer",
                ],
              },
              ":sub\\":\\"system:serviceaccount:fargate:eksutils-admin\\"}",
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKCfnJson",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "StringEquals": Object {
                  "Fn::GetAtt": Array [
                    "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
                    "Value",
                  ],
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": Object {
                  "Ref": "AlbIngressControllerStackOpenIdConnectProvider142642B9",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8": Object {
      "DependsOn": Array [
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "firehose:PutRecordBatch",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*:*:*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:log-group:*",
            },
            Object {
              "Action": "logs:CreateLogGroup",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "es:ESHttp*",
              "Effect": "Allow",
              "Resource": "arn:aws:es:::domain/eks-casskop/*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "Roles": Array [
          Object {
            "Ref": "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"fargate\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"eksutils-admin\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"eksutils\\",\\"labels\\":{\\"app.kubernetes.io/name\\":\\"eksutils-admin\\"},\\"annotations\\":{\\"eks.amazonaws.com/role-arn\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
                  "Arn",
                ],
              },
              "\\"}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": Object {
      "DependsOn": Array [
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3BucketD01B79A5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "iam:CreateOpenIDConnectProvider",
                    "iam:DeleteOpenIDConnectProvider",
                    "iam:UpdateOpenIDConnectProviderThumbprint",
                    "iam:AddClientIDToOpenIDConnectProvider",
                    "iam:RemoveClientIDFromOpenIDConnectProvider",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcPrivateSubnet1DefaultRouteBE02A9ED": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet1RouteTableB2C5B500",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet1Subnet536B997A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet1RouteTableB2C5B500": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet1Subnet536B997A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.32.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPrivateSubnet2DefaultRoute060D2087": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcPublicSubnet1NATGateway4D7517AA",
        },
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPrivateSubnet2RouteTableA678073B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPrivateSubnet2RouteTableA678073B",
        },
        "SubnetId": Object {
          "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPrivateSubnet2Subnet3788AAA1": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.48.0/20",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet1DefaultRoute3DA9E72A": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet1EIPD7E02669": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcPublicSubnet1NATGateway4D7517AA": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcPublicSubnet1EIPD7E02669",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcPublicSubnet1RouteTable6C95E38E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet1RouteTableAssociation97140677": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet1RouteTable6C95E38E",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet1Subnet5C2D37C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet1Subnet5C2D37C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcPublicSubnet2DefaultRoute97F91067": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcPublicSubnet2RouteTable94F7E489": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcPublicSubnet2RouteTableAssociationDD5762D8": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcPublicSubnet2RouteTable94F7E489",
        },
        "SubnetId": Object {
          "Ref": "VpcPublicSubnet2Subnet691E08A3",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcPublicSubnet2Subnet691E08A3": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.16.0/20",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "EKS/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "albingresscontrollerK8sResource87829C97": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackAwsAuthmanifest49810F87",
        "AlbIngressControllerStackchartspotinterrupthandler255CE428",
        "AlbIngressControllerStackClusterSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443698121CA",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443CBC6BD12",
        "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
        "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
        "AlbIngressControllerStackfargateprofileFargateProfile0604A12E",
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
        "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
        "AlbIngressControllerStackNodegroupDefaultCapacity292A30F4",
        "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
        "AlbIngressControllerStackNodegroupnodegroup64293F7C",
        "AlbIngressControllerStackOpenIdConnectProvider142642B9",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "AlbIngressControllerStackD72562D9",
        "AlbIngressControllerStackRoleC72527C3",
        "AlbIngressControllerStacksaalbingressConditionJson6E876BB7",
        "AlbIngressControllerStacksaalbingressmanifestsaalbingressServiceAccountResource5B1C51D3",
        "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851",
        "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
        "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8",
        "AlbIngressControllerStacksaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResourceE4CF41C6",
        "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE",
        "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
        "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147",
        "AlbIngressControllerStacksaexternaldnsmanifestsaexternaldnsServiceAccountResource00C1D72C",
        "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E",
        "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
        "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
        "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
        "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
        "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
        "AlbIngressControllerStackSpotASG1C672A84",
        "AlbIngressControllerStackSpotInstanceProfile34178E58",
        "AlbIngressControllerStackSpotInstanceRoleE63A024A",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F51025655358B74180E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F54439A7B47C9",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F1025655353C6A514E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F443FD5E4919",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496ALLTRAFFIC156531A1",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSclusterSG5F573986ALLTRAFFICA710ADAB",
        "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
        "AlbIngressControllerStackSpotLaunchConfig1FB3F831",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\",\\"extensions\\"],\\"resources\\":[\\"configmaps\\",\\"endpoints\\",\\"events\\",\\"ingresses\\",\\"ingresses/status\\",\\"services\\",\\"pods/status\\"],\\"verbs\\":[\\"create\\",\\"get\\",\\"list\\",\\"update\\",\\"watch\\",\\"patch\\"]},{\\"apiGroups\\":[\\"\\",\\"extensions\\"],\\"resources\\":[\\"nodes\\",\\"pods\\",\\"secrets\\",\\"services\\",\\"namespaces\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"alb-ingress-controller\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"},\\"name\\":\\"alb-ingress-controller\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"alb-ingress-controller\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"alb-ingress-controller\\",\\"args\\":[\\"--ingress-class=alb\\",\\"--cluster-name=",
              Object {
                "Ref": "AlbIngressControllerStackD72562D9",
              },
              "\\",\\"--feature-gates=wafv2=false\\",\\"--aws-vpc-id=",
              Object {
                "Ref": "Vpc8378EB38",
              },
              "\\",\\"--aws-region=",
              Object {
                "Ref": "AWS::Region",
              },
              "\\"],\\"env\\":null,\\"image\\":\\"docker.io/amazon/aws-alb-ingress-controller:v1.1.8\\"}],\\"serviceAccountName\\":\\"alb-ingress-controller\\"}}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": Object {
      "Properties": Object {
        "Parameters": Object {
          "referencetoEKSAlbIngressControllerStackCreationRole417D13BAArn": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackCreationRoleB9419435",
              "Arn",
            ],
          },
          "referencetoEKSAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket006B966CRef": Object {
            "Ref": "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket36C546E0",
          },
          "referencetoEKSAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey96A1D31FRef": Object {
            "Ref": "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey85C003F9",
          },
          "referencetoEKSAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3Bucket67AE6179Ref": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "referencetoEKSAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey88FDF63ARef": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParametersdc0a5643042eba06158dcc25e6ec987458f1f396ecef92d587b8e256b571db25S3Bucket1BABB2FA",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersdc0a5643042eba06158dcc25e6ec987458f1f396ecef92d587b8e256b571db25S3VersionKeyB30F83AE",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersdc0a5643042eba06158dcc25e6ec987458f1f396ecef92d587b8e256b571db25S3VersionKeyB30F83AE",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": Object {
      "Properties": Object {
        "Parameters": Object {
          "referencetoEKSAlbIngressControllerStack7DD60982Arn": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackD72562D9",
              "Arn",
            ],
          },
          "referencetoEKSAlbIngressControllerStack7DD60982ClusterSecurityGroupId": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackD72562D9",
              "ClusterSecurityGroupId",
            ],
          },
          "referencetoEKSAlbIngressControllerStackCreationRole417D13BAArn": Object {
            "Fn::GetAtt": Array [
              "AlbIngressControllerStackCreationRoleB9419435",
              "Arn",
            ],
          },
          "referencetoEKSAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3BucketD5A9963ARef": Object {
            "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2",
          },
          "referencetoEKSAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey2D6141D0Ref": Object {
            "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A",
          },
          "referencetoEKSAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3Bucket67AE6179Ref": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "referencetoEKSAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey88FDF63ARef": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
          },
          "referencetoEKSVpcPrivateSubnet1Subnet47A4B175Ref": Object {
            "Ref": "VpcPrivateSubnet1Subnet536B997A",
          },
          "referencetoEKSVpcPrivateSubnet2SubnetA3850D67Ref": Object {
            "Ref": "VpcPrivateSubnet2Subnet3788AAA1",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParametersbe61b2b7162130a529fbc1a5535e04f329ea6efe2964964b34c48871063f7422S3Bucket97D4C77B",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersbe61b2b7162130a529fbc1a5535e04f329ea6efe2964964b34c48871063f7422S3VersionKeyA55AB329",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParametersbe61b2b7162130a529fbc1a5535e04f329ea6efe2964964b34c48871063f7422S3VersionKeyA55AB329",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
    },
    "clusterautoscalerK8sResourceIRSAECFBF5A7": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
        "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"events\\",\\"endpoints\\"],\\"verbs\\":[\\"create\\",\\"patch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods/eviction\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods/status\\"],\\"verbs\\":[\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"endpoints\\"],\\"resourceNames\\":[\\"cluster-autoscaler\\"],\\"verbs\\":[\\"get\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"services\\",\\"replicationcontrollers\\",\\"persistentvolumeclaims\\",\\"persistentvolumes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"extensions\\"],\\"resources\\":[\\"replicasets\\",\\"daemonsets\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"policy\\"],\\"resources\\":[\\"poddisruptionbudgets\\"],\\"verbs\\":[\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"apps\\"],\\"resources\\":[\\"statefulsets\\",\\"replicasets\\",\\"daemonsets\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"storageclasses\\",\\"csinodes\\"],\\"verbs\\":[\\"watch\\",\\"list\\",\\"get\\"]},{\\"apiGroups\\":[\\"batch\\",\\"extensions\\"],\\"resources\\":[\\"jobs\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"patch\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"create\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resourceNames\\":[\\"cluster-autoscaler\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"get\\",\\"update\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"Role\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"verbs\\":[\\"create\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"configmaps\\"],\\"resourceNames\\":[\\"cluster-autoscaler-status\\",\\"cluster-autoscaler-priority-expander\\"],\\"verbs\\":[\\"delete\\",\\"get\\",\\"update\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-autoscaler\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"RoleBinding\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-addon\\":\\"cluster-autoscaler.addons.k8s.io\\",\\"k8s-app\\":\\"cluster-autoscaler\\"}},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"Role\\",\\"name\\":\\"cluster-autoscaler\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"cluster-autoscaler\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"app\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"cluster-autoscaler.kubernetes.io/safe-to-evict\\":\\"false\\"}},\\"spec\\":{\\"replicas\\":1,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"cluster-autoscaler\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"cluster-autoscaler\\"},\\"annotations\\":{\\"prometheus.io/scrape\\":\\"true\\",\\"prometheus.io/port\\":\\"8085\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"cluster-autoscaler\\",\\"containers\\":[{\\"image\\":\\"eu.gcr.io/k8s-artifacts-prod/autoscaling/cluster-autoscaler:v1.18.2\\",\\"name\\":\\"cluster-autoscaler\\",\\"resources\\":{\\"limits\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"300Mi\\"},\\"requests\\":{\\"cpu\\":\\"100m\\",\\"memory\\":\\"300Mi\\"}},\\"command\\":[\\"./cluster-autoscaler\\",\\"--v=4\\",\\"--stderrthreshold=info\\",\\"--cloud-provider=aws\\",\\"--skip-nodes-with-local-storage=false\\",\\"--expander=least-waste\\",\\"--node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/",
              Object {
                "Ref": "AlbIngressControllerStackD72562D9",
              },
              "\\",\\"--balance-similar-node-groups\\",\\"--skip-nodes-with-system-pods=false\\"],\\"volumeMounts\\":[{\\"name\\":\\"ssl-certs\\",\\"mountPath\\":\\"/etc/ssl/certs/ca-certificates.crt\\",\\"readOnly\\":true}],\\"imagePullPolicy\\":\\"Always\\"}],\\"volumes\\":[{\\"name\\":\\"ssl-certs\\",\\"hostPath\\":{\\"path\\":\\"/etc/ssl/certs/ca-bundle.crt\\"}}]}}}}]",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "ebscsidriverK8sResource2B9EF818": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackAwsAuthmanifest49810F87",
        "AlbIngressControllerStackchartspotinterrupthandler255CE428",
        "AlbIngressControllerStackClusterSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443698121CA",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443CBC6BD12",
        "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
        "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
        "AlbIngressControllerStackfargateprofileFargateProfile0604A12E",
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
        "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
        "AlbIngressControllerStackNodegroupDefaultCapacity292A30F4",
        "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
        "AlbIngressControllerStackNodegroupnodegroup64293F7C",
        "AlbIngressControllerStackOpenIdConnectProvider142642B9",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "AlbIngressControllerStackD72562D9",
        "AlbIngressControllerStackRoleC72527C3",
        "AlbIngressControllerStacksaalbingressConditionJson6E876BB7",
        "AlbIngressControllerStacksaalbingressmanifestsaalbingressServiceAccountResource5B1C51D3",
        "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851",
        "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
        "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8",
        "AlbIngressControllerStacksaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResourceE4CF41C6",
        "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE",
        "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
        "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147",
        "AlbIngressControllerStacksaexternaldnsmanifestsaexternaldnsServiceAccountResource00C1D72C",
        "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E",
        "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
        "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
        "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
        "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
        "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
        "AlbIngressControllerStackSpotASG1C672A84",
        "AlbIngressControllerStackSpotInstanceProfile34178E58",
        "AlbIngressControllerStackSpotInstanceRoleE63A024A",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F51025655358B74180E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F54439A7B47C9",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F1025655353C6A514E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F443FD5E4919",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496ALLTRAFFIC156531A1",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSclusterSG5F573986ALLTRAFFICA710ADAB",
        "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
        "AlbIngressControllerStackSpotLaunchConfig1FB3F831",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-external-attacher-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"csi.storage.k8s.io\\"],\\"resources\\":[\\"csinodeinfos\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"volumeattachments\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-external-provisioner-role\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"create\\",\\"delete\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"persistentvolumeclaims\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\",\\"update\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"storageclasses\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"events\\"],\\"verbs\\":[\\"list\\",\\"watch\\",\\"create\\",\\"update\\",\\"patch\\"]},{\\"apiGroups\\":[\\"snapshot.storage.k8s.io\\"],\\"resources\\":[\\"volumesnapshots\\"],\\"verbs\\":[\\"get\\",\\"list\\"]},{\\"apiGroups\\":[\\"snapshot.storage.k8s.io\\"],\\"resources\\":[\\"volumesnapshotcontents\\"],\\"verbs\\":[\\"get\\",\\"list\\"]},{\\"apiGroups\\":[\\"storage.k8s.io\\"],\\"resources\\":[\\"csinodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]},{\\"apiGroups\\":[\\"coordination.k8s.io\\"],\\"resources\\":[\\"leases\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\",\\"delete\\",\\"update\\",\\"create\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-attacher-binding\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"ebs-external-attacher-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-provisioner-binding\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"ebs-external-provisioner-role\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"ebs-csi-controller-sa\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-controller\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"replicas\\":2,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"ebs-csi-controller\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"ebs-csi-controller\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"spec\\":{\\"containers\\":[{\\"args\\":[\\"--endpoint=$(CSI_ENDPOINT)\\",\\"--logtostderr\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"CSI_ENDPOINT\\",\\"value\\":\\"unix:///var/lib/csi/sockets/pluginproxy/csi.sock\\"},{\\"name\\":\\"AWS_ACCESS_KEY_ID\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"key_id\\",\\"name\\":\\"aws-secret\\",\\"optional\\":true}}},{\\"name\\":\\"AWS_SECRET_ACCESS_KEY\\",\\"valueFrom\\":{\\"secretKeyRef\\":{\\"key\\":\\"access_key\\",\\"name\\":\\"aws-secret\\",\\"optional\\":true}}}],\\"image\\":\\"amazon/aws-ebs-csi-driver:v0.5.0\\",\\"imagePullPolicy\\":\\"IfNotPresent\\",\\"livenessProbe\\":{\\"failureThreshold\\":5,\\"httpGet\\":{\\"path\\":\\"/healthz\\",\\"port\\":\\"healthz\\"},\\"initialDelaySeconds\\":10,\\"periodSeconds\\":10,\\"timeoutSeconds\\":3},\\"name\\":\\"ebs-plugin\\",\\"ports\\":[{\\"containerPort\\":9808,\\"name\\":\\"healthz\\",\\"protocol\\":\\"TCP\\"}],\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--v=5\\",\\"--feature-gates=Topology=true\\",\\"--enable-leader-election\\",\\"--leader-election-type=leases\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/var/lib/csi/sockets/pluginproxy/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-provisioner:v1.3.0\\",\\"name\\":\\"csi-provisioner\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--v=5\\",\\"--leader-election=true\\",\\"--leader-election-type=leases\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/var/lib/csi/sockets/pluginproxy/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-attacher:v1.2.0\\",\\"name\\":\\"csi-attacher\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/csi/sockets/pluginproxy/\\",\\"name\\":\\"socket-dir\\"}]},{\\"args\\":[\\"--csi-address=/csi/csi.sock\\"],\\"image\\":\\"quay.io/k8scsi/livenessprobe:v1.1.0\\",\\"name\\":\\"liveness-probe\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"socket-dir\\"}]}],\\"nodeSelector\\":{\\"kubernetes.io/arch\\":\\"amd64\\",\\"kubernetes.io/os\\":\\"linux\\"},\\"priorityClassName\\":\\"system-cluster-critical\\",\\"serviceAccountName\\":\\"ebs-csi-controller-sa\\",\\"tolerations\\":[{\\"operator\\":\\"Exists\\"}],\\"volumes\\":[{\\"emptyDir\\":{},\\"name\\":\\"socket-dir\\"}]}}}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"DaemonSet\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs-csi-node\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"ebs-csi-node\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"ebs-csi-node\\",\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"}},\\"spec\\":{\\"affinity\\":{\\"nodeAffinity\\":{\\"requiredDuringSchedulingIgnoredDuringExecution\\":{\\"nodeSelectorTerms\\":[{\\"matchExpressions\\":[{\\"key\\":\\"eks.amazonaws.com/compute-type\\",\\"operator\\":\\"NotIn\\",\\"values\\":[\\"fargate\\"]}]}]}}},\\"containers\\":[{\\"args\\":[\\"node\\",\\"--endpoint=$(CSI_ENDPOINT)\\",\\"--logtostderr\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"CSI_ENDPOINT\\",\\"value\\":\\"unix:/csi/csi.sock\\"}],\\"image\\":\\"amazon/aws-ebs-csi-driver:v0.5.0\\",\\"livenessProbe\\":{\\"failureThreshold\\":5,\\"httpGet\\":{\\"path\\":\\"/healthz\\",\\"port\\":\\"healthz\\"},\\"initialDelaySeconds\\":10,\\"periodSeconds\\":10,\\"timeoutSeconds\\":3},\\"name\\":\\"ebs-plugin\\",\\"ports\\":[{\\"containerPort\\":9808,\\"name\\":\\"healthz\\",\\"protocol\\":\\"TCP\\"}],\\"securityContext\\":{\\"privileged\\":true},\\"volumeMounts\\":[{\\"mountPath\\":\\"/var/lib/kubelet\\",\\"mountPropagation\\":\\"Bidirectional\\",\\"name\\":\\"kubelet-dir\\"},{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"},{\\"mountPath\\":\\"/dev\\",\\"name\\":\\"device-dir\\"}]},{\\"args\\":[\\"--csi-address=$(ADDRESS)\\",\\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\\",\\"--v=5\\"],\\"env\\":[{\\"name\\":\\"ADDRESS\\",\\"value\\":\\"/csi/csi.sock\\"},{\\"name\\":\\"DRIVER_REG_SOCK_PATH\\",\\"value\\":\\"/var/lib/kubelet/plugins/ebs.csi.aws.com/csi.sock\\"}],\\"image\\":\\"quay.io/k8scsi/csi-node-driver-registrar:v1.1.0\\",\\"lifecycle\\":{\\"preStop\\":{\\"exec\\":{\\"command\\":[\\"/bin/sh\\",\\"-c\\",\\"rm -rf /registration/ebs.csi.aws.com-reg.sock /csi/csi.sock\\"]}}},\\"name\\":\\"node-driver-registrar\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"},{\\"mountPath\\":\\"/registration\\",\\"name\\":\\"registration-dir\\"}]},{\\"args\\":[\\"--csi-address=/csi/csi.sock\\"],\\"image\\":\\"quay.io/k8scsi/livenessprobe:v1.1.0\\",\\"name\\":\\"liveness-probe\\",\\"volumeMounts\\":[{\\"mountPath\\":\\"/csi\\",\\"name\\":\\"plugin-dir\\"}]}],\\"hostNetwork\\":true,\\"nodeSelector\\":{\\"kubernetes.io/arch\\":\\"amd64\\",\\"kubernetes.io/os\\":\\"linux\\"},\\"priorityClassName\\":\\"system-node-critical\\",\\"tolerations\\":[{\\"operator\\":\\"Exists\\"}],\\"volumes\\":[{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"kubelet-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/plugins/ebs.csi.aws.com/\\",\\"type\\":\\"DirectoryOrCreate\\"},\\"name\\":\\"plugin-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/var/lib/kubelet/plugins_registry/\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"registration-dir\\"},{\\"hostPath\\":{\\"path\\":\\"/dev\\",\\"type\\":\\"Directory\\"},\\"name\\":\\"device-dir\\"}]}}}},{\\"apiVersion\\":\\"storage.k8s.io/v1beta1\\",\\"kind\\":\\"CSIDriver\\",\\"metadata\\":{\\"labels\\":{\\"app.kubernetes.io/name\\":\\"aws-ebs-csi-driver\\"},\\"name\\":\\"ebs.csi.aws.com\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"attachRequired\\":true,\\"podInfoOnMount\\":false}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "eksutilsadminK8sResourceIRSA0A8791C8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
        "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"annotations\\":{\\"deployment.kubernetes.io/revision\\":\\"1\\"},\\"name\\":\\"eksutils-deployment\\",\\"labels\\":{\\"app\\":\\"eksutils\\"},\\"namespace\\":\\"eksutils\\"},\\"spec\\":{\\"replicas\\":1,\\"revisionHistoryLimit\\":10,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"eksutils\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"eksutils\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"eksutils\\",\\"image\\":\\"allamand/eksutils:latest\\",\\"imagePullPolicy\\":\\"Always\\",\\"command\\":[\\"tail\\",\\"-f\\",\\"/dev/null\\"],\\"ports\\":[{\\"containerPort\\":8080,\\"name\\":\\"http\\",\\"protocol\\":\\"TCP\\"}],\\"resources\\":{\\"requests\\":{\\"cpu\\":\\"300m\\",\\"memory\\":\\"512Mi\\"}}}],\\"enableServiceLinks\\":true,\\"restartPolicy\\":\\"Always\\",\\"schedulerName\\":\\"default-scheduler\\",\\"serviceAccountName\\":\\"eksutils-admin\\",\\"terminationGracePeriodSeconds\\":0,\\"securityContext\\":{\\"fsGroup\\":0,\\"runAsUser\\":0}}}}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin-eksutils\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-admin\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"eksutils\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "eksutilsadminfargateK8sResourceIRSA651BECE8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"annotations\\":{\\"deployment.kubernetes.io/revision\\":\\"1\\"},\\"name\\":\\"eksutils-deployment\\",\\"labels\\":{\\"app\\":\\"eksutils\\"},\\"namespace\\":\\"fargate\\"},\\"spec\\":{\\"replicas\\":1,\\"revisionHistoryLimit\\":10,\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"eksutils\\"}},\\"strategy\\":{\\"rollingUpdate\\":{\\"maxSurge\\":\\"25%\\",\\"maxUnavailable\\":\\"25%\\"},\\"type\\":\\"RollingUpdate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"eksutils\\"}},\\"spec\\":{\\"containers\\":[{\\"name\\":\\"eksutils\\",\\"image\\":\\"allamand/eksutils:latest\\",\\"imagePullPolicy\\":\\"Always\\",\\"command\\":[\\"tail\\",\\"-f\\",\\"/dev/null\\"],\\"ports\\":[{\\"containerPort\\":8080,\\"name\\":\\"http\\",\\"protocol\\":\\"TCP\\"}],\\"resources\\":{\\"requests\\":{\\"cpu\\":\\"300m\\",\\"memory\\":\\"512Mi\\"}}}],\\"enableServiceLinks\\":true,\\"restartPolicy\\":\\"Always\\",\\"schedulerName\\":\\"default-scheduler\\",\\"serviceAccountName\\":\\"eksutils-admin\\",\\"terminationGracePeriodSeconds\\":0,\\"securityContext\\":{\\"fsGroup\\":0,\\"runAsUser\\":0}}}}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"eksutils-admin-fargate\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"cluster-admin\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"eksutils-admin\\",\\"namespace\\":\\"fargate\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "extrernaldnsK8sResource0278304D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackAwsAuthmanifest49810F87",
        "AlbIngressControllerStackchartspotinterrupthandler255CE428",
        "AlbIngressControllerStackClusterSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443698121CA",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443CBC6BD12",
        "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
        "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
        "AlbIngressControllerStackfargateprofileFargateProfile0604A12E",
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
        "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
        "AlbIngressControllerStackNodegroupDefaultCapacity292A30F4",
        "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
        "AlbIngressControllerStackNodegroupnodegroup64293F7C",
        "AlbIngressControllerStackOpenIdConnectProvider142642B9",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "AlbIngressControllerStackD72562D9",
        "AlbIngressControllerStackRoleC72527C3",
        "AlbIngressControllerStacksaalbingressConditionJson6E876BB7",
        "AlbIngressControllerStacksaalbingressmanifestsaalbingressServiceAccountResource5B1C51D3",
        "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851",
        "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
        "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8",
        "AlbIngressControllerStacksaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResourceE4CF41C6",
        "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE",
        "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
        "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147",
        "AlbIngressControllerStacksaexternaldnsmanifestsaexternaldnsServiceAccountResource00C1D72C",
        "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E",
        "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
        "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
        "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
        "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
        "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
        "AlbIngressControllerStackSpotASG1C672A84",
        "AlbIngressControllerStackSpotInstanceProfile34178E58",
        "AlbIngressControllerStackSpotInstanceRoleE63A024A",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F51025655358B74180E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F54439A7B47C9",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F1025655353C6A514E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F443FD5E4919",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496ALLTRAFFIC156531A1",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSclusterSG5F573986ALLTRAFFICA710ADAB",
        "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
        "AlbIngressControllerStackSpotLaunchConfig1FB3F831",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"external-dns\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"services\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"extensions\\"],\\"resources\\":[\\"ingresses\\"],\\"verbs\\":[\\"get\\",\\"watch\\",\\"list\\"]},{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"nodes\\"],\\"verbs\\":[\\"list\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"external-dns-viewer\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"external-dns\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"external-dns\\",\\"namespace\\":\\"kube-system\\"},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"app\\":\\"external-dns\\"}},\\"strategy\\":{\\"type\\":\\"Recreate\\"},\\"template\\":{\\"metadata\\":{\\"labels\\":{\\"app\\":\\"external-dns\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"external-dns\\",\\"containers\\":[{\\"name\\":\\"external-dns\\",\\"image\\":\\"registry.opensource.zalan.do/teapot/external-dns:v0.7.1\\",\\"args\\":[\\"--source=service\\",\\"--source=ingress\\",\\"--domain-filter=demo.domain.com\\",\\"--provider=aws\\",\\"--policy=sync\\",\\"--aws-zone-type=public\\",\\"--registry=txt\\",\\"--txt-owner-id=CassKopTest\\",\\"--log-level=debug\\"]}],\\"securityContext\\":{\\"fsGroup\\":65534}}}}}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "metricsserverK8sResourceBB4DF557": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "AlbIngressControllerStackAwsAuthmanifest49810F87",
        "AlbIngressControllerStackchartspotinterrupthandler255CE428",
        "AlbIngressControllerStackClusterSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443698121CA",
        "AlbIngressControllerStackControlPlaneSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496443CBC6BD12",
        "AlbIngressControllerStackControlPlaneSecurityGroupAB680602",
        "AlbIngressControllerStackfargateprofileFargateProfilePodExecutionRole32B0685D",
        "AlbIngressControllerStackfargateprofileFargateProfile0604A12E",
        "AlbIngressControllerStackKubectlReadyBarrier32C3D398",
        "AlbIngressControllerStackmanifestnamespaceclusterautoscaler36F672B4",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminfargate49EE6D51",
        "AlbIngressControllerStackmanifestnamespaceeksutilsadminA4E6FD27",
        "AlbIngressControllerStackNodegroupDefaultCapacityNodeGroupRoleF5ABD21E",
        "AlbIngressControllerStackNodegroupDefaultCapacity292A30F4",
        "AlbIngressControllerStackNodegroupnodegroupNodeGroupRoleDF35181F",
        "AlbIngressControllerStackNodegroupnodegroup64293F7C",
        "AlbIngressControllerStackOpenIdConnectProvider142642B9",
        "AlbIngressControllerStackCreationRoleDefaultPolicyDB9E551D",
        "AlbIngressControllerStackCreationRoleB9419435",
        "AlbIngressControllerStackD72562D9",
        "AlbIngressControllerStackRoleC72527C3",
        "AlbIngressControllerStacksaalbingressConditionJson6E876BB7",
        "AlbIngressControllerStacksaalbingressmanifestsaalbingressServiceAccountResource5B1C51D3",
        "AlbIngressControllerStacksaalbingressRoleDefaultPolicyFDB47851",
        "AlbIngressControllerStacksaalbingressRoleABD6CA8A",
        "AlbIngressControllerStacksaebscsicontrollersaConditionJson8519F7D8",
        "AlbIngressControllerStacksaebscsicontrollersamanifestsaebscsicontrollersaServiceAccountResourceE4CF41C6",
        "AlbIngressControllerStacksaebscsicontrollersaRoleDefaultPolicyE51DB8CE",
        "AlbIngressControllerStacksaebscsicontrollersaRole06391A6A",
        "AlbIngressControllerStacksaexternaldnsConditionJsonAF29C147",
        "AlbIngressControllerStacksaexternaldnsmanifestsaexternaldnsServiceAccountResource00C1D72C",
        "AlbIngressControllerStacksaexternaldnsRoleDefaultPolicy4BE8A23E",
        "AlbIngressControllerStacksaexternaldnsRole7B2F1597",
        "AlbIngressControllerStackserviceaccountclusterautoscalerConditionJsonDDD2BFDC",
        "AlbIngressControllerStackserviceaccountclusterautoscalermanifestserviceaccountclusterautoscalerServiceAccountResource3764D2B1",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleDefaultPolicy1F75EA2E",
        "AlbIngressControllerStackserviceaccountclusterautoscalerRoleB4581C4F",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateConditionJsonC7A2592E",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargatemanifestserviceaccounteksutilsadminfargateServiceAccountResource959304EB",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRoleDefaultPolicyD3C91FE8",
        "AlbIngressControllerStackserviceaccounteksutilsadminfargateRole9FECD4A3",
        "AlbIngressControllerStackserviceaccounteksutilsadminConditionJson0C3777E3",
        "AlbIngressControllerStackserviceaccounteksutilsadminmanifestserviceaccounteksutilsadminServiceAccountResource365CB757",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleDefaultPolicyEA3A0C97",
        "AlbIngressControllerStackserviceaccounteksutilsadminRoleC73F84AF",
        "AlbIngressControllerStackSpotASG1C672A84",
        "AlbIngressControllerStackSpotInstanceProfile34178E58",
        "AlbIngressControllerStackSpotInstanceRoleE63A024A",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F51025655358B74180E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackClusterSecurityGroup6C2DB6F54439A7B47C9",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F1025655353C6A514E",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackControlPlaneSecurityGroup43FD685F443FD5E4919",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSAlbIngressControllerStackSpotInstanceSecurityGroupAA311496ALLTRAFFIC156531A1",
        "AlbIngressControllerStackSpotInstanceSecurityGroupfromEKSclusterSG5F573986ALLTRAFFICA710ADAB",
        "AlbIngressControllerStackSpotInstanceSecurityGroupCB789725",
        "AlbIngressControllerStackSpotLaunchConfig1FB3F831",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "AlbIngressControllerStackD72562D9",
        },
        "Manifest": "[{\\"kind\\":\\"ClusterRole\\",\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"metadata\\":{\\"name\\":\\"system:aggregated-metrics-reader\\",\\"labels\\":{\\"rbac.authorization.k8s.io/aggregate-to-view\\":\\"true\\",\\"rbac.authorization.k8s.io/aggregate-to-edit\\":\\"true\\",\\"rbac.authorization.k8s.io/aggregate-to-admin\\":\\"true\\"}},\\"rules\\":[{\\"apiGroups\\":[\\"metrics.k8s.io\\"],\\"resources\\":[\\"pods\\",\\"nodes\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"metrics-server:system:auth-delegator\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"system:auth-delegator\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1beta1\\",\\"kind\\":\\"RoleBinding\\",\\"metadata\\":{\\"name\\":\\"metrics-server-auth-reader\\",\\"namespace\\":\\"kube-system\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"Role\\",\\"name\\":\\"extension-apiserver-authentication-reader\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]},{\\"apiVersion\\":\\"apiregistration.k8s.io/v1beta1\\",\\"kind\\":\\"APIService\\",\\"metadata\\":{\\"name\\":\\"v1beta1.metrics.k8s.io\\"},\\"spec\\":{\\"service\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"},\\"group\\":\\"metrics.k8s.io\\",\\"version\\":\\"v1beta1\\",\\"insecureSkipTLSVerify\\":true,\\"groupPriorityMinimum\\":100,\\"versionPriority\\":100}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ServiceAccount\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}},{\\"apiVersion\\":\\"apps/v1\\",\\"kind\\":\\"Deployment\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"spec\\":{\\"selector\\":{\\"matchLabels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"template\\":{\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"labels\\":{\\"k8s-app\\":\\"metrics-server\\"}},\\"spec\\":{\\"serviceAccountName\\":\\"metrics-server\\",\\"volumes\\":[{\\"name\\":\\"tmp-dir\\",\\"emptyDir\\":{}}],\\"containers\\":[{\\"name\\":\\"metrics-server\\",\\"image\\":\\"k8s.gcr.io/metrics-server-amd64:v0.3.6\\",\\"imagePullPolicy\\":\\"Always\\",\\"volumeMounts\\":[{\\"name\\":\\"tmp-dir\\",\\"mountPath\\":\\"/tmp\\"}]}]}}}},{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"Service\\",\\"metadata\\":{\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"kubernetes.io/name\\":\\"Metrics-server\\",\\"kubernetes.io/cluster-service\\":\\"true\\"}},\\"spec\\":{\\"selector\\":{\\"k8s-app\\":\\"metrics-server\\"},\\"ports\\":[{\\"port\\":443,\\"protocol\\":\\"TCP\\",\\"targetPort\\":443}]}},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRole\\",\\"metadata\\":{\\"name\\":\\"system:metrics-server\\"},\\"rules\\":[{\\"apiGroups\\":[\\"\\"],\\"resources\\":[\\"pods\\",\\"nodes\\",\\"nodes/stats\\",\\"namespaces\\"],\\"verbs\\":[\\"get\\",\\"list\\",\\"watch\\"]}]},{\\"apiVersion\\":\\"rbac.authorization.k8s.io/v1\\",\\"kind\\":\\"ClusterRoleBinding\\",\\"metadata\\":{\\"name\\":\\"system:metrics-server\\"},\\"roleRef\\":{\\"apiGroup\\":\\"rbac.authorization.k8s.io\\",\\"kind\\":\\"ClusterRole\\",\\"name\\":\\"system:metrics-server\\"},\\"subjects\\":[{\\"kind\\":\\"ServiceAccount\\",\\"name\\":\\"metrics-server\\",\\"namespace\\":\\"kube-system\\"}]}]",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "AlbIngressControllerStackCreationRoleB9419435",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.EKSawscdkawseksKubectlProviderframeworkonEvent4C260864Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
